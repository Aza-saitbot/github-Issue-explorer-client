[
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31742",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31742/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31742/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31742/events",
    "html_url": "https://github.com/facebook/react/issues/31742",
    "id": 2735365586,
    "node_id": "I_kwDOAJy2Ks6jCl3S",
    "number": 31742,
    "title": "[Compiler Bug]: Ref values may not be accessed during render when using `mergeRefs`",
    "user": {
      "login": "NeilTheFisher",
      "id": 47160993,
      "node_id": "MDQ6VXNlcjQ3MTYwOTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/47160993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NeilTheFisher",
      "html_url": "https://github.com/NeilTheFisher",
      "followers_url": "https://api.github.com/users/NeilTheFisher/followers",
      "following_url": "https://api.github.com/users/NeilTheFisher/following{/other_user}",
      "gists_url": "https://api.github.com/users/NeilTheFisher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NeilTheFisher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NeilTheFisher/subscriptions",
      "organizations_url": "https://api.github.com/users/NeilTheFisher/orgs",
      "repos_url": "https://api.github.com/users/NeilTheFisher/repos",
      "events_url": "https://api.github.com/users/NeilTheFisher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NeilTheFisher/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T09:32:53Z",
    "updated_at": "2024-12-12T09:32:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvhgJcsNgB5CTAG4A+ABIJKlCPgDqOSoTkB6RaoDc4gL7jxx4-lxkA1gjYkYEALb4AFrlxMMGR7AHMmXF8oACMAOjhvYwB3CAArXARnLzJU4y8EGFCEAFopEjBjaO1ovLImOmMweGN64nRY3DBxWgZmVnx8woQAJVIwOQAVFX5xfHxYhfrMKFxR8uR8flGyRli1yZV8AB98emISeoRCQQBtAF1xQQ3t3f2p4-wX3D3SAGEyLTRHbOA4iWb4BJ0MA0JjUApXACSdGWqzG+AAvPglis1mBYhc4TB+AAhCAQSgIMh0QSWOjgpgkTYEjJSQhIlG42IUuihSL4OSYgCMwjEEjmkOh+AuMGhawxUthLMRyJxYxuAAY7rTwXMpDIYO4mDLUYyjic6FRKLS5jY6RI9bIpfRGCw2IMioRcfwyiKdVKcJsJQRsSb8BBGcz4WyVSawL6xXMsYz+LhOJgEOGsTG5ejc-gAOQ9F2sfPxxPlrMc0je0g0v02-CaMAIJObENrMsVub8dukfBkMCfSm7dgrMhVEakADy0VSCEYkw+Fq0KkE8VgUjoBExZWtFdt5YP+CstNt3WdfTY7AKRTWv282Doblw+hgznqoX4wEkfasG2-ZTPMO3z7GoEzsAAMgAIsoACiFL5FuhxWJ2QZEMoOanM2az8MulB1nacz2PgmADmAH6OL4LZlIOKRvoO0ScPgSQwGQfAUZECA+PU-ZOr0rrgg6Br8mYP4kOiwDupO5Svu+PL8EIGKHDcZQADToUoax3IIVgqGUjgINCJhmCop62HQRaXgMN7SWAskfgcMwSEUsYbIp6KHFswE-CQoInGcpCXNc9yPGC9rSI6UlegssQuV6ggEWeFkXq6HA2XeD6sM+xKeK4dBfmJx7-mJQE7CBpByGBkEwUo8Fcc+yGoawkpmJhUDYdWeEEeCxGYJ4E4+FRUiCRFwkKMoYkSVFYw1iQ6mtbWun6RkRmmMopnWOIIBWEAA\n\n### Repro steps\n\nI was previously getting an error saying, \"Ref values (the current property) may not be accessed during render.\" However, passing a function to access the refs seems to work as a solution since there is no eslint error now.\r\n\r\nIn the repro, wrapping the refs in a function return doesn't change any functionality so I'm finding this issue to be a little odd.\r\n\r\nThe error doesn't always appear with every component. I couldn't find a reason why.\r\n\r\nThis seems to be similar to https://github.com/facebook/react/issues/31290\n\n### How often does this bug happen?\n\nSometimes\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31742/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31741",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31741/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31741/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31741/events",
    "html_url": "https://github.com/facebook/react/pull/31741",
    "id": 2734886106,
    "node_id": "PR_kwDOAJy2Ks6E9rhg",
    "number": 31741,
    "title": "[Flight Parcel] Align with more recent changes",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T05:37:28Z",
    "updated_at": "2024-12-12T05:47:26Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31741",
      "html_url": "https://github.com/facebook/react/pull/31741",
      "diff_url": "https://github.com/facebook/react/pull/31741.diff",
      "patch_url": "https://github.com/facebook/react/pull/31741.patch",
      "merged_at": null
    },
    "body": "Follow up to #31725.\r\n\r\nI diffed against the Turbopack one to find any unexpected discrepancies. Some parts are forked enough that it's hard to diff but I think I got most of it.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31741/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31740",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31740/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31740/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31740/events",
    "html_url": "https://github.com/facebook/react/issues/31740",
    "id": 2734858509,
    "node_id": "I_kwDOAJy2Ks6jAqEN",
    "number": 31740,
    "title": "Bug: Nested Suspense Fallback Not Triggering for Child Component",
    "user": {
      "login": "LeoAnt02",
      "id": 21208398,
      "node_id": "MDQ6VXNlcjIxMjA4Mzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/21208398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LeoAnt02",
      "html_url": "https://github.com/LeoAnt02",
      "followers_url": "https://api.github.com/users/LeoAnt02/followers",
      "following_url": "https://api.github.com/users/LeoAnt02/following{/other_user}",
      "gists_url": "https://api.github.com/users/LeoAnt02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LeoAnt02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LeoAnt02/subscriptions",
      "organizations_url": "https://api.github.com/users/LeoAnt02/orgs",
      "repos_url": "https://api.github.com/users/LeoAnt02/repos",
      "events_url": "https://api.github.com/users/LeoAnt02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LeoAnt02/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T05:23:36Z",
    "updated_at": "2024-12-12T05:23:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\nReact version: 18\r\n\r\nSteps To Reproduce\r\n\t1.\tCreate a component with nested <Suspense> boundaries:\r\n\t•\tParent <Suspense> wraps a parent component (DataParent) with a fallback.\r\n\t•\tChild <Suspense> wraps a child component (DataChild) with its own fallback.\r\n\t2.\tPass data-fetching promises to both parent and child components using React.use() or async/await to simulate Suspense-compatible data fetching.\r\n\t3.\tEnsure the child <Suspense> fallback is rendered only when the parent data is resolved but the child data is still loading.\r\n\r\nHere’s a sample implementation:\r\n\r\n```\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Suspense } from \"react\";\r\n\r\ninterface ParentProps {\r\n  dataPromise: Promise<{ items: string[] }>;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Parent({ dataPromise, children }: ParentProps) {\r\n  const data = React.use(dataPromise);\r\n\r\n  return (\r\n    <div className=\"parent\">\r\n      <h2>Parent Data</h2>\r\n      <ul>\r\n        {data.items.map((item, idx) => (\r\n          <li key={idx}>{item}</li>\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n```\r\ninterface ChildProps {\r\n  detailPromise: Promise<{ detail: string }>;\r\n}\r\n\r\nasync function Child({ detailPromise }: ChildProps) {\r\n  const detail = await detailPromise;\r\n\r\n  return (\r\n    <div className=\"child\">\r\n      <h3>Child Detail</h3>\r\n      <p>{detail.detail}</p>\r\n    </div>\r\n  );\r\n}\r\n```\r\n```\r\n\r\nexport default function SuspenseExamplePage() {\r\n  const parentDataPromise = new Promise<{ items: string[] }>((resolve) => {\r\n    setTimeout(() => resolve({ items: [\"Item 1\", \"Item 2\"] }), 1000);\r\n  });\r\n\r\n  const childDataPromise = new Promise<{ detail: string }>((resolve) => {\r\n    setTimeout(() => resolve({ detail: \"Detailed information\" }), 2000);\r\n  });\r\n\r\n  return (\r\n    <Suspense fallback={<div>Loading Parent...</div>}>\r\n      <Parent dataPromise={parentDataPromise}>\r\n        <Suspense fallback={<div>Loading Child...</div>}>\r\n          <Child detailPromise={childDataPromise} />\r\n        </Suspense>\r\n      </Parent>\r\n    </Suspense>\r\n  );\r\n}\r\n```\r\n\r\n## The current behavior\r\n\r\nWhen loading the parent and child components:\r\n\t•\tThe fallback for the parent (\"Loading Parent...\") renders as expected while the parent data is loading.\r\n\t•\tAfter the parent data resolves, the child fallback (\"Loading Child...\") does not trigger.\r\n\t•\tInstead, the parent content renders immediately, and the child fallback is skipped altogether.\r\n\t\r\n\t\r\n\r\n## The expected behavior\r\n\r\nWhen the parent data resolves and the child data is still loading:\r\n\t•\tThe parent content should render normally.\r\n\t•\tThe child fallback (\"Loading Child...\") should render until the child data is ready.\r\n\t\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31740/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31739",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31739/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31739/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31739/events",
    "html_url": "https://github.com/facebook/react/issues/31739",
    "id": 2734764035,
    "node_id": "I_kwDOAJy2Ks6jATAD",
    "number": 31739,
    "title": "Cant read props of undefined [*reading \"getStackAddendum\"]",
    "user": {
      "login": "ndiuky",
      "id": 136149081,
      "node_id": "U_kgDOCB14WQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/136149081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ndiuky",
      "html_url": "https://github.com/ndiuky",
      "followers_url": "https://api.github.com/users/ndiuky/followers",
      "following_url": "https://api.github.com/users/ndiuky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ndiuky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ndiuky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ndiuky/subscriptions",
      "organizations_url": "https://api.github.com/users/ndiuky/orgs",
      "repos_url": "https://api.github.com/users/ndiuky/repos",
      "events_url": "https://api.github.com/users/ndiuky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ndiuky/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T04:31:17Z",
    "updated_at": "2024-12-12T04:31:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After building the application on the production version. I get the err `Cannot read properties of undefined [reading \"getStackAddendum\"]`. I split the application into microfronts that are linked using the webpack module federation.\r\n\r\nBut the error here is because ReactDebugCurrentFrame is undefined.\r\n\r\nProblem doesn't appear in the dev version, only in the production version. \r\n\r\n```js\r\nconst printWarning = (level, format, args) => {\r\n      {\r\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n        if (stack !== '') {\r\n          format += '%s';\r\n          args = args.concat([stack]);\r\n        } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n        var argsWithFormat = args.map(function (item) {\r\n          return String(item);\r\n        }); // Careful: RN currently depends on this prefix\r\n\r\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n        // breaks IE9: https://github.com/facebook/react/issues/13610\r\n        // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n      }\r\n    }\r\n```\r\n\r\nfirst app package.json\r\n```json\r\n{\r\n  \"name\": \"first\",\r\n  \"version\": \"1.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@joint/core\": \"^4.0.4\",\r\n    \"@mui/icons-material\": \"^5.11.6\",\r\n    \"@mui/lab\": \"^5.0.0-alpha.125\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@mui/x-date-pickers\": \"^5.0.18\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"@types/react\": \"^18.0.27\",\r\n    \"@types/react-dom\": \"^18.0.10\",\r\n    \"chart.js\": \"^4.4.3\",\r\n    \"color\": \"^4.2.3\",\r\n    \"date-fns\": \"^2.29.3\",\r\n    \"history\": \"^5.3.0\",\r\n    \"js-cookie\": \"^3.0.5\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"notistack\": \"^3.0.1\",\r\n    \"path-to-regexp\": \"^6.2.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-chartjs-2\": \"^5.2.0\",\r\n    \"react-custom-scrollbars-2\": \"^4.5.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"^5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run make-types && npm run generate-env && craco start --verbose\",\r\n    \"make-types\": \"make-federated-types -o public/@types\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-shell-app\",\r\n    \"serve\": \"serve -s build\",\r\n    \"mock-api\": \"node \\\"src/mocks/api.js\\\"\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\",\r\n    \"devcert\": \"set HTTPS=true&&set SSL_CRT_FILE=../wes-shell-app/cert.crt&&set SSL_KEY_FILE=../wes-shell-app/cert.key\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"@types/color\": \"^3.0.6\",\r\n    \"@types/lodash\": \"^4.14.191\",\r\n    \"connect-api-mocker\": \"^1.10.0\",\r\n    \"express\": \"^4.18.2\",\r\n    \"i18next\": \"^22.5.1\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"jwt-decode\": \"^3.1.2\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"react-barcode-reader\": \"^0.0.2\",\r\n    \"react-i18next\": \"^12.1.5\",\r\n    \"tailwindcss\": \"^3.3.3\",\r\n    \"zod\": \"^3.20.2\"\r\n  }\r\n}\r\n```\r\n\r\nsecond app package.json \r\n```json\r\n{\r\n  \"name\": \"second\",\r\n  \"version\": \"2.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@mui/icons-material\": \"^5.11.16\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"external-remotes-plugin\": \"^1.0.0\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run generate-env && craco start --verbose\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-voice-picking-app\",\r\n    \"serve\": \"serve -s build -p 3003\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"i18next\": \"^23.2.11\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"react-i18next\": \"^13.0.2\",\r\n    \"tailwindcss\": \"^3.3.3\"\r\n  }\r\n}\r\n```",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31739/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31739/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31738",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31738/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31738/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31738/events",
    "html_url": "https://github.com/facebook/react/pull/31738",
    "id": 2734469547,
    "node_id": "PR_kwDOAJy2Ks6E8NcW",
    "number": 31738,
    "title": "[Flight] Color and badge non-primary environments",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:44:11Z",
    "updated_at": "2024-12-12T02:34:20Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31738",
      "html_url": "https://github.com/facebook/react/pull/31738",
      "diff_url": "https://github.com/facebook/react/pull/31738.diff",
      "patch_url": "https://github.com/facebook/react/pull/31738.patch",
      "merged_at": null
    },
    "body": "Stacked on #31737.\r\n\r\n<img width=\"987\" alt=\"Screenshot 2024-12-11 at 8 41 15 PM\" src=\"https://github.com/user-attachments/assets/438379a9-0138-4d02-a53a-419402839558\" />\r\n\r\nWhen mixing environments (like \"use cache\" or third party RSC) it's useful to color and badge those components differently to differentiate.\r\n\r\nI'm not putting them in separate tracks because when they do actually execute, like cache misses or third party RSCs, they behave like they're part of the same tree. ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31738/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31737",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31737/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31737/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31737/events",
    "html_url": "https://github.com/facebook/react/pull/31737",
    "id": 2734435577,
    "node_id": "PR_kwDOAJy2Ks6E8F1d",
    "number": 31737,
    "title": "[Flight] Emit Deduped Server Components Marker",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:24:20Z",
    "updated_at": "2024-12-12T01:49:34Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31737",
      "html_url": "https://github.com/facebook/react/pull/31737",
      "diff_url": "https://github.com/facebook/react/pull/31737.diff",
      "patch_url": "https://github.com/facebook/react/pull/31737.patch",
      "merged_at": null
    },
    "body": "Stacked on #31736.\r\n\r\n<img width=\"1223\" alt=\"Screenshot 2024-12-11 at 8 21 12 PM\" src=\"https://github.com/user-attachments/assets/a7cbc04b-c831-476b-aa2f-baddec9461c9\" />\r\n\r\nThis emits a placeholder when we're deduping a component. This starts when the parent's self time ends, where we would've started rendering this component if it wasn't already started. The end time is when the actual render ends since the parent is also blocked by it.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31737/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31736",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31736/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31736/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31736/events",
    "html_url": "https://github.com/facebook/react/pull/31736",
    "id": 2734169627,
    "node_id": "PR_kwDOAJy2Ks6E7LPb",
    "number": 31736,
    "title": "[Flight] Sort Server Components Track Group ahead of Client Scheduler/Components Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T22:35:10Z",
    "updated_at": "2024-12-11T22:47:29Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31736",
      "html_url": "https://github.com/facebook/react/pull/31736",
      "diff_url": "https://github.com/facebook/react/pull/31736.diff",
      "patch_url": "https://github.com/facebook/react/pull/31736.patch",
      "merged_at": null
    },
    "body": "Stacked on #31735.\r\n\r\nThis ensures that Server Components Track comes first. Since it's typically rendered first on the server for initial load and then flows into scheduler and client components work. Also puts it closer to the Network and further away from \"Main\" JS.\r\n\r\n<img width=\"769\" alt=\"Screenshot 2024-12-11 at 5 31 41 PM\" src=\"https://github.com/user-attachments/assets/7198db0f-075e-4a78-8ea4-3bfbf06727cb\" />\r\n\r\nSame trick as in #31615.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31736/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31735",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31735/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31735/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31735/events",
    "html_url": "https://github.com/facebook/react/pull/31735",
    "id": 2734085199,
    "node_id": "PR_kwDOAJy2Ks6E64SY",
    "number": 31735,
    "title": "[Flight] Stack Parallel Components in Separate Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T21:41:34Z",
    "updated_at": "2024-12-11T22:53:40Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31735",
      "html_url": "https://github.com/facebook/react/pull/31735",
      "diff_url": "https://github.com/facebook/react/pull/31735.diff",
      "patch_url": "https://github.com/facebook/react/pull/31735.patch",
      "merged_at": null
    },
    "body": "Stacked on https://github.com/facebook/react/pull/31729\r\n\r\n<img width=\"1436\" alt=\"Screenshot 2024-12-11 at 3 36 41 PM\" src=\"https://github.com/user-attachments/assets/0a201913-0076-4bbf-be18-8f1df6c58313\" />\r\n\r\nThe Server Components visualization is currently a tree flame graph where parent spans the child. This makes it equivalent to the Client Components visualization.\r\n\r\nHowever, since Server Components can be async and therefore parallel, we need to do something when two children are executed in parallel. This PR bumps parallel children into a separate track and then within that track if that child has more children it can grow within that track.\r\n\r\nI currently just cut off more than 10 parallel tracks.\r\n\r\nSynchronous Server Components are still in sequence but it's unlikely because even a simple microtasky Async Component is still parallel.\r\n\r\n<img width=\"959\" alt=\"Screenshot 2024-12-11 at 4 31 17 PM\" src=\"https://github.com/user-attachments/assets/5ad6a7f8-7fa0-46dc-af51-78caf9849176\" />\r\n\r\nI think this is probably not a very useful visualization for Server Components but we can try it out.\r\n\r\nI'm also going to try a different visualization where parent-child relationship is horizontal and parallel vertical instead, but it might not be possible to make that line up in this tool. It makes it a little harder to see how much different components (including their children) impact the overall tree. If that's the only visualization it's also confusing why it's different dimensions than the Client Component version.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31735/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31734",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31734/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31734/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31734/events",
    "html_url": "https://github.com/facebook/react/issues/31734",
    "id": 2734059580,
    "node_id": "I_kwDOAJy2Ks6i9nA8",
    "number": 31734,
    "title": "[React 19] Discard ongoing action?",
    "user": {
      "login": "MrFlashAccount",
      "id": 61194245,
      "node_id": "MDQ6VXNlcjYxMTk0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61194245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrFlashAccount",
      "html_url": "https://github.com/MrFlashAccount",
      "followers_url": "https://api.github.com/users/MrFlashAccount/followers",
      "following_url": "https://api.github.com/users/MrFlashAccount/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrFlashAccount/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrFlashAccount/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrFlashAccount/subscriptions",
      "organizations_url": "https://api.github.com/users/MrFlashAccount/orgs",
      "repos_url": "https://api.github.com/users/MrFlashAccount/repos",
      "events_url": "https://api.github.com/users/MrFlashAccount/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrFlashAccount/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T21:25:19Z",
    "updated_at": "2024-12-11T21:27:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\nI tried to implement _search as you type_ component (see: https://codesandbox.io/p/devbox/k3dvwn) and found that the `useActionState` + `startTransition` doesn't discard outdated requests, e.g. if I type `apple`, `useActionState` will wait for the ongoing request to finish, before starting next one, to get results of the `ap` react waits for `a` to resolve.\r\n\r\nIs it an expected behavior? How can I discard ongoing request?\r\n\r\n\r\nhttps://github.com/user-attachments/assets/f0b6f508-a97e-4feb-b50d-ee95736e03fb\r\n\r\n\r\n\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31734/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31732",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31732/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31732/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31732/events",
    "html_url": "https://github.com/facebook/react/issues/31732",
    "id": 2733203893,
    "node_id": "I_kwDOAJy2Ks6i6WG1",
    "number": 31732,
    "title": "Bug: There is no re-render on DOM events in Node.js test runner",
    "user": {
      "login": "krutoo",
      "id": 13140130,
      "node_id": "MDQ6VXNlcjEzMTQwMTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13140130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krutoo",
      "html_url": "https://github.com/krutoo",
      "followers_url": "https://api.github.com/users/krutoo/followers",
      "following_url": "https://api.github.com/users/krutoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/krutoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krutoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krutoo/subscriptions",
      "organizations_url": "https://api.github.com/users/krutoo/orgs",
      "repos_url": "https://api.github.com/users/krutoo/repos",
      "events_url": "https://api.github.com/users/krutoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krutoo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:54:59Z",
    "updated_at": "2024-12-12T07:34:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nHi, I tried to write tests with Node.js test runner with `jsdom` but this is not working.\r\n\r\nInitial render and mount works fine.\r\n\r\nBut when event is dispatched (click for example) there is no re-render of component.\r\n\r\nReact version: 18.3.1\r\n\r\n#### Guides I used\r\n\r\n- https://nodejs.org/en/learn/test-runner/using-test-runner\r\n\r\n## Steps To Reproduce\r\n\r\n0. Have Node.js 20+ \r\n1. Clone repository https://github.com/krutoo/node-test-runner-react-dom\r\n2. `npm i`\r\n3. `npm run test`\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://github.com/krutoo/node-test-runner-react-dom\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThere is no re-render of component after event is dispatched and as result test is failed\r\n\r\n## The expected behavior\r\n\r\nTest is done successfully ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31732/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31731",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31731/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31731/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31731/events",
    "html_url": "https://github.com/facebook/react/issues/31731",
    "id": 2733130184,
    "node_id": "I_kwDOAJy2Ks6i6EHI",
    "number": 31731,
    "title": "Bug: \"reject is not a function\" in react-server",
    "user": {
      "login": "SafeAndS0und",
      "id": 30162348,
      "node_id": "MDQ6VXNlcjMwMTYyMzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30162348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SafeAndS0und",
      "html_url": "https://github.com/SafeAndS0und",
      "followers_url": "https://api.github.com/users/SafeAndS0und/followers",
      "following_url": "https://api.github.com/users/SafeAndS0und/following{/other_user}",
      "gists_url": "https://api.github.com/users/SafeAndS0und/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SafeAndS0und/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SafeAndS0und/subscriptions",
      "organizations_url": "https://api.github.com/users/SafeAndS0und/orgs",
      "repos_url": "https://api.github.com/users/SafeAndS0und/repos",
      "events_url": "https://api.github.com/users/SafeAndS0und/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SafeAndS0und/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:26:10Z",
    "updated_at": "2024-12-12T09:23:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We've been investigating a `t is not a function` error in production logs of our Next.js application. After some digging, we found that the `t` corresponds to `reject` in [react-server/src/ReactFlightReplyServer.js:166](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-server/src/ReactFlightReplyServer.js#L166).   \r\n\r\nThe error is our case appears when someone (likely a bot) sends a POST request to a server action, as if it was submitting a form on our page, but it sends the JSON values for `$ACTION_1:0` and `$ACTION_1:1` with the quotation marks encoded as HTML entities (probably this is the trigger for the error, could be something with newline characters though, not sure). \r\n\r\nReact version: 19.0.0-rc.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Download/fork [this sandbox](https://codesandbox.io/p/devbox/blissful-gauss-6cvc8v) locally. \r\n2. Install dependencies `npm i --legacy-peer-deps --force`\r\n3. Run in development `npm run dev`\r\n4. Download, unzip and put this [requestBody.zip](https://github.com/user-attachments/files/18098248/requestBody.zip) into the project.\r\n5. Send a curl request using the requestBody file: \r\n```\r\ncurl -X POST http://localhost:3000/ -H 'Content-Type: multipart/form-data; boundary=60eb717e9b0dc' --data-binary @requestBody\r\n```\r\n6. Watch the logs of the application, you should see the mentioned error: \r\n![image](https://github.com/user-attachments/assets/ac3b9665-c7f9-49a7-96d3-291e5c18dbc0)\r\n\r\n\r\n## The current behavior\r\nThere's an unhandled error in the logs when action's metadata comes in unexpected format.\r\n\r\n## The expected behavior\r\nThe situation is handled, and there's no errors in the logs. \r\n\r\n## Possible solution\r\nSimilar to what's been added by @sebmarkbage in [ReactFlightClient.js](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-client/src/ReactFlightClient.js#L262) in [this commit](https://github.com/facebook/react/pull/28847/commits/8e33e92aee3c00def90d2ab189eca8bca7380703#diff-4bc3e2f66cfadc63bd7abcc0387fcc7c1373092f832cac1b34614d8cddca5eacR229-R231), wrap the reject call in a `if (reject)`. Additionally, the underlying error which is thrown by this reject (`SyntaxError: Expected property name or '}' in JSON at position 1`), should also be handled.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31731/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31730",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31730/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31730/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31730/events",
    "html_url": "https://github.com/facebook/react/issues/31730",
    "id": 2732767061,
    "node_id": "I_kwDOAJy2Ks6i4rdV",
    "number": 31730,
    "title": "Bug: Updating state during render when using `useSyncExternalStore` throws `Cannot update a component (Component) while rendering a different component (Component)`",
    "user": {
      "login": "astoilkov",
      "id": 884810,
      "node_id": "MDQ6VXNlcjg4NDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/884810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astoilkov",
      "html_url": "https://github.com/astoilkov",
      "followers_url": "https://api.github.com/users/astoilkov/followers",
      "following_url": "https://api.github.com/users/astoilkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/astoilkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astoilkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astoilkov/subscriptions",
      "organizations_url": "https://api.github.com/users/astoilkov/orgs",
      "repos_url": "https://api.github.com/users/astoilkov/repos",
      "events_url": "https://api.github.com/users/astoilkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astoilkov/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T11:53:25Z",
    "updated_at": "2024-12-11T11:53:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open the Console before you work with the page\r\n2. Click the \"increment\" button 5 times\r\n3. You will see the error in the Console\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/p/sandbox/polished-wind-d9dyvj\r\n\r\n## The current behavior\r\n\r\nWhen updating the store it throws `Cannot update a component (`Component`) while rendering a different component (`Component`)`.\r\n\r\n## The expected behavior\r\n\r\nIt should work the same way `useState` works when calling `setState` during render.\r\n\r\n## Notes\r\n\r\nThis is coming from a user of `use-local-storage-state` hook that has around ~500k monthly downloads — https://github.com/astoilkov/use-local-storage-state/issues/77.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31730/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31730/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31729",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31729/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31729/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31729/events",
    "html_url": "https://github.com/facebook/react/pull/31729",
    "id": 2731760287,
    "node_id": "PR_kwDOAJy2Ks6Ey0-S",
    "number": 31729,
    "title": "[Flight] Log Server Component into Performance Track",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T04:02:27Z",
    "updated_at": "2024-12-11T19:44:12Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31729",
      "html_url": "https://github.com/facebook/react/pull/31729",
      "diff_url": "https://github.com/facebook/react/pull/31729.diff",
      "patch_url": "https://github.com/facebook/react/pull/31729.patch",
      "merged_at": null
    },
    "body": "<img width=\"966\" alt=\"Screenshot 2024-12-10 at 10 49 19 PM\" src=\"https://github.com/user-attachments/assets/27a21bdf-86b9-4203-893b-89523e698138\">\r\n\r\nThis emits a tree view visualization of the timing information for each Server Component provided in the RSC payload.\r\n\r\nThe unique thing about this visualization is that the end time of each Server Component spans the end of the last child. Now what is conceptually a blocking child is kind of undefined in RSC. E.g. if you're not using a Promise on the client, or if it is wrapped in Suspense, is it really blocking the parent?\r\n\r\nHere I reconstruct parent-child relationship by which chunks reference other chunks. A child can belong to more than one parent like when we dedupe the result of a Server Component.\r\n\r\nThen I wait until the whole RSC payload has streamed in, and then I traverse the tree collecting the end time from children as I go and emit the `performance.measure()` calls on the way up.\r\n\r\nThere's more work for this visualization in follow ups but this is the basics. For example, since the Server Component time span includes async work it's possible for siblings to execute their span in parallel (Foo and Bar in the screenshot are parallel siblings). To deal with this we need to spawn parallel work into separate tracks. Each one can be deep due to large trees. This can makes this type of visualization unwieldy when you have a lot of parallelism. Therefore I also plan another flatter Timeline visualization in a follow up.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31729/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31728",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31728/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31728/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31728/events",
    "html_url": "https://github.com/facebook/react/issues/31728",
    "id": 2731717866,
    "node_id": "I_kwDOAJy2Ks6i0rTq",
    "number": 31728,
    "title": "Bug: Critical Security Vulnerability in ReactSharedInternals Usage, Remote code execution",
    "user": {
      "login": "cybergazer",
      "id": 165423274,
      "node_id": "U_kgDOCdwoqg",
      "avatar_url": "https://avatars.githubusercontent.com/u/165423274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cybergazer",
      "html_url": "https://github.com/cybergazer",
      "followers_url": "https://api.github.com/users/cybergazer/followers",
      "following_url": "https://api.github.com/users/cybergazer/following{/other_user}",
      "gists_url": "https://api.github.com/users/cybergazer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cybergazer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cybergazer/subscriptions",
      "organizations_url": "https://api.github.com/users/cybergazer/orgs",
      "repos_url": "https://api.github.com/users/cybergazer/repos",
      "events_url": "https://api.github.com/users/cybergazer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cybergazer/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T03:20:00Z",
    "updated_at": "2024-12-11T03:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Critical Security Vulnerability in ReactSharedInternals Usage\r\n\r\n## Issue Overview\r\n\r\nA severe and potentially exploitable security vulnerability has been identified in the way ReactSharedInternals is accessed and utilized within React. The current implementation makes unsafe assumptions about the immutability and integrity of the ReactSharedInternals object, introducing significant risks to applications built on React.\r\n\r\n## Vulnerability Details\r\n\r\nThe vulnerability stems from the unrestricted access to the ReactSharedInternals object and its associated dispatcher. Here are the critical issues:\r\n\r\n## 1. Tampering or Injection Risks\r\n\r\nThe ReactSharedInternals object is globally accessible within React's internal environment, making it susceptible to:\r\n\r\nMalicious Tampering: Attackers with access to the build environment, or those who exploit vulnerabilities in the application, can alter ReactSharedInternals or its dispatcher to:\r\n\r\nInject malicious code.\r\n\r\nHijack hooks behavior to execute unauthorized logic.\r\n\r\nCode Injection Attacks: In environments where React code is shared or executed (e.g., server-side rendering, multi-tenant environments), the global nature of ReactSharedInternals creates a critical attack vector for modifying application behavior.\r\n\r\n**Null or Invalid Dispatcher**\r\n\r\nThe resolveDispatcher() function assumes that the dispatcher is correctly configured during render phases. However:\r\n\r\nIf dispatcher is null or tampered with, applications may crash or exhibit undefined behavior.\r\n\r\nMalicious actors could manipulate the dispatcher lifecycle to intercept and exfiltrate sensitive data, including component state, props, or context values.\r\n\r\n**Leaking Debug Information**\r\n\r\nIn __DEV__ environments, error handling mechanisms (e.g., console.error) inadvertently reveal implementation details about ReactSharedInternals. This information could:\r\n\r\nAssist attackers in reverse-engineering React internals.\r\n\r\nHighlight potential weak points for exploitation.\r\n\r\n4. Unstable and Experimental APIs\r\n\r\nFunctions relying on experimental or unstable APIs (e.g., useMemoCache, unstable_useContextWithBailout) compound the risk:\r\n\r\nThese APIs may not have the same security scrutiny as stable React APIs, making them more vulnerable to edge-case bugs and exploits.\r\n\r\nImpact\r\n\r\nThis vulnerability has wide-reaching implications:\r\n\r\nCompromise of Application Integrity: A successful exploit could allow attackers to alter core React behavior, inject malicious functionality, or disrupt rendering logic.\r\n\r\nData Leakage: Sensitive application data managed by React (state, context) could be intercepted or exposed.\r\n\r\nSupply Chain Attacks: Any environment where the ReactSharedInternals object is accessible to external entities is at risk of exploitation.\r\n\r\nGiven the pervasiveness of React in modern web applications, this issue has the potential to impact a significant number of projects globally.\r\n\r\nSteps to Reproduce\r\n\r\nAccess the ReactSharedInternals object via React.__REACT_DEVTOOLS_GLOBAL_HOOK__.ReactSharedInternals in a React environment.\r\n\r\nModify the dispatcher to inject arbitrary behavior.\r\n\r\nObserve the altered behavior of hooks (e.g., useState, useEffect) or trigger a crash by nullifying the dispatcher.\r\n\r\nSuggested Mitigation\r\n\r\nRestrict Access to ReactSharedInternals:\r\n\r\nPrevent external access to ReactSharedInternals outside of React’s internal scope.\r\n\r\nHarden access control for the dispatcher object.\r\n\r\nValidate Dispatcher:\r\n\r\nAdd strict checks to ensure dispatcher integrity before usage.\r\n\r\nLog and fail gracefully if tampering is detected.\r\n\r\nRemove or Secure Experimental APIs:\r\n\r\nDeprecate experimental APIs where possible or provide safer, stable alternatives.\r\n\r\nHarden Development (__DEV__) Paths:\r\n\r\nAvoid leaking sensitive implementation details in __DEV__ environments.\r\n\r\nUrgency\r\n\r\nThis issue poses an extreme security risk due to its potential for widespread exploitation. It is imperative that the React team prioritize this vulnerability and release a patch as soon as possible. Given React’s ubiquity in the web development ecosystem, even a small window of exposure could have catastrophic consequences.\r\n\r\nTimeline for Action\r\n\r\nWe recommend:\r\n\r\nImmediate triage and verification.\r\n\r\nA high-priority patch within 7 days.\r\n\r\nClear communication to the community regarding the fix and steps to secure applications.\r\n\r\nWe strongly urge the React team to treat this issue with the utmost seriousness and prioritize a resolution immediately.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31728/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31727",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31727/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31727/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31727/events",
    "html_url": "https://github.com/facebook/react/issues/31727",
    "id": 2731460356,
    "node_id": "I_kwDOAJy2Ks6izscE",
    "number": 31727,
    "title": "[Compiler Bug]: Compiler fails to memoize hooks with no hook calls",
    "user": {
      "login": "billyjanitsch",
      "id": 1158733,
      "node_id": "MDQ6VXNlcjExNTg3MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1158733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/billyjanitsch",
      "html_url": "https://github.com/billyjanitsch",
      "followers_url": "https://api.github.com/users/billyjanitsch/followers",
      "following_url": "https://api.github.com/users/billyjanitsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/billyjanitsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/billyjanitsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/billyjanitsch/subscriptions",
      "organizations_url": "https://api.github.com/users/billyjanitsch/orgs",
      "repos_url": "https://api.github.com/users/billyjanitsch/repos",
      "events_url": "https://api.github.com/users/billyjanitsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/billyjanitsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T23:35:42Z",
    "updated_at": "2024-12-11T09:10:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://github.com/billyjanitsch/react-compiler-hook-detection-bug\n\n### Repro steps\n\nGiven the following three custom hooks:\r\n\r\n```tsx\r\nimport {useDebugValue} from 'react'\r\n\r\nfunction useFoo() {\r\n  return () => 'foo'\r\n}\r\n\r\nfunction useBar() {\r\n  useDebugValue('bar')\r\n  return () => 'bar'\r\n}\r\n\r\nfunction useBaz() {\r\n  return useCallback(() => 'baz', [])\r\n}\r\n```\r\n\r\nI'd expect the compiler to memoize all of them, but it only memoizes `useBar` and `useBaz`:\r\n\r\n```tsx\r\nimport { useCallback, useDebugValue } from \"react\";\r\nfunction useFoo() {\r\n  return () => \"foo\";\r\n}\r\nfunction useBar() {\r\n  useDebugValue(\"bar\");\r\n  return _temp;\r\n}\r\nfunction _temp() {\r\n  return \"bar\";\r\n}\r\nfunction useBaz() {\r\n  return _temp2;\r\n}\r\nfunction _temp2() {\r\n  return \"baz\";\r\n}\r\n```\r\n\r\nI'm guessing that it's because the compiler's hook detection logic looks for at least one hook call in the function body. I understand that it generally doesn't make sense to write a custom hook that doesn't use any other hooks, but the exception is when the custom hook would have used only `useMemo` and/or `useCallback`, such as `useBaz`. I expect the compiler to let me remove those hooks without losing memoization.\r\n\r\nThis doesn't reproduce in the playground. I'm not sure why.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31727/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31723",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31723/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31723/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31723/events",
    "html_url": "https://github.com/facebook/react/pull/31723",
    "id": 2730902358,
    "node_id": "PR_kwDOAJy2Ks6Ev5Cw",
    "number": 31723,
    "title": "[compiler] Allow sequence expressions in for loops, and prevent DCE of declarations when the variable is reassigned in a value block",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T18:37:11Z",
    "updated_at": "2024-12-10T18:40:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31723",
      "html_url": "https://github.com/facebook/react/pull/31723",
      "diff_url": "https://github.com/facebook/react/pull/31723.diff",
      "patch_url": "https://github.com/facebook/react/pull/31723.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #31723\n* #31712\n\nSummary:\nTwo somewhat unrelated fixes that combine to allow loops like `for (i =1, j =1; ...)` to be handled. We introduce a new case for building reactive functions when a block prior to a goto doesnt generate a value; this is the case for the fallthrough of sequence blocks in for loop inits, since the value is not read by anything.\n\nWe also make it so that we don't DCE declarations of variables that are written to in value blocks. If we did DCE such declarations, we would then later convert the reassignment to a const declaration--but declarations in value blocks are banned.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31723/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31722",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31722/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31722/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31722/events",
    "html_url": "https://github.com/facebook/react/issues/31722",
    "id": 2730704928,
    "node_id": "I_kwDOAJy2Ks6iw0Ag",
    "number": 31722,
    "title": "Bug: `react-hooks/rules-of-hooks` does not allow `_Component` names underscore prefix for 'private naming convention'",
    "user": {
      "login": "700software",
      "id": 20981023,
      "node_id": "MDQ6VXNlcjIwOTgxMDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20981023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/700software",
      "html_url": "https://github.com/700software",
      "followers_url": "https://api.github.com/users/700software/followers",
      "following_url": "https://api.github.com/users/700software/following{/other_user}",
      "gists_url": "https://api.github.com/users/700software/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/700software/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/700software/subscriptions",
      "organizations_url": "https://api.github.com/users/700software/orgs",
      "repos_url": "https://api.github.com/users/700software/repos",
      "events_url": "https://api.github.com/users/700software/events{/privacy}",
      "received_events_url": "https://api.github.com/users/700software/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710375792,
        "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
        "name": "Type: Discussion",
        "color": "fef2c0",
        "default": false,
        "description": null
      },
      {
        "id": 1249821345,
        "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
        "name": "Component: ESLint Rules",
        "color": "f7afdb",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T17:12:34Z",
    "updated_at": "2024-12-11T17:38:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nLatest version `eslint-plugin-react-hooks@5.1.0`\r\n\r\n## Steps To Reproduce\r\n\r\n```\r\nexport function _SomeComponentWeNotWantUsedOutsideThisDirectory() {\r\n  const result = useSomeHook();\r\n}\r\n```\r\n\r\n## The current behavior\r\nProduces eslint error\r\n\r\n> React Hook \"useSomeHook\" is called in function \"_SomeComponentWeNotWantUsedOutsideThisDirectory\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\". eslint([react-hooks/rules-of-hooks](https://reactjs.org/docs/hooks-rules.html))\r\n\r\n\r\n## The expected behavior\r\n\r\nNo eslint warning, because we have clearly indicated it is a component using the uppercase letter after the underscore prefix.\r\n\r\n## Proposed solution\r\n\r\nhttps://github.com/facebook/react/blob/4a8fc0f92e0f75257962522b51a938bf4dfda77a/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js#L49\r\n\r\ncould be easily changed to\r\n\r\n```ts\r\n  return node.type === 'Identifier' && /^_?[A-Z]/.test(node.name);\r\n```\r\n\r\nI have thought about whether it should be a config option but I'm leaning towards 'less is more'. Either  way, I'm willing to make PR for this and test coverage but need confirmation you guys will take this into consideration before I put in the work.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31722/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31721",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31721/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31721/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31721/events",
    "html_url": "https://github.com/facebook/react/pull/31721",
    "id": 2730552444,
    "node_id": "PR_kwDOAJy2Ks6Euqk7",
    "number": 31721,
    "title": "Fix canary version strings",
    "user": {
      "login": "jackpope",
      "id": 8965173,
      "node_id": "MDQ6VXNlcjg5NjUxNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackpope",
      "html_url": "https://github.com/jackpope",
      "followers_url": "https://api.github.com/users/jackpope/followers",
      "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
      "organizations_url": "https://api.github.com/users/jackpope/orgs",
      "repos_url": "https://api.github.com/users/jackpope/repos",
      "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackpope/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T16:09:04Z",
    "updated_at": "2024-12-10T21:39:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31721",
      "html_url": "https://github.com/facebook/react/pull/31721",
      "diff_url": "https://github.com/facebook/react/pull/31721.diff",
      "patch_url": "https://github.com/facebook/react/pull/31721.patch",
      "merged_at": null
    },
    "body": "We're still publishing RCs and creating canary version strings using the RC naming convention. Setting the `canaryChannelLabel` back to canary fixes the version names and tags after the 19 stable release.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31721/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31719",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31719/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31719/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31719/events",
    "html_url": "https://github.com/facebook/react/issues/31719",
    "id": 2730053571,
    "node_id": "I_kwDOAJy2Ks6iuU_D",
    "number": 31719,
    "title": "Bug: Detached Elements Observed When Toggling Content with ReactDOM.createPortal()",
    "user": {
      "login": "suraj-pachakar",
      "id": 60176976,
      "node_id": "MDQ6VXNlcjYwMTc2OTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/60176976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suraj-pachakar",
      "html_url": "https://github.com/suraj-pachakar",
      "followers_url": "https://api.github.com/users/suraj-pachakar/followers",
      "following_url": "https://api.github.com/users/suraj-pachakar/following{/other_user}",
      "gists_url": "https://api.github.com/users/suraj-pachakar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suraj-pachakar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suraj-pachakar/subscriptions",
      "organizations_url": "https://api.github.com/users/suraj-pachakar/orgs",
      "repos_url": "https://api.github.com/users/suraj-pachakar/repos",
      "events_url": "https://api.github.com/users/suraj-pachakar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suraj-pachakar/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T12:56:47Z",
    "updated_at": "2024-12-10T12:56:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We observed a possible memory leak when using `ReactDOM.createPortal()` to render components. The issue occurs when toggling the portal content between a `RadioGroup` and the text `Loading...`. If the `RadioGroup` is interacted with before toggling, some DOM elements are not properly cleaned up, leaving detached nodes in memory.\r\n\r\nHowever, if no interaction happens with the `RadioGroup`, the content toggles without any memory issues.\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Visit the [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl).\r\n2. Click on the Load Content button to render the `RadioGroup`.\r\n3. Interact with the `RadioGroup` by selecting the Other option. (eg: option B)\r\n4. Click on the Unload Content button to remove the `RadioGroup`.\r\n5. Open the Memory tab in the browser developer tools and trigger Garbage Collection.\r\n6. Select the **Detached Elements** profiling type and take a snapshot of the memory to observe detached nodes.\r\n\r\nLink to code example: [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl)\r\n\r\n## The current behavior\r\nDetached elements are present in the memory snapshot after interacting with the `RadioGroup` and toggling it off. This indicates a potential memory leak caused by `ReactDOM.createPortal()`.\r\n![image](https://github.com/user-attachments/assets/9dc8fdf2-fb68-4089-9f9c-5d5198c1f95f)\r\n\r\n\r\n## The expected behavior\r\nDetached nodes should not be present after toggling the `RadioGroup` and triggering garbage collection, regardless of interactions.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31719/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31718",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31718/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31718/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31718/events",
    "html_url": "https://github.com/facebook/react/issues/31718",
    "id": 2729618823,
    "node_id": "I_kwDOAJy2Ks6isq2H",
    "number": 31718,
    "title": "Bug: `select` menu won't update highlight when options change",
    "user": {
      "login": "paalss",
      "id": 39744024,
      "node_id": "MDQ6VXNlcjM5NzQ0MDI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/39744024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paalss",
      "html_url": "https://github.com/paalss",
      "followers_url": "https://api.github.com/users/paalss/followers",
      "following_url": "https://api.github.com/users/paalss/following{/other_user}",
      "gists_url": "https://api.github.com/users/paalss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paalss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paalss/subscriptions",
      "organizations_url": "https://api.github.com/users/paalss/orgs",
      "repos_url": "https://api.github.com/users/paalss/repos",
      "events_url": "https://api.github.com/users/paalss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paalss/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T09:58:11Z",
    "updated_at": "2024-12-10T10:01:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If a `<select>`'s options changes (e.g. if options are loaded asynchronously) while the menu is open, the `<select>` won't re-examine its options to update its highlight position (`selectedIndex`). \r\n\r\nIn the Codesandbox example below, I have a select menu that will have its options swapped out 1 second after it receives focus. This is to simulate the fetch call that I'm doing in my real app.\r\n\r\nReact version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n**Browser:** Either use Google Chrome or Microsoft Edge, it's not reproducible in Firefox.\r\n\r\nBrowser versions:\r\n\r\n- Google Chrome – Version 131.0.6778.109 (Official Build) (64-bit)\r\n- Microsoft Edge – Version 131.0.2903.86 (Official build) (64-bit)\r\n\r\n\r\n1. Open [this Codesandbox](https://codesandbox.io/p/sandbox/select-menu-with-dynamic-options-forked-nvt488?workspaceId=ws_DVJY22si5M9kiWeZb4Ybth)\r\n2. Click on the select menu\r\n3. Watch as the complete options list replaces the old one\r\n\r\n1 ![image](https://github.com/user-attachments/assets/69a7ca1a-2c01-42b2-ae4e-9f08be431a2b) 2 ![image](https://github.com/user-attachments/assets/dba3eb0e-4043-4ba7-96a7-64f6ff583529) 3 ![image](https://github.com/user-attachments/assets/25b9f490-ddf4-4698-bc91-beb16fddfcc5)\r\n\r\n## The current behavior\r\n\r\nWhen the new options replaces the old ones, the highlight position stays on the first element. Only after closing and re-opening the menu, the highlight goes to the option with `value=\"italy\"`\r\n\r\n## The expected behavior\r\n\r\nI want the select menu to highlight the `value=\"italy\"`  option after options are replaced",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31718/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31717",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31717/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31717/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31717/events",
    "html_url": "https://github.com/facebook/react/issues/31717",
    "id": 2729305831,
    "node_id": "I_kwDOAJy2Ks6irebn",
    "number": 31717,
    "title": "[eslint-plugin-react-hooks] v5.1.0 was released without any changes in github",
    "user": {
      "login": "aqeelat",
      "id": 5212744,
      "node_id": "MDQ6VXNlcjUyMTI3NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5212744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aqeelat",
      "html_url": "https://github.com/aqeelat",
      "followers_url": "https://api.github.com/users/aqeelat/followers",
      "following_url": "https://api.github.com/users/aqeelat/following{/other_user}",
      "gists_url": "https://api.github.com/users/aqeelat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aqeelat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aqeelat/subscriptions",
      "organizations_url": "https://api.github.com/users/aqeelat/orgs",
      "repos_url": "https://api.github.com/users/aqeelat/repos",
      "events_url": "https://api.github.com/users/aqeelat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aqeelat/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T07:50:10Z",
    "updated_at": "2024-12-11T08:44:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The newer version is released https://www.npmjs.com/package/eslint-plugin-react-hooks/v/5.1.0\r\n\r\nHowever, there aren't any changes in the package dir here as of the time of posting the issue.\r\nhttps://github.com/facebook/react/tree/372ec00c0384cd2089651154ea7c67693ee3f2a5/packages/eslint-plugin-react-hooks\r\n\r\nThis is concerning because it could indicate that someone published on behalf of the react team.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31717/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31712",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31712/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31712/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31712/events",
    "html_url": "https://github.com/facebook/react/pull/31712",
    "id": 2728149079,
    "node_id": "PR_kwDOAJy2Ks6EmT9E",
    "number": 31712,
    "title": "[compiler] Implement support for non-declaration for initializers",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T20:04:20Z",
    "updated_at": "2024-12-10T18:39:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31712",
      "html_url": "https://github.com/facebook/react/pull/31712",
      "diff_url": "https://github.com/facebook/react/pull/31712.diff",
      "patch_url": "https://github.com/facebook/react/pull/31712.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #31723\n* __->__ #31712\n\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31712/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31708",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31708/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31708/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31708/events",
    "html_url": "https://github.com/facebook/react/issues/31708",
    "id": 2726551905,
    "node_id": "I_kwDOAJy2Ks6ig-Fh",
    "number": 31708,
    "title": "Bug: useOptimistic",
    "user": {
      "login": "olegdunkan",
      "id": 1710435,
      "node_id": "MDQ6VXNlcjE3MTA0MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1710435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olegdunkan",
      "html_url": "https://github.com/olegdunkan",
      "followers_url": "https://api.github.com/users/olegdunkan/followers",
      "following_url": "https://api.github.com/users/olegdunkan/following{/other_user}",
      "gists_url": "https://api.github.com/users/olegdunkan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olegdunkan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olegdunkan/subscriptions",
      "organizations_url": "https://api.github.com/users/olegdunkan/orgs",
      "repos_url": "https://api.github.com/users/olegdunkan/repos",
      "events_url": "https://api.github.com/users/olegdunkan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olegdunkan/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-09T09:58:35Z",
    "updated_at": "2024-12-09T20:16:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version:19.0.0\r\n[I got example from react.dev](https://react.dev/reference/react/useOptimistic) slightly modified it.\r\n \r\nNow `key` attribute derive value from data (message)\r\n```\r\n        <div key={message.id}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n```\r\n\r\n## Steps To Reproduce\r\n\r\n1.[Open link](https://codesandbox.io/p/sandbox/react-dev-forked-5hddwt)\r\n2.Send new message\r\n3.Open console\r\n\r\n## The current behavior\r\nOn the image below we can see duplicating list of messages from [I got example from react.dev](https://react.dev/reference/react/useOptimistic).\r\n![image](https://github.com/user-attachments/assets/4868e7d0-7eb1-4e29-ac11-eff9047982f7)\r\n\r\nThere was no error in [I got example from react.dev](https://react.dev/reference/react/useOptimistic) because `key` gets values from `index`, `index` is always unique.\r\n\r\n        <div key={index}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n\r\nCode that is slightly modified by me print out following (from console):\r\n\r\n> Encountered two children with the same key, `8908d3a9-13b7-4576-bf85-e850f7ab2c1c`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version\r\n\r\nI don't know the reason of that behaviour but I see that `updateFn` in `useOptimistic` is called with `new message` twice:\r\n1. First time after `addOptimisticMessage` is called, \r\n2. Second time while `Thread` component is re-rendered.\r\n\r\n\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31708/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31706",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31706/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31706/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31706/events",
    "html_url": "https://github.com/facebook/react/pull/31706",
    "id": 2726176299,
    "node_id": "PR_kwDOAJy2Ks6EfcDO",
    "number": 31706,
    "title": "perf(SSR): remove regexp in function escapeHtml",
    "user": {
      "login": "ShuiRuTian",
      "id": 28779355,
      "node_id": "MDQ6VXNlcjI4Nzc5MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28779355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShuiRuTian",
      "html_url": "https://github.com/ShuiRuTian",
      "followers_url": "https://api.github.com/users/ShuiRuTian/followers",
      "following_url": "https://api.github.com/users/ShuiRuTian/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShuiRuTian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShuiRuTian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShuiRuTian/subscriptions",
      "organizations_url": "https://api.github.com/users/ShuiRuTian/orgs",
      "repos_url": "https://api.github.com/users/ShuiRuTian/repos",
      "events_url": "https://api.github.com/users/ShuiRuTian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShuiRuTian/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-12-09T06:59:59Z",
    "updated_at": "2024-12-10T07:19:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31706",
      "html_url": "https://github.com/facebook/react/pull/31706",
      "diff_url": "https://github.com/facebook/react/pull/31706.diff",
      "patch_url": "https://github.com/facebook/react/pull/31706.patch",
      "merged_at": null
    },
    "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn test --debug --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nRegular expression is slow, removing them in escapeHtml should make things faster\r\n\r\nI did similar change in vue at first: https://github.com/vuejs/core/pull/12507#issue-2724750870\r\n\r\nThen I took a look at react and found vue copied react's implementation, then why not let react have this improvement too?\r\n\r\n## How did you test this change?\r\n\r\nSome simple benchmark by me and @Justineo\r\n\r\nhttps://jsbench.me/rqm4ehfndc/1, shows for simple cases, it's 2x~3x faster\r\nhttps://jsben.ch/pbGau, shows for random string, it's 1.1x faster\r\n\r\nAlso cc @aickin, who refactor escapeHtml 8 years ago, maybe you might have interest in this PR too\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31706/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31705",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31705/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31705/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31705/events",
    "html_url": "https://github.com/facebook/react/issues/31705",
    "id": 2726112761,
    "node_id": "I_kwDOAJy2Ks6ifS35",
    "number": 31705,
    "title": "Bug: memory leak caused by alternate fiber tree",
    "user": {
      "login": "y122972",
      "id": 28836754,
      "node_id": "MDQ6VXNlcjI4ODM2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/28836754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y122972",
      "html_url": "https://github.com/y122972",
      "followers_url": "https://api.github.com/users/y122972/followers",
      "following_url": "https://api.github.com/users/y122972/following{/other_user}",
      "gists_url": "https://api.github.com/users/y122972/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y122972/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y122972/subscriptions",
      "organizations_url": "https://api.github.com/users/y122972/orgs",
      "repos_url": "https://api.github.com/users/y122972/repos",
      "events_url": "https://api.github.com/users/y122972/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y122972/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T06:22:53Z",
    "updated_at": "2024-12-09T06:22:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 19\r\n\r\n## Steps To Reproduce\r\n\r\n```typescript\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nconst App = () => {\r\n  const [obj, setObj] = useState<any>({});\r\n  const [count, setCount] = useState(0);\r\n\r\n  const refresh = useCallback(() => {\r\n    const newObj = {\r\n      buffer: new Uint8Array(100_000_000),\r\n      count: count + 1,\r\n    };\r\n    setObj(newObj);\r\n    setCount((pre) => pre + 1);\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={refresh}>new obj({count})</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n```\r\n\r\n## The current behavior\r\n<img width=\"732\" alt=\"image\" src=\"https://github.com/user-attachments/assets/503bfa91-0bae-46cd-a4d7-a103f8cd4e2f\">\r\n\r\n## The expected behavior\r\nrelease the `memoizedState` / `baseState` of alternate fiber tree.\r\n\r\n## Confusion\r\nI know it's not a good way to store a big state using `useState`. But it's a bug or some feature?\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31705/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31704",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31704/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31704/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31704/events",
    "html_url": "https://github.com/facebook/react/issues/31704",
    "id": 2725991162,
    "node_id": "I_kwDOAJy2Ks6ie1L6",
    "number": 31704,
    "title": "[React 19]",
    "user": {
      "login": "Melissa1181",
      "id": 175780127,
      "node_id": "U_kgDOCnoxHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/175780127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Melissa1181",
      "html_url": "https://github.com/Melissa1181",
      "followers_url": "https://api.github.com/users/Melissa1181/followers",
      "following_url": "https://api.github.com/users/Melissa1181/following{/other_user}",
      "gists_url": "https://api.github.com/users/Melissa1181/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Melissa1181/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Melissa1181/subscriptions",
      "organizations_url": "https://api.github.com/users/Melissa1181/orgs",
      "repos_url": "https://api.github.com/users/Melissa1181/repos",
      "events_url": "https://api.github.com/users/Melissa1181/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Melissa1181/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T05:00:41Z",
    "updated_at": "2024-12-09T05:51:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31704/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31703",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31703/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31703/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31703/events",
    "html_url": "https://github.com/facebook/react/issues/31703",
    "id": 2725940076,
    "node_id": "I_kwDOAJy2Ks6ieots",
    "number": 31703,
    "title": "Bug: useEffect Without Dependencies Not Executed Correctly After setState ",
    "user": {
      "login": "SirM2z",
      "id": 12137804,
      "node_id": "MDQ6VXNlcjEyMTM3ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12137804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SirM2z",
      "html_url": "https://github.com/SirM2z",
      "followers_url": "https://api.github.com/users/SirM2z/followers",
      "following_url": "https://api.github.com/users/SirM2z/following{/other_user}",
      "gists_url": "https://api.github.com/users/SirM2z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SirM2z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SirM2z/subscriptions",
      "organizations_url": "https://api.github.com/users/SirM2z/orgs",
      "repos_url": "https://api.github.com/users/SirM2z/repos",
      "events_url": "https://api.github.com/users/SirM2z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SirM2z/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T04:17:15Z",
    "updated_at": "2024-12-12T09:06:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.3.1 & 19.0.0\r\n\r\n## Steps To Reproduce\r\nConsider the following example code, where there are two useEffect hooks. \r\n- The first useEffect executes a setFlag, with the value of setFlag being the same as the initial value. The second parameter is an empty array. \r\n- The second useEffect simply logs a message without passing a second argument (i.e., without dependencies) to make it easier to observe the execution behavior. \r\n\r\nThe JSX part of the component contains only a div with a click event, which triggers a setState when clicked.\r\n```jsx\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function App(props) {\r\n  const [index, setIndex] = useState(0);\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  console.log('index', index);\r\n\r\n  useEffect(() => {\r\n    console.log('setFlag invoke');\r\n    setFlag(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect no dependencies invoke');\r\n    return () => {\r\n      console.log('useEffect no dependencies hook destroyed');\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        console.log('-------------- click --------------');\r\n        setIndex(pre => pre + 1);\r\n      }}\r\n      style={{ color: 'red' }}\r\n    >\r\n      button {index} {Date.now()}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://playcode.io/2185135\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nAfter the click event is triggered, the component's render does not occur in tandem with the second useEffect. Render occurs twice, but the second useEffect executes only once.\r\n<img width=\"627\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9ffc9e58-4e89-4bd8-b407-e67837634554\">\r\n\r\n## The expected behavior\r\nAfter the click event is triggered, the component's render should occur in tandem with the second useEffect. Render should happen twice, and the second useEffect should also execute twice.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31703/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31702",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31702/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31702/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31702/events",
    "html_url": "https://github.com/facebook/react/issues/31702",
    "id": 2725265879,
    "node_id": "I_kwDOAJy2Ks6icEHX",
    "number": 31702,
    "title": "[Compiler Bug]: server components built externally by the compiler error when rendered in app",
    "user": {
      "login": "DanielOrtel",
      "id": 19431728,
      "node_id": "MDQ6VXNlcjE5NDMxNzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/19431728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielOrtel",
      "html_url": "https://github.com/DanielOrtel",
      "followers_url": "https://api.github.com/users/DanielOrtel/followers",
      "following_url": "https://api.github.com/users/DanielOrtel/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielOrtel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielOrtel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielOrtel/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielOrtel/orgs",
      "repos_url": "https://api.github.com/users/DanielOrtel/repos",
      "events_url": "https://api.github.com/users/DanielOrtel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielOrtel/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T14:09:14Z",
    "updated_at": "2024-12-08T15:51:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://github.com/DanielOrtel/compiler-bug\r\n\r\n### Repro steps\r\n\r\nI'm building an esm UI library and ran into a weird issue with one component when adding react compiler to the build pipeline(which uses rollup with babel). You can check the reproduction repo above, steps:\r\n- set node 20.18.0 if not set automatically\r\n- run `yarn install`\r\n- run `yarn test-compiler-error` // this will build the library and start a bare-bones next app\r\n- open localhost:3000\\\r\n- app should error out with the following:\r\n```\r\nTypeError: Cannot read properties of undefined (reading 'H')\r\n    at IconsRoot (../../libraries/ui/.dist/icons-root/index.js:12:72)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at stringify (<anonymous>)\r\n    at stringify (<anonymous>)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\r\ndigest: \"2235527820\"\r\n  15 |       require(\"next/dist/compiled/react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\r\n  16 |     exports.c = function (size) {\r\n> 17 |       var dispatcher = ReactSharedInternals.H; // <-- ReactSharedInternals is undefined here. \r\n```\r\n\r\nThis is a limited snippet of the larger UI library. The error occurs because the file doesn't have the `'use client'` directive, but this component should be server-renderable, it's just a barebones `div` component. If I remove the `react-compiler` from the build pipeline or if I make this a client component, it works as expected.\r\n\r\nUltimately, I'd expect adding the compiler to the build pipeline of my library to not break components which previously could be server rendered and force the use of client directive when it is unnecessary. \r\n\r\nMy suggestion, in case compiler-optimized components can't be rendered in server components, would be to have some config option that can be enabled for libraries to check for client directives and only optimize client components. And also to add some form of an error boundary to let consumers know that they're trying to render a compiler-optimized component in a server environment. The current error is just confusing and it took me a while to figure out what was the exact cause of it. \r\n\r\nBut the ideal scenario would be to not have to worry about in which environment the component is rendered. Sure, the compiler optimizations do nothing on the server, but that means that they could be essentially stubbed and still render as expected. I dislike the idea of having to output separate versions of components that can be potentially server rendered, simply because I'd like the client versions to be optimized by the compiler. \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-df7b47d-20241124",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31702/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31701",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31701/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31701/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31701/events",
    "html_url": "https://github.com/facebook/react/issues/31701",
    "id": 2725003192,
    "node_id": "I_kwDOAJy2Ks6ibD-4",
    "number": 31701,
    "title": "Bug: creation reactjs new project latest so v19 ",
    "user": {
      "login": "Productivix",
      "id": 6737060,
      "node_id": "MDQ6VXNlcjY3MzcwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6737060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Productivix",
      "html_url": "https://github.com/Productivix",
      "followers_url": "https://api.github.com/users/Productivix/followers",
      "following_url": "https://api.github.com/users/Productivix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Productivix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Productivix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Productivix/subscriptions",
      "organizations_url": "https://api.github.com/users/Productivix/orgs",
      "repos_url": "https://api.github.com/users/Productivix/repos",
      "events_url": "https://api.github.com/users/Productivix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Productivix/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T07:20:00Z",
    "updated_at": "2024-12-08T07:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1.npx create-react-app module\r\n2. wait \r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nCreating a new React app in /..../module\r\n\r\nInstalling packages. This might take a couple of minutes.\r\nInstalling react, react-dom, and react-scripts with cra-template...\r\n\r\n\r\nadded 1315 packages in 10m\r\n\r\n261 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nInitialized a git repository.\r\n\r\nInstalling template dependencies using npm...\r\nnpm error code ERESOLVE\r\nnpm error ERESOLVE unable to resolve dependency tree\r\nnpm error\r\nnpm error While resolving: module_loginweb_reactjs@0.1.0\r\nnpm error Found: react@19.0.0\r\nnpm error node_modules/react\r\nnpm error   react@\"^19.0.0\" from the root project\r\nnpm error\r\nnpm error Could not resolve dependency:\r\nnpm error peer react@\"^18.0.0\" from @testing-library/react@13.4.0\r\nnpm error node_modules/@testing-library/react\r\nnpm error   @testing-library/react@\"^13.0.0\" from the root project\r\nnpm error\r\nnpm error Fix the upstream dependency conflict, or retry\r\nnpm error this command with --force or --legacy-peer-deps\r\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm error\r\nnpm error\r\nnpm error For a full report see:\r\nnpm error /.../.npm/_logs/2024-12-08T06_26_18_730Z-eresolve-report.txt\r\nnpm error A complete log of this run can be found in: ..\r\n\r\n## The expected behavior\r\nno error",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31701/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31700",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31700/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31700/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31700/events",
    "html_url": "https://github.com/facebook/react/pull/31700",
    "id": 2724999229,
    "node_id": "PR_kwDOAJy2Ks6EbZxm",
    "number": 31700,
    "title": "Failing test for controlled input elements in forms incorrectly resetting",
    "user": {
      "login": "jeremy-deutsch",
      "id": 13303900,
      "node_id": "MDQ6VXNlcjEzMzAzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13303900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremy-deutsch",
      "html_url": "https://github.com/jeremy-deutsch",
      "followers_url": "https://api.github.com/users/jeremy-deutsch/followers",
      "following_url": "https://api.github.com/users/jeremy-deutsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremy-deutsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremy-deutsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremy-deutsch/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremy-deutsch/orgs",
      "repos_url": "https://api.github.com/users/jeremy-deutsch/repos",
      "events_url": "https://api.github.com/users/jeremy-deutsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremy-deutsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-08T07:08:17Z",
    "updated_at": "2024-12-08T07:09:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31700",
      "html_url": "https://github.com/facebook/react/pull/31700",
      "diff_url": "https://github.com/facebook/react/pull/31700.diff",
      "patch_url": "https://github.com/facebook/react/pull/31700.patch",
      "merged_at": null
    },
    "body": "## Summary\r\n\r\nThis sets up a failing test for https://github.com/facebook/react/issues/31695. It checks that controlled inputs are not reset by a form's `reset()` method. This currently fails for `<input type=\"checkbox\" />` and `<input type=\"radio\" />`. It works fine for regular text inputs, but I figured it would be good to include those in the test as well.\r\n\r\n## How did you test this change?\r\n\r\nThis change is tests 🙂",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31700/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31742",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31742/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31742/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31742/events",
    "html_url": "https://github.com/facebook/react/issues/31742",
    "id": 2735365586,
    "node_id": "I_kwDOAJy2Ks6jCl3S",
    "number": 31742,
    "title": "[Compiler Bug]: Ref values may not be accessed during render when using `mergeRefs`",
    "user": {
      "login": "NeilTheFisher",
      "id": 47160993,
      "node_id": "MDQ6VXNlcjQ3MTYwOTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/47160993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NeilTheFisher",
      "html_url": "https://github.com/NeilTheFisher",
      "followers_url": "https://api.github.com/users/NeilTheFisher/followers",
      "following_url": "https://api.github.com/users/NeilTheFisher/following{/other_user}",
      "gists_url": "https://api.github.com/users/NeilTheFisher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NeilTheFisher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NeilTheFisher/subscriptions",
      "organizations_url": "https://api.github.com/users/NeilTheFisher/orgs",
      "repos_url": "https://api.github.com/users/NeilTheFisher/repos",
      "events_url": "https://api.github.com/users/NeilTheFisher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NeilTheFisher/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T09:32:53Z",
    "updated_at": "2024-12-12T09:32:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvhgJcsNgB5CTAG4A+ABIJKlCPgDqOSoTkB6RaoDc4gL7jxx4-lxkA1gjYkYEALb4AFrlxMMGR7AHMmXF8oACMAOjhvYwB3CAArXARnLzJU4y8EGFCEAFopEjBjaO1ovLImOmMweGN64nRY3DBxWgZmVnx8woQAJVIwOQAVFX5xfHxYhfrMKFxR8uR8flGyRli1yZV8AB98emISeoRCQQBtAF1xQQ3t3f2p4-wX3D3SAGEyLTRHbOA4iWb4BJ0MA0JjUApXACSdGWqzG+AAvPglis1mBYhc4TB+AAhCAQSgIMh0QSWOjgpgkTYEjJSQhIlG42IUuihSL4OSYgCMwjEEjmkOh+AuMGhawxUthLMRyJxYxuAAY7rTwXMpDIYO4mDLUYyjic6FRKLS5jY6RI9bIpfRGCw2IMioRcfwyiKdVKcJsJQRsSb8BBGcz4WyVSawL6xXMsYz+LhOJgEOGsTG5ejc-gAOQ9F2sfPxxPlrMc0je0g0v02-CaMAIJObENrMsVub8dukfBkMCfSm7dgrMhVEakADy0VSCEYkw+Fq0KkE8VgUjoBExZWtFdt5YP+CstNt3WdfTY7AKRTWv282Doblw+hgznqoX4wEkfasG2-ZTPMO3z7GoEzsAAMgAIsoACiFL5FuhxWJ2QZEMoOanM2az8MulB1nacz2PgmADmAH6OL4LZlIOKRvoO0ScPgSQwGQfAUZECA+PU-ZOr0rrgg6Br8mYP4kOiwDupO5Svu+PL8EIGKHDcZQADToUoax3IIVgqGUjgINCJhmCop62HQRaXgMN7SWAskfgcMwSEUsYbIp6KHFswE-CQoInGcpCXNc9yPGC9rSI6UlegssQuV6ggEWeFkXq6HA2XeD6sM+xKeK4dBfmJx7-mJQE7CBpByGBkEwUo8Fcc+yGoawkpmJhUDYdWeEEeCxGYJ4E4+FRUiCRFwkKMoYkSVFYw1iQ6mtbWun6RkRmmMopnWOIIBWEAA\n\n### Repro steps\n\nI was previously getting an error saying, \"Ref values (the current property) may not be accessed during render.\" However, passing a function to access the refs seems to work as a solution since there is no eslint error now.\r\n\r\nIn the repro, wrapping the refs in a function return doesn't change any functionality so I'm finding this issue to be a little odd.\r\n\r\nThe error doesn't always appear with every component. I couldn't find a reason why.\r\n\r\nThis seems to be similar to https://github.com/facebook/react/issues/31290\n\n### How often does this bug happen?\n\nSometimes\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31742/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31741",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31741/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31741/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31741/events",
    "html_url": "https://github.com/facebook/react/pull/31741",
    "id": 2734886106,
    "node_id": "PR_kwDOAJy2Ks6E9rhg",
    "number": 31741,
    "title": "[Flight Parcel] Align with more recent changes",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T05:37:28Z",
    "updated_at": "2024-12-12T05:47:26Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31741",
      "html_url": "https://github.com/facebook/react/pull/31741",
      "diff_url": "https://github.com/facebook/react/pull/31741.diff",
      "patch_url": "https://github.com/facebook/react/pull/31741.patch",
      "merged_at": null
    },
    "body": "Follow up to #31725.\r\n\r\nI diffed against the Turbopack one to find any unexpected discrepancies. Some parts are forked enough that it's hard to diff but I think I got most of it.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31741/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31740",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31740/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31740/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31740/events",
    "html_url": "https://github.com/facebook/react/issues/31740",
    "id": 2734858509,
    "node_id": "I_kwDOAJy2Ks6jAqEN",
    "number": 31740,
    "title": "Bug: Nested Suspense Fallback Not Triggering for Child Component",
    "user": {
      "login": "LeoAnt02",
      "id": 21208398,
      "node_id": "MDQ6VXNlcjIxMjA4Mzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/21208398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LeoAnt02",
      "html_url": "https://github.com/LeoAnt02",
      "followers_url": "https://api.github.com/users/LeoAnt02/followers",
      "following_url": "https://api.github.com/users/LeoAnt02/following{/other_user}",
      "gists_url": "https://api.github.com/users/LeoAnt02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LeoAnt02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LeoAnt02/subscriptions",
      "organizations_url": "https://api.github.com/users/LeoAnt02/orgs",
      "repos_url": "https://api.github.com/users/LeoAnt02/repos",
      "events_url": "https://api.github.com/users/LeoAnt02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LeoAnt02/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T05:23:36Z",
    "updated_at": "2024-12-12T05:23:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\nReact version: 18\r\n\r\nSteps To Reproduce\r\n\t1.\tCreate a component with nested <Suspense> boundaries:\r\n\t•\tParent <Suspense> wraps a parent component (DataParent) with a fallback.\r\n\t•\tChild <Suspense> wraps a child component (DataChild) with its own fallback.\r\n\t2.\tPass data-fetching promises to both parent and child components using React.use() or async/await to simulate Suspense-compatible data fetching.\r\n\t3.\tEnsure the child <Suspense> fallback is rendered only when the parent data is resolved but the child data is still loading.\r\n\r\nHere’s a sample implementation:\r\n\r\n```\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Suspense } from \"react\";\r\n\r\ninterface ParentProps {\r\n  dataPromise: Promise<{ items: string[] }>;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Parent({ dataPromise, children }: ParentProps) {\r\n  const data = React.use(dataPromise);\r\n\r\n  return (\r\n    <div className=\"parent\">\r\n      <h2>Parent Data</h2>\r\n      <ul>\r\n        {data.items.map((item, idx) => (\r\n          <li key={idx}>{item}</li>\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n```\r\ninterface ChildProps {\r\n  detailPromise: Promise<{ detail: string }>;\r\n}\r\n\r\nasync function Child({ detailPromise }: ChildProps) {\r\n  const detail = await detailPromise;\r\n\r\n  return (\r\n    <div className=\"child\">\r\n      <h3>Child Detail</h3>\r\n      <p>{detail.detail}</p>\r\n    </div>\r\n  );\r\n}\r\n```\r\n```\r\n\r\nexport default function SuspenseExamplePage() {\r\n  const parentDataPromise = new Promise<{ items: string[] }>((resolve) => {\r\n    setTimeout(() => resolve({ items: [\"Item 1\", \"Item 2\"] }), 1000);\r\n  });\r\n\r\n  const childDataPromise = new Promise<{ detail: string }>((resolve) => {\r\n    setTimeout(() => resolve({ detail: \"Detailed information\" }), 2000);\r\n  });\r\n\r\n  return (\r\n    <Suspense fallback={<div>Loading Parent...</div>}>\r\n      <Parent dataPromise={parentDataPromise}>\r\n        <Suspense fallback={<div>Loading Child...</div>}>\r\n          <Child detailPromise={childDataPromise} />\r\n        </Suspense>\r\n      </Parent>\r\n    </Suspense>\r\n  );\r\n}\r\n```\r\n\r\n## The current behavior\r\n\r\nWhen loading the parent and child components:\r\n\t•\tThe fallback for the parent (\"Loading Parent...\") renders as expected while the parent data is loading.\r\n\t•\tAfter the parent data resolves, the child fallback (\"Loading Child...\") does not trigger.\r\n\t•\tInstead, the parent content renders immediately, and the child fallback is skipped altogether.\r\n\t\r\n\t\r\n\r\n## The expected behavior\r\n\r\nWhen the parent data resolves and the child data is still loading:\r\n\t•\tThe parent content should render normally.\r\n\t•\tThe child fallback (\"Loading Child...\") should render until the child data is ready.\r\n\t\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31740/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31739",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31739/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31739/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31739/events",
    "html_url": "https://github.com/facebook/react/issues/31739",
    "id": 2734764035,
    "node_id": "I_kwDOAJy2Ks6jATAD",
    "number": 31739,
    "title": "Cant read props of undefined [*reading \"getStackAddendum\"]",
    "user": {
      "login": "ndiuky",
      "id": 136149081,
      "node_id": "U_kgDOCB14WQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/136149081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ndiuky",
      "html_url": "https://github.com/ndiuky",
      "followers_url": "https://api.github.com/users/ndiuky/followers",
      "following_url": "https://api.github.com/users/ndiuky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ndiuky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ndiuky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ndiuky/subscriptions",
      "organizations_url": "https://api.github.com/users/ndiuky/orgs",
      "repos_url": "https://api.github.com/users/ndiuky/repos",
      "events_url": "https://api.github.com/users/ndiuky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ndiuky/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T04:31:17Z",
    "updated_at": "2024-12-12T04:31:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After building the application on the production version. I get the err `Cannot read properties of undefined [reading \"getStackAddendum\"]`. I split the application into microfronts that are linked using the webpack module federation.\r\n\r\nBut the error here is because ReactDebugCurrentFrame is undefined.\r\n\r\nProblem doesn't appear in the dev version, only in the production version. \r\n\r\n```js\r\nconst printWarning = (level, format, args) => {\r\n      {\r\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n        if (stack !== '') {\r\n          format += '%s';\r\n          args = args.concat([stack]);\r\n        } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n        var argsWithFormat = args.map(function (item) {\r\n          return String(item);\r\n        }); // Careful: RN currently depends on this prefix\r\n\r\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n        // breaks IE9: https://github.com/facebook/react/issues/13610\r\n        // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n      }\r\n    }\r\n```\r\n\r\nfirst app package.json\r\n```json\r\n{\r\n  \"name\": \"first\",\r\n  \"version\": \"1.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@joint/core\": \"^4.0.4\",\r\n    \"@mui/icons-material\": \"^5.11.6\",\r\n    \"@mui/lab\": \"^5.0.0-alpha.125\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@mui/x-date-pickers\": \"^5.0.18\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"@types/react\": \"^18.0.27\",\r\n    \"@types/react-dom\": \"^18.0.10\",\r\n    \"chart.js\": \"^4.4.3\",\r\n    \"color\": \"^4.2.3\",\r\n    \"date-fns\": \"^2.29.3\",\r\n    \"history\": \"^5.3.0\",\r\n    \"js-cookie\": \"^3.0.5\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"notistack\": \"^3.0.1\",\r\n    \"path-to-regexp\": \"^6.2.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-chartjs-2\": \"^5.2.0\",\r\n    \"react-custom-scrollbars-2\": \"^4.5.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"^5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run make-types && npm run generate-env && craco start --verbose\",\r\n    \"make-types\": \"make-federated-types -o public/@types\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-shell-app\",\r\n    \"serve\": \"serve -s build\",\r\n    \"mock-api\": \"node \\\"src/mocks/api.js\\\"\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\",\r\n    \"devcert\": \"set HTTPS=true&&set SSL_CRT_FILE=../wes-shell-app/cert.crt&&set SSL_KEY_FILE=../wes-shell-app/cert.key\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"@types/color\": \"^3.0.6\",\r\n    \"@types/lodash\": \"^4.14.191\",\r\n    \"connect-api-mocker\": \"^1.10.0\",\r\n    \"express\": \"^4.18.2\",\r\n    \"i18next\": \"^22.5.1\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"jwt-decode\": \"^3.1.2\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"react-barcode-reader\": \"^0.0.2\",\r\n    \"react-i18next\": \"^12.1.5\",\r\n    \"tailwindcss\": \"^3.3.3\",\r\n    \"zod\": \"^3.20.2\"\r\n  }\r\n}\r\n```\r\n\r\nsecond app package.json \r\n```json\r\n{\r\n  \"name\": \"second\",\r\n  \"version\": \"2.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@mui/icons-material\": \"^5.11.16\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"external-remotes-plugin\": \"^1.0.0\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run generate-env && craco start --verbose\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-voice-picking-app\",\r\n    \"serve\": \"serve -s build -p 3003\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"i18next\": \"^23.2.11\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"react-i18next\": \"^13.0.2\",\r\n    \"tailwindcss\": \"^3.3.3\"\r\n  }\r\n}\r\n```",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31739/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31739/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31738",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31738/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31738/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31738/events",
    "html_url": "https://github.com/facebook/react/pull/31738",
    "id": 2734469547,
    "node_id": "PR_kwDOAJy2Ks6E8NcW",
    "number": 31738,
    "title": "[Flight] Color and badge non-primary environments",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:44:11Z",
    "updated_at": "2024-12-12T02:34:20Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31738",
      "html_url": "https://github.com/facebook/react/pull/31738",
      "diff_url": "https://github.com/facebook/react/pull/31738.diff",
      "patch_url": "https://github.com/facebook/react/pull/31738.patch",
      "merged_at": null
    },
    "body": "Stacked on #31737.\r\n\r\n<img width=\"987\" alt=\"Screenshot 2024-12-11 at 8 41 15 PM\" src=\"https://github.com/user-attachments/assets/438379a9-0138-4d02-a53a-419402839558\" />\r\n\r\nWhen mixing environments (like \"use cache\" or third party RSC) it's useful to color and badge those components differently to differentiate.\r\n\r\nI'm not putting them in separate tracks because when they do actually execute, like cache misses or third party RSCs, they behave like they're part of the same tree. ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31738/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31737",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31737/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31737/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31737/events",
    "html_url": "https://github.com/facebook/react/pull/31737",
    "id": 2734435577,
    "node_id": "PR_kwDOAJy2Ks6E8F1d",
    "number": 31737,
    "title": "[Flight] Emit Deduped Server Components Marker",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:24:20Z",
    "updated_at": "2024-12-12T01:49:34Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31737",
      "html_url": "https://github.com/facebook/react/pull/31737",
      "diff_url": "https://github.com/facebook/react/pull/31737.diff",
      "patch_url": "https://github.com/facebook/react/pull/31737.patch",
      "merged_at": null
    },
    "body": "Stacked on #31736.\r\n\r\n<img width=\"1223\" alt=\"Screenshot 2024-12-11 at 8 21 12 PM\" src=\"https://github.com/user-attachments/assets/a7cbc04b-c831-476b-aa2f-baddec9461c9\" />\r\n\r\nThis emits a placeholder when we're deduping a component. This starts when the parent's self time ends, where we would've started rendering this component if it wasn't already started. The end time is when the actual render ends since the parent is also blocked by it.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31737/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31736",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31736/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31736/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31736/events",
    "html_url": "https://github.com/facebook/react/pull/31736",
    "id": 2734169627,
    "node_id": "PR_kwDOAJy2Ks6E7LPb",
    "number": 31736,
    "title": "[Flight] Sort Server Components Track Group ahead of Client Scheduler/Components Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T22:35:10Z",
    "updated_at": "2024-12-11T22:47:29Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31736",
      "html_url": "https://github.com/facebook/react/pull/31736",
      "diff_url": "https://github.com/facebook/react/pull/31736.diff",
      "patch_url": "https://github.com/facebook/react/pull/31736.patch",
      "merged_at": null
    },
    "body": "Stacked on #31735.\r\n\r\nThis ensures that Server Components Track comes first. Since it's typically rendered first on the server for initial load and then flows into scheduler and client components work. Also puts it closer to the Network and further away from \"Main\" JS.\r\n\r\n<img width=\"769\" alt=\"Screenshot 2024-12-11 at 5 31 41 PM\" src=\"https://github.com/user-attachments/assets/7198db0f-075e-4a78-8ea4-3bfbf06727cb\" />\r\n\r\nSame trick as in #31615.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31736/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31735",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31735/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31735/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31735/events",
    "html_url": "https://github.com/facebook/react/pull/31735",
    "id": 2734085199,
    "node_id": "PR_kwDOAJy2Ks6E64SY",
    "number": 31735,
    "title": "[Flight] Stack Parallel Components in Separate Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T21:41:34Z",
    "updated_at": "2024-12-11T22:53:40Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31735",
      "html_url": "https://github.com/facebook/react/pull/31735",
      "diff_url": "https://github.com/facebook/react/pull/31735.diff",
      "patch_url": "https://github.com/facebook/react/pull/31735.patch",
      "merged_at": null
    },
    "body": "Stacked on https://github.com/facebook/react/pull/31729\r\n\r\n<img width=\"1436\" alt=\"Screenshot 2024-12-11 at 3 36 41 PM\" src=\"https://github.com/user-attachments/assets/0a201913-0076-4bbf-be18-8f1df6c58313\" />\r\n\r\nThe Server Components visualization is currently a tree flame graph where parent spans the child. This makes it equivalent to the Client Components visualization.\r\n\r\nHowever, since Server Components can be async and therefore parallel, we need to do something when two children are executed in parallel. This PR bumps parallel children into a separate track and then within that track if that child has more children it can grow within that track.\r\n\r\nI currently just cut off more than 10 parallel tracks.\r\n\r\nSynchronous Server Components are still in sequence but it's unlikely because even a simple microtasky Async Component is still parallel.\r\n\r\n<img width=\"959\" alt=\"Screenshot 2024-12-11 at 4 31 17 PM\" src=\"https://github.com/user-attachments/assets/5ad6a7f8-7fa0-46dc-af51-78caf9849176\" />\r\n\r\nI think this is probably not a very useful visualization for Server Components but we can try it out.\r\n\r\nI'm also going to try a different visualization where parent-child relationship is horizontal and parallel vertical instead, but it might not be possible to make that line up in this tool. It makes it a little harder to see how much different components (including their children) impact the overall tree. If that's the only visualization it's also confusing why it's different dimensions than the Client Component version.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31735/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31734",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31734/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31734/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31734/events",
    "html_url": "https://github.com/facebook/react/issues/31734",
    "id": 2734059580,
    "node_id": "I_kwDOAJy2Ks6i9nA8",
    "number": 31734,
    "title": "[React 19] Discard ongoing action?",
    "user": {
      "login": "MrFlashAccount",
      "id": 61194245,
      "node_id": "MDQ6VXNlcjYxMTk0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61194245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrFlashAccount",
      "html_url": "https://github.com/MrFlashAccount",
      "followers_url": "https://api.github.com/users/MrFlashAccount/followers",
      "following_url": "https://api.github.com/users/MrFlashAccount/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrFlashAccount/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrFlashAccount/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrFlashAccount/subscriptions",
      "organizations_url": "https://api.github.com/users/MrFlashAccount/orgs",
      "repos_url": "https://api.github.com/users/MrFlashAccount/repos",
      "events_url": "https://api.github.com/users/MrFlashAccount/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrFlashAccount/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T21:25:19Z",
    "updated_at": "2024-12-11T21:27:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\nI tried to implement _search as you type_ component (see: https://codesandbox.io/p/devbox/k3dvwn) and found that the `useActionState` + `startTransition` doesn't discard outdated requests, e.g. if I type `apple`, `useActionState` will wait for the ongoing request to finish, before starting next one, to get results of the `ap` react waits for `a` to resolve.\r\n\r\nIs it an expected behavior? How can I discard ongoing request?\r\n\r\n\r\nhttps://github.com/user-attachments/assets/f0b6f508-a97e-4feb-b50d-ee95736e03fb\r\n\r\n\r\n\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31734/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31732",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31732/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31732/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31732/events",
    "html_url": "https://github.com/facebook/react/issues/31732",
    "id": 2733203893,
    "node_id": "I_kwDOAJy2Ks6i6WG1",
    "number": 31732,
    "title": "Bug: There is no re-render on DOM events in Node.js test runner",
    "user": {
      "login": "krutoo",
      "id": 13140130,
      "node_id": "MDQ6VXNlcjEzMTQwMTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13140130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krutoo",
      "html_url": "https://github.com/krutoo",
      "followers_url": "https://api.github.com/users/krutoo/followers",
      "following_url": "https://api.github.com/users/krutoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/krutoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krutoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krutoo/subscriptions",
      "organizations_url": "https://api.github.com/users/krutoo/orgs",
      "repos_url": "https://api.github.com/users/krutoo/repos",
      "events_url": "https://api.github.com/users/krutoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krutoo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:54:59Z",
    "updated_at": "2024-12-12T07:34:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nHi, I tried to write tests with Node.js test runner with `jsdom` but this is not working.\r\n\r\nInitial render and mount works fine.\r\n\r\nBut when event is dispatched (click for example) there is no re-render of component.\r\n\r\nReact version: 18.3.1\r\n\r\n#### Guides I used\r\n\r\n- https://nodejs.org/en/learn/test-runner/using-test-runner\r\n\r\n## Steps To Reproduce\r\n\r\n0. Have Node.js 20+ \r\n1. Clone repository https://github.com/krutoo/node-test-runner-react-dom\r\n2. `npm i`\r\n3. `npm run test`\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://github.com/krutoo/node-test-runner-react-dom\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThere is no re-render of component after event is dispatched and as result test is failed\r\n\r\n## The expected behavior\r\n\r\nTest is done successfully ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31732/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31731",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31731/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31731/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31731/events",
    "html_url": "https://github.com/facebook/react/issues/31731",
    "id": 2733130184,
    "node_id": "I_kwDOAJy2Ks6i6EHI",
    "number": 31731,
    "title": "Bug: \"reject is not a function\" in react-server",
    "user": {
      "login": "SafeAndS0und",
      "id": 30162348,
      "node_id": "MDQ6VXNlcjMwMTYyMzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30162348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SafeAndS0und",
      "html_url": "https://github.com/SafeAndS0und",
      "followers_url": "https://api.github.com/users/SafeAndS0und/followers",
      "following_url": "https://api.github.com/users/SafeAndS0und/following{/other_user}",
      "gists_url": "https://api.github.com/users/SafeAndS0und/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SafeAndS0und/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SafeAndS0und/subscriptions",
      "organizations_url": "https://api.github.com/users/SafeAndS0und/orgs",
      "repos_url": "https://api.github.com/users/SafeAndS0und/repos",
      "events_url": "https://api.github.com/users/SafeAndS0und/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SafeAndS0und/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:26:10Z",
    "updated_at": "2024-12-12T09:23:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We've been investigating a `t is not a function` error in production logs of our Next.js application. After some digging, we found that the `t` corresponds to `reject` in [react-server/src/ReactFlightReplyServer.js:166](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-server/src/ReactFlightReplyServer.js#L166).   \r\n\r\nThe error is our case appears when someone (likely a bot) sends a POST request to a server action, as if it was submitting a form on our page, but it sends the JSON values for `$ACTION_1:0` and `$ACTION_1:1` with the quotation marks encoded as HTML entities (probably this is the trigger for the error, could be something with newline characters though, not sure). \r\n\r\nReact version: 19.0.0-rc.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Download/fork [this sandbox](https://codesandbox.io/p/devbox/blissful-gauss-6cvc8v) locally. \r\n2. Install dependencies `npm i --legacy-peer-deps --force`\r\n3. Run in development `npm run dev`\r\n4. Download, unzip and put this [requestBody.zip](https://github.com/user-attachments/files/18098248/requestBody.zip) into the project.\r\n5. Send a curl request using the requestBody file: \r\n```\r\ncurl -X POST http://localhost:3000/ -H 'Content-Type: multipart/form-data; boundary=60eb717e9b0dc' --data-binary @requestBody\r\n```\r\n6. Watch the logs of the application, you should see the mentioned error: \r\n![image](https://github.com/user-attachments/assets/ac3b9665-c7f9-49a7-96d3-291e5c18dbc0)\r\n\r\n\r\n## The current behavior\r\nThere's an unhandled error in the logs when action's metadata comes in unexpected format.\r\n\r\n## The expected behavior\r\nThe situation is handled, and there's no errors in the logs. \r\n\r\n## Possible solution\r\nSimilar to what's been added by @sebmarkbage in [ReactFlightClient.js](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-client/src/ReactFlightClient.js#L262) in [this commit](https://github.com/facebook/react/pull/28847/commits/8e33e92aee3c00def90d2ab189eca8bca7380703#diff-4bc3e2f66cfadc63bd7abcc0387fcc7c1373092f832cac1b34614d8cddca5eacR229-R231), wrap the reject call in a `if (reject)`. Additionally, the underlying error which is thrown by this reject (`SyntaxError: Expected property name or '}' in JSON at position 1`), should also be handled.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31731/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31730",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31730/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31730/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31730/events",
    "html_url": "https://github.com/facebook/react/issues/31730",
    "id": 2732767061,
    "node_id": "I_kwDOAJy2Ks6i4rdV",
    "number": 31730,
    "title": "Bug: Updating state during render when using `useSyncExternalStore` throws `Cannot update a component (Component) while rendering a different component (Component)`",
    "user": {
      "login": "astoilkov",
      "id": 884810,
      "node_id": "MDQ6VXNlcjg4NDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/884810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astoilkov",
      "html_url": "https://github.com/astoilkov",
      "followers_url": "https://api.github.com/users/astoilkov/followers",
      "following_url": "https://api.github.com/users/astoilkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/astoilkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astoilkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astoilkov/subscriptions",
      "organizations_url": "https://api.github.com/users/astoilkov/orgs",
      "repos_url": "https://api.github.com/users/astoilkov/repos",
      "events_url": "https://api.github.com/users/astoilkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astoilkov/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T11:53:25Z",
    "updated_at": "2024-12-11T11:53:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open the Console before you work with the page\r\n2. Click the \"increment\" button 5 times\r\n3. You will see the error in the Console\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/p/sandbox/polished-wind-d9dyvj\r\n\r\n## The current behavior\r\n\r\nWhen updating the store it throws `Cannot update a component (`Component`) while rendering a different component (`Component`)`.\r\n\r\n## The expected behavior\r\n\r\nIt should work the same way `useState` works when calling `setState` during render.\r\n\r\n## Notes\r\n\r\nThis is coming from a user of `use-local-storage-state` hook that has around ~500k monthly downloads — https://github.com/astoilkov/use-local-storage-state/issues/77.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31730/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31730/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31729",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31729/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31729/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31729/events",
    "html_url": "https://github.com/facebook/react/pull/31729",
    "id": 2731760287,
    "node_id": "PR_kwDOAJy2Ks6Ey0-S",
    "number": 31729,
    "title": "[Flight] Log Server Component into Performance Track",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T04:02:27Z",
    "updated_at": "2024-12-11T19:44:12Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31729",
      "html_url": "https://github.com/facebook/react/pull/31729",
      "diff_url": "https://github.com/facebook/react/pull/31729.diff",
      "patch_url": "https://github.com/facebook/react/pull/31729.patch",
      "merged_at": null
    },
    "body": "<img width=\"966\" alt=\"Screenshot 2024-12-10 at 10 49 19 PM\" src=\"https://github.com/user-attachments/assets/27a21bdf-86b9-4203-893b-89523e698138\">\r\n\r\nThis emits a tree view visualization of the timing information for each Server Component provided in the RSC payload.\r\n\r\nThe unique thing about this visualization is that the end time of each Server Component spans the end of the last child. Now what is conceptually a blocking child is kind of undefined in RSC. E.g. if you're not using a Promise on the client, or if it is wrapped in Suspense, is it really blocking the parent?\r\n\r\nHere I reconstruct parent-child relationship by which chunks reference other chunks. A child can belong to more than one parent like when we dedupe the result of a Server Component.\r\n\r\nThen I wait until the whole RSC payload has streamed in, and then I traverse the tree collecting the end time from children as I go and emit the `performance.measure()` calls on the way up.\r\n\r\nThere's more work for this visualization in follow ups but this is the basics. For example, since the Server Component time span includes async work it's possible for siblings to execute their span in parallel (Foo and Bar in the screenshot are parallel siblings). To deal with this we need to spawn parallel work into separate tracks. Each one can be deep due to large trees. This can makes this type of visualization unwieldy when you have a lot of parallelism. Therefore I also plan another flatter Timeline visualization in a follow up.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31729/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31728",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31728/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31728/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31728/events",
    "html_url": "https://github.com/facebook/react/issues/31728",
    "id": 2731717866,
    "node_id": "I_kwDOAJy2Ks6i0rTq",
    "number": 31728,
    "title": "Bug: Critical Security Vulnerability in ReactSharedInternals Usage, Remote code execution",
    "user": {
      "login": "cybergazer",
      "id": 165423274,
      "node_id": "U_kgDOCdwoqg",
      "avatar_url": "https://avatars.githubusercontent.com/u/165423274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cybergazer",
      "html_url": "https://github.com/cybergazer",
      "followers_url": "https://api.github.com/users/cybergazer/followers",
      "following_url": "https://api.github.com/users/cybergazer/following{/other_user}",
      "gists_url": "https://api.github.com/users/cybergazer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cybergazer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cybergazer/subscriptions",
      "organizations_url": "https://api.github.com/users/cybergazer/orgs",
      "repos_url": "https://api.github.com/users/cybergazer/repos",
      "events_url": "https://api.github.com/users/cybergazer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cybergazer/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T03:20:00Z",
    "updated_at": "2024-12-11T03:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Critical Security Vulnerability in ReactSharedInternals Usage\r\n\r\n## Issue Overview\r\n\r\nA severe and potentially exploitable security vulnerability has been identified in the way ReactSharedInternals is accessed and utilized within React. The current implementation makes unsafe assumptions about the immutability and integrity of the ReactSharedInternals object, introducing significant risks to applications built on React.\r\n\r\n## Vulnerability Details\r\n\r\nThe vulnerability stems from the unrestricted access to the ReactSharedInternals object and its associated dispatcher. Here are the critical issues:\r\n\r\n## 1. Tampering or Injection Risks\r\n\r\nThe ReactSharedInternals object is globally accessible within React's internal environment, making it susceptible to:\r\n\r\nMalicious Tampering: Attackers with access to the build environment, or those who exploit vulnerabilities in the application, can alter ReactSharedInternals or its dispatcher to:\r\n\r\nInject malicious code.\r\n\r\nHijack hooks behavior to execute unauthorized logic.\r\n\r\nCode Injection Attacks: In environments where React code is shared or executed (e.g., server-side rendering, multi-tenant environments), the global nature of ReactSharedInternals creates a critical attack vector for modifying application behavior.\r\n\r\n**Null or Invalid Dispatcher**\r\n\r\nThe resolveDispatcher() function assumes that the dispatcher is correctly configured during render phases. However:\r\n\r\nIf dispatcher is null or tampered with, applications may crash or exhibit undefined behavior.\r\n\r\nMalicious actors could manipulate the dispatcher lifecycle to intercept and exfiltrate sensitive data, including component state, props, or context values.\r\n\r\n**Leaking Debug Information**\r\n\r\nIn __DEV__ environments, error handling mechanisms (e.g., console.error) inadvertently reveal implementation details about ReactSharedInternals. This information could:\r\n\r\nAssist attackers in reverse-engineering React internals.\r\n\r\nHighlight potential weak points for exploitation.\r\n\r\n4. Unstable and Experimental APIs\r\n\r\nFunctions relying on experimental or unstable APIs (e.g., useMemoCache, unstable_useContextWithBailout) compound the risk:\r\n\r\nThese APIs may not have the same security scrutiny as stable React APIs, making them more vulnerable to edge-case bugs and exploits.\r\n\r\nImpact\r\n\r\nThis vulnerability has wide-reaching implications:\r\n\r\nCompromise of Application Integrity: A successful exploit could allow attackers to alter core React behavior, inject malicious functionality, or disrupt rendering logic.\r\n\r\nData Leakage: Sensitive application data managed by React (state, context) could be intercepted or exposed.\r\n\r\nSupply Chain Attacks: Any environment where the ReactSharedInternals object is accessible to external entities is at risk of exploitation.\r\n\r\nGiven the pervasiveness of React in modern web applications, this issue has the potential to impact a significant number of projects globally.\r\n\r\nSteps to Reproduce\r\n\r\nAccess the ReactSharedInternals object via React.__REACT_DEVTOOLS_GLOBAL_HOOK__.ReactSharedInternals in a React environment.\r\n\r\nModify the dispatcher to inject arbitrary behavior.\r\n\r\nObserve the altered behavior of hooks (e.g., useState, useEffect) or trigger a crash by nullifying the dispatcher.\r\n\r\nSuggested Mitigation\r\n\r\nRestrict Access to ReactSharedInternals:\r\n\r\nPrevent external access to ReactSharedInternals outside of React’s internal scope.\r\n\r\nHarden access control for the dispatcher object.\r\n\r\nValidate Dispatcher:\r\n\r\nAdd strict checks to ensure dispatcher integrity before usage.\r\n\r\nLog and fail gracefully if tampering is detected.\r\n\r\nRemove or Secure Experimental APIs:\r\n\r\nDeprecate experimental APIs where possible or provide safer, stable alternatives.\r\n\r\nHarden Development (__DEV__) Paths:\r\n\r\nAvoid leaking sensitive implementation details in __DEV__ environments.\r\n\r\nUrgency\r\n\r\nThis issue poses an extreme security risk due to its potential for widespread exploitation. It is imperative that the React team prioritize this vulnerability and release a patch as soon as possible. Given React’s ubiquity in the web development ecosystem, even a small window of exposure could have catastrophic consequences.\r\n\r\nTimeline for Action\r\n\r\nWe recommend:\r\n\r\nImmediate triage and verification.\r\n\r\nA high-priority patch within 7 days.\r\n\r\nClear communication to the community regarding the fix and steps to secure applications.\r\n\r\nWe strongly urge the React team to treat this issue with the utmost seriousness and prioritize a resolution immediately.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31728/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31727",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31727/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31727/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31727/events",
    "html_url": "https://github.com/facebook/react/issues/31727",
    "id": 2731460356,
    "node_id": "I_kwDOAJy2Ks6izscE",
    "number": 31727,
    "title": "[Compiler Bug]: Compiler fails to memoize hooks with no hook calls",
    "user": {
      "login": "billyjanitsch",
      "id": 1158733,
      "node_id": "MDQ6VXNlcjExNTg3MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1158733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/billyjanitsch",
      "html_url": "https://github.com/billyjanitsch",
      "followers_url": "https://api.github.com/users/billyjanitsch/followers",
      "following_url": "https://api.github.com/users/billyjanitsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/billyjanitsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/billyjanitsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/billyjanitsch/subscriptions",
      "organizations_url": "https://api.github.com/users/billyjanitsch/orgs",
      "repos_url": "https://api.github.com/users/billyjanitsch/repos",
      "events_url": "https://api.github.com/users/billyjanitsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/billyjanitsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T23:35:42Z",
    "updated_at": "2024-12-11T09:10:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://github.com/billyjanitsch/react-compiler-hook-detection-bug\n\n### Repro steps\n\nGiven the following three custom hooks:\r\n\r\n```tsx\r\nimport {useDebugValue} from 'react'\r\n\r\nfunction useFoo() {\r\n  return () => 'foo'\r\n}\r\n\r\nfunction useBar() {\r\n  useDebugValue('bar')\r\n  return () => 'bar'\r\n}\r\n\r\nfunction useBaz() {\r\n  return useCallback(() => 'baz', [])\r\n}\r\n```\r\n\r\nI'd expect the compiler to memoize all of them, but it only memoizes `useBar` and `useBaz`:\r\n\r\n```tsx\r\nimport { useCallback, useDebugValue } from \"react\";\r\nfunction useFoo() {\r\n  return () => \"foo\";\r\n}\r\nfunction useBar() {\r\n  useDebugValue(\"bar\");\r\n  return _temp;\r\n}\r\nfunction _temp() {\r\n  return \"bar\";\r\n}\r\nfunction useBaz() {\r\n  return _temp2;\r\n}\r\nfunction _temp2() {\r\n  return \"baz\";\r\n}\r\n```\r\n\r\nI'm guessing that it's because the compiler's hook detection logic looks for at least one hook call in the function body. I understand that it generally doesn't make sense to write a custom hook that doesn't use any other hooks, but the exception is when the custom hook would have used only `useMemo` and/or `useCallback`, such as `useBaz`. I expect the compiler to let me remove those hooks without losing memoization.\r\n\r\nThis doesn't reproduce in the playground. I'm not sure why.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31727/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31723",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31723/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31723/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31723/events",
    "html_url": "https://github.com/facebook/react/pull/31723",
    "id": 2730902358,
    "node_id": "PR_kwDOAJy2Ks6Ev5Cw",
    "number": 31723,
    "title": "[compiler] Allow sequence expressions in for loops, and prevent DCE of declarations when the variable is reassigned in a value block",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T18:37:11Z",
    "updated_at": "2024-12-10T18:40:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31723",
      "html_url": "https://github.com/facebook/react/pull/31723",
      "diff_url": "https://github.com/facebook/react/pull/31723.diff",
      "patch_url": "https://github.com/facebook/react/pull/31723.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #31723\n* #31712\n\nSummary:\nTwo somewhat unrelated fixes that combine to allow loops like `for (i =1, j =1; ...)` to be handled. We introduce a new case for building reactive functions when a block prior to a goto doesnt generate a value; this is the case for the fallthrough of sequence blocks in for loop inits, since the value is not read by anything.\n\nWe also make it so that we don't DCE declarations of variables that are written to in value blocks. If we did DCE such declarations, we would then later convert the reassignment to a const declaration--but declarations in value blocks are banned.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31723/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31722",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31722/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31722/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31722/events",
    "html_url": "https://github.com/facebook/react/issues/31722",
    "id": 2730704928,
    "node_id": "I_kwDOAJy2Ks6iw0Ag",
    "number": 31722,
    "title": "Bug: `react-hooks/rules-of-hooks` does not allow `_Component` names underscore prefix for 'private naming convention'",
    "user": {
      "login": "700software",
      "id": 20981023,
      "node_id": "MDQ6VXNlcjIwOTgxMDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20981023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/700software",
      "html_url": "https://github.com/700software",
      "followers_url": "https://api.github.com/users/700software/followers",
      "following_url": "https://api.github.com/users/700software/following{/other_user}",
      "gists_url": "https://api.github.com/users/700software/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/700software/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/700software/subscriptions",
      "organizations_url": "https://api.github.com/users/700software/orgs",
      "repos_url": "https://api.github.com/users/700software/repos",
      "events_url": "https://api.github.com/users/700software/events{/privacy}",
      "received_events_url": "https://api.github.com/users/700software/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710375792,
        "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
        "name": "Type: Discussion",
        "color": "fef2c0",
        "default": false,
        "description": null
      },
      {
        "id": 1249821345,
        "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
        "name": "Component: ESLint Rules",
        "color": "f7afdb",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T17:12:34Z",
    "updated_at": "2024-12-11T17:38:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nLatest version `eslint-plugin-react-hooks@5.1.0`\r\n\r\n## Steps To Reproduce\r\n\r\n```\r\nexport function _SomeComponentWeNotWantUsedOutsideThisDirectory() {\r\n  const result = useSomeHook();\r\n}\r\n```\r\n\r\n## The current behavior\r\nProduces eslint error\r\n\r\n> React Hook \"useSomeHook\" is called in function \"_SomeComponentWeNotWantUsedOutsideThisDirectory\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\". eslint([react-hooks/rules-of-hooks](https://reactjs.org/docs/hooks-rules.html))\r\n\r\n\r\n## The expected behavior\r\n\r\nNo eslint warning, because we have clearly indicated it is a component using the uppercase letter after the underscore prefix.\r\n\r\n## Proposed solution\r\n\r\nhttps://github.com/facebook/react/blob/4a8fc0f92e0f75257962522b51a938bf4dfda77a/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js#L49\r\n\r\ncould be easily changed to\r\n\r\n```ts\r\n  return node.type === 'Identifier' && /^_?[A-Z]/.test(node.name);\r\n```\r\n\r\nI have thought about whether it should be a config option but I'm leaning towards 'less is more'. Either  way, I'm willing to make PR for this and test coverage but need confirmation you guys will take this into consideration before I put in the work.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31722/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31721",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31721/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31721/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31721/events",
    "html_url": "https://github.com/facebook/react/pull/31721",
    "id": 2730552444,
    "node_id": "PR_kwDOAJy2Ks6Euqk7",
    "number": 31721,
    "title": "Fix canary version strings",
    "user": {
      "login": "jackpope",
      "id": 8965173,
      "node_id": "MDQ6VXNlcjg5NjUxNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackpope",
      "html_url": "https://github.com/jackpope",
      "followers_url": "https://api.github.com/users/jackpope/followers",
      "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
      "organizations_url": "https://api.github.com/users/jackpope/orgs",
      "repos_url": "https://api.github.com/users/jackpope/repos",
      "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackpope/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T16:09:04Z",
    "updated_at": "2024-12-10T21:39:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31721",
      "html_url": "https://github.com/facebook/react/pull/31721",
      "diff_url": "https://github.com/facebook/react/pull/31721.diff",
      "patch_url": "https://github.com/facebook/react/pull/31721.patch",
      "merged_at": null
    },
    "body": "We're still publishing RCs and creating canary version strings using the RC naming convention. Setting the `canaryChannelLabel` back to canary fixes the version names and tags after the 19 stable release.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31721/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31719",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31719/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31719/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31719/events",
    "html_url": "https://github.com/facebook/react/issues/31719",
    "id": 2730053571,
    "node_id": "I_kwDOAJy2Ks6iuU_D",
    "number": 31719,
    "title": "Bug: Detached Elements Observed When Toggling Content with ReactDOM.createPortal()",
    "user": {
      "login": "suraj-pachakar",
      "id": 60176976,
      "node_id": "MDQ6VXNlcjYwMTc2OTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/60176976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suraj-pachakar",
      "html_url": "https://github.com/suraj-pachakar",
      "followers_url": "https://api.github.com/users/suraj-pachakar/followers",
      "following_url": "https://api.github.com/users/suraj-pachakar/following{/other_user}",
      "gists_url": "https://api.github.com/users/suraj-pachakar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suraj-pachakar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suraj-pachakar/subscriptions",
      "organizations_url": "https://api.github.com/users/suraj-pachakar/orgs",
      "repos_url": "https://api.github.com/users/suraj-pachakar/repos",
      "events_url": "https://api.github.com/users/suraj-pachakar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suraj-pachakar/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T12:56:47Z",
    "updated_at": "2024-12-10T12:56:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We observed a possible memory leak when using `ReactDOM.createPortal()` to render components. The issue occurs when toggling the portal content between a `RadioGroup` and the text `Loading...`. If the `RadioGroup` is interacted with before toggling, some DOM elements are not properly cleaned up, leaving detached nodes in memory.\r\n\r\nHowever, if no interaction happens with the `RadioGroup`, the content toggles without any memory issues.\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Visit the [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl).\r\n2. Click on the Load Content button to render the `RadioGroup`.\r\n3. Interact with the `RadioGroup` by selecting the Other option. (eg: option B)\r\n4. Click on the Unload Content button to remove the `RadioGroup`.\r\n5. Open the Memory tab in the browser developer tools and trigger Garbage Collection.\r\n6. Select the **Detached Elements** profiling type and take a snapshot of the memory to observe detached nodes.\r\n\r\nLink to code example: [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl)\r\n\r\n## The current behavior\r\nDetached elements are present in the memory snapshot after interacting with the `RadioGroup` and toggling it off. This indicates a potential memory leak caused by `ReactDOM.createPortal()`.\r\n![image](https://github.com/user-attachments/assets/9dc8fdf2-fb68-4089-9f9c-5d5198c1f95f)\r\n\r\n\r\n## The expected behavior\r\nDetached nodes should not be present after toggling the `RadioGroup` and triggering garbage collection, regardless of interactions.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31719/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31718",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31718/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31718/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31718/events",
    "html_url": "https://github.com/facebook/react/issues/31718",
    "id": 2729618823,
    "node_id": "I_kwDOAJy2Ks6isq2H",
    "number": 31718,
    "title": "Bug: `select` menu won't update highlight when options change",
    "user": {
      "login": "paalss",
      "id": 39744024,
      "node_id": "MDQ6VXNlcjM5NzQ0MDI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/39744024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paalss",
      "html_url": "https://github.com/paalss",
      "followers_url": "https://api.github.com/users/paalss/followers",
      "following_url": "https://api.github.com/users/paalss/following{/other_user}",
      "gists_url": "https://api.github.com/users/paalss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paalss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paalss/subscriptions",
      "organizations_url": "https://api.github.com/users/paalss/orgs",
      "repos_url": "https://api.github.com/users/paalss/repos",
      "events_url": "https://api.github.com/users/paalss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paalss/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T09:58:11Z",
    "updated_at": "2024-12-10T10:01:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If a `<select>`'s options changes (e.g. if options are loaded asynchronously) while the menu is open, the `<select>` won't re-examine its options to update its highlight position (`selectedIndex`). \r\n\r\nIn the Codesandbox example below, I have a select menu that will have its options swapped out 1 second after it receives focus. This is to simulate the fetch call that I'm doing in my real app.\r\n\r\nReact version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n**Browser:** Either use Google Chrome or Microsoft Edge, it's not reproducible in Firefox.\r\n\r\nBrowser versions:\r\n\r\n- Google Chrome – Version 131.0.6778.109 (Official Build) (64-bit)\r\n- Microsoft Edge – Version 131.0.2903.86 (Official build) (64-bit)\r\n\r\n\r\n1. Open [this Codesandbox](https://codesandbox.io/p/sandbox/select-menu-with-dynamic-options-forked-nvt488?workspaceId=ws_DVJY22si5M9kiWeZb4Ybth)\r\n2. Click on the select menu\r\n3. Watch as the complete options list replaces the old one\r\n\r\n1 ![image](https://github.com/user-attachments/assets/69a7ca1a-2c01-42b2-ae4e-9f08be431a2b) 2 ![image](https://github.com/user-attachments/assets/dba3eb0e-4043-4ba7-96a7-64f6ff583529) 3 ![image](https://github.com/user-attachments/assets/25b9f490-ddf4-4698-bc91-beb16fddfcc5)\r\n\r\n## The current behavior\r\n\r\nWhen the new options replaces the old ones, the highlight position stays on the first element. Only after closing and re-opening the menu, the highlight goes to the option with `value=\"italy\"`\r\n\r\n## The expected behavior\r\n\r\nI want the select menu to highlight the `value=\"italy\"`  option after options are replaced",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31718/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31717",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31717/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31717/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31717/events",
    "html_url": "https://github.com/facebook/react/issues/31717",
    "id": 2729305831,
    "node_id": "I_kwDOAJy2Ks6irebn",
    "number": 31717,
    "title": "[eslint-plugin-react-hooks] v5.1.0 was released without any changes in github",
    "user": {
      "login": "aqeelat",
      "id": 5212744,
      "node_id": "MDQ6VXNlcjUyMTI3NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5212744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aqeelat",
      "html_url": "https://github.com/aqeelat",
      "followers_url": "https://api.github.com/users/aqeelat/followers",
      "following_url": "https://api.github.com/users/aqeelat/following{/other_user}",
      "gists_url": "https://api.github.com/users/aqeelat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aqeelat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aqeelat/subscriptions",
      "organizations_url": "https://api.github.com/users/aqeelat/orgs",
      "repos_url": "https://api.github.com/users/aqeelat/repos",
      "events_url": "https://api.github.com/users/aqeelat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aqeelat/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T07:50:10Z",
    "updated_at": "2024-12-11T08:44:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The newer version is released https://www.npmjs.com/package/eslint-plugin-react-hooks/v/5.1.0\r\n\r\nHowever, there aren't any changes in the package dir here as of the time of posting the issue.\r\nhttps://github.com/facebook/react/tree/372ec00c0384cd2089651154ea7c67693ee3f2a5/packages/eslint-plugin-react-hooks\r\n\r\nThis is concerning because it could indicate that someone published on behalf of the react team.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31717/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31712",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31712/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31712/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31712/events",
    "html_url": "https://github.com/facebook/react/pull/31712",
    "id": 2728149079,
    "node_id": "PR_kwDOAJy2Ks6EmT9E",
    "number": 31712,
    "title": "[compiler] Implement support for non-declaration for initializers",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T20:04:20Z",
    "updated_at": "2024-12-10T18:39:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31712",
      "html_url": "https://github.com/facebook/react/pull/31712",
      "diff_url": "https://github.com/facebook/react/pull/31712.diff",
      "patch_url": "https://github.com/facebook/react/pull/31712.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #31723\n* __->__ #31712\n\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31712/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31708",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31708/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31708/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31708/events",
    "html_url": "https://github.com/facebook/react/issues/31708",
    "id": 2726551905,
    "node_id": "I_kwDOAJy2Ks6ig-Fh",
    "number": 31708,
    "title": "Bug: useOptimistic",
    "user": {
      "login": "olegdunkan",
      "id": 1710435,
      "node_id": "MDQ6VXNlcjE3MTA0MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1710435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olegdunkan",
      "html_url": "https://github.com/olegdunkan",
      "followers_url": "https://api.github.com/users/olegdunkan/followers",
      "following_url": "https://api.github.com/users/olegdunkan/following{/other_user}",
      "gists_url": "https://api.github.com/users/olegdunkan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olegdunkan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olegdunkan/subscriptions",
      "organizations_url": "https://api.github.com/users/olegdunkan/orgs",
      "repos_url": "https://api.github.com/users/olegdunkan/repos",
      "events_url": "https://api.github.com/users/olegdunkan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olegdunkan/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-09T09:58:35Z",
    "updated_at": "2024-12-09T20:16:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version:19.0.0\r\n[I got example from react.dev](https://react.dev/reference/react/useOptimistic) slightly modified it.\r\n \r\nNow `key` attribute derive value from data (message)\r\n```\r\n        <div key={message.id}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n```\r\n\r\n## Steps To Reproduce\r\n\r\n1.[Open link](https://codesandbox.io/p/sandbox/react-dev-forked-5hddwt)\r\n2.Send new message\r\n3.Open console\r\n\r\n## The current behavior\r\nOn the image below we can see duplicating list of messages from [I got example from react.dev](https://react.dev/reference/react/useOptimistic).\r\n![image](https://github.com/user-attachments/assets/4868e7d0-7eb1-4e29-ac11-eff9047982f7)\r\n\r\nThere was no error in [I got example from react.dev](https://react.dev/reference/react/useOptimistic) because `key` gets values from `index`, `index` is always unique.\r\n\r\n        <div key={index}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n\r\nCode that is slightly modified by me print out following (from console):\r\n\r\n> Encountered two children with the same key, `8908d3a9-13b7-4576-bf85-e850f7ab2c1c`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version\r\n\r\nI don't know the reason of that behaviour but I see that `updateFn` in `useOptimistic` is called with `new message` twice:\r\n1. First time after `addOptimisticMessage` is called, \r\n2. Second time while `Thread` component is re-rendered.\r\n\r\n\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31708/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31706",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31706/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31706/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31706/events",
    "html_url": "https://github.com/facebook/react/pull/31706",
    "id": 2726176299,
    "node_id": "PR_kwDOAJy2Ks6EfcDO",
    "number": 31706,
    "title": "perf(SSR): remove regexp in function escapeHtml",
    "user": {
      "login": "ShuiRuTian",
      "id": 28779355,
      "node_id": "MDQ6VXNlcjI4Nzc5MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28779355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShuiRuTian",
      "html_url": "https://github.com/ShuiRuTian",
      "followers_url": "https://api.github.com/users/ShuiRuTian/followers",
      "following_url": "https://api.github.com/users/ShuiRuTian/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShuiRuTian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShuiRuTian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShuiRuTian/subscriptions",
      "organizations_url": "https://api.github.com/users/ShuiRuTian/orgs",
      "repos_url": "https://api.github.com/users/ShuiRuTian/repos",
      "events_url": "https://api.github.com/users/ShuiRuTian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShuiRuTian/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-12-09T06:59:59Z",
    "updated_at": "2024-12-10T07:19:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31706",
      "html_url": "https://github.com/facebook/react/pull/31706",
      "diff_url": "https://github.com/facebook/react/pull/31706.diff",
      "patch_url": "https://github.com/facebook/react/pull/31706.patch",
      "merged_at": null
    },
    "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn test --debug --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nRegular expression is slow, removing them in escapeHtml should make things faster\r\n\r\nI did similar change in vue at first: https://github.com/vuejs/core/pull/12507#issue-2724750870\r\n\r\nThen I took a look at react and found vue copied react's implementation, then why not let react have this improvement too?\r\n\r\n## How did you test this change?\r\n\r\nSome simple benchmark by me and @Justineo\r\n\r\nhttps://jsbench.me/rqm4ehfndc/1, shows for simple cases, it's 2x~3x faster\r\nhttps://jsben.ch/pbGau, shows for random string, it's 1.1x faster\r\n\r\nAlso cc @aickin, who refactor escapeHtml 8 years ago, maybe you might have interest in this PR too\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31706/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31705",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31705/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31705/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31705/events",
    "html_url": "https://github.com/facebook/react/issues/31705",
    "id": 2726112761,
    "node_id": "I_kwDOAJy2Ks6ifS35",
    "number": 31705,
    "title": "Bug: memory leak caused by alternate fiber tree",
    "user": {
      "login": "y122972",
      "id": 28836754,
      "node_id": "MDQ6VXNlcjI4ODM2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/28836754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y122972",
      "html_url": "https://github.com/y122972",
      "followers_url": "https://api.github.com/users/y122972/followers",
      "following_url": "https://api.github.com/users/y122972/following{/other_user}",
      "gists_url": "https://api.github.com/users/y122972/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y122972/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y122972/subscriptions",
      "organizations_url": "https://api.github.com/users/y122972/orgs",
      "repos_url": "https://api.github.com/users/y122972/repos",
      "events_url": "https://api.github.com/users/y122972/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y122972/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T06:22:53Z",
    "updated_at": "2024-12-09T06:22:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 19\r\n\r\n## Steps To Reproduce\r\n\r\n```typescript\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nconst App = () => {\r\n  const [obj, setObj] = useState<any>({});\r\n  const [count, setCount] = useState(0);\r\n\r\n  const refresh = useCallback(() => {\r\n    const newObj = {\r\n      buffer: new Uint8Array(100_000_000),\r\n      count: count + 1,\r\n    };\r\n    setObj(newObj);\r\n    setCount((pre) => pre + 1);\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={refresh}>new obj({count})</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n```\r\n\r\n## The current behavior\r\n<img width=\"732\" alt=\"image\" src=\"https://github.com/user-attachments/assets/503bfa91-0bae-46cd-a4d7-a103f8cd4e2f\">\r\n\r\n## The expected behavior\r\nrelease the `memoizedState` / `baseState` of alternate fiber tree.\r\n\r\n## Confusion\r\nI know it's not a good way to store a big state using `useState`. But it's a bug or some feature?\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31705/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31704",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31704/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31704/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31704/events",
    "html_url": "https://github.com/facebook/react/issues/31704",
    "id": 2725991162,
    "node_id": "I_kwDOAJy2Ks6ie1L6",
    "number": 31704,
    "title": "[React 19]",
    "user": {
      "login": "Melissa1181",
      "id": 175780127,
      "node_id": "U_kgDOCnoxHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/175780127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Melissa1181",
      "html_url": "https://github.com/Melissa1181",
      "followers_url": "https://api.github.com/users/Melissa1181/followers",
      "following_url": "https://api.github.com/users/Melissa1181/following{/other_user}",
      "gists_url": "https://api.github.com/users/Melissa1181/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Melissa1181/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Melissa1181/subscriptions",
      "organizations_url": "https://api.github.com/users/Melissa1181/orgs",
      "repos_url": "https://api.github.com/users/Melissa1181/repos",
      "events_url": "https://api.github.com/users/Melissa1181/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Melissa1181/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T05:00:41Z",
    "updated_at": "2024-12-09T05:51:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31704/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31703",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31703/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31703/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31703/events",
    "html_url": "https://github.com/facebook/react/issues/31703",
    "id": 2725940076,
    "node_id": "I_kwDOAJy2Ks6ieots",
    "number": 31703,
    "title": "Bug: useEffect Without Dependencies Not Executed Correctly After setState ",
    "user": {
      "login": "SirM2z",
      "id": 12137804,
      "node_id": "MDQ6VXNlcjEyMTM3ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12137804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SirM2z",
      "html_url": "https://github.com/SirM2z",
      "followers_url": "https://api.github.com/users/SirM2z/followers",
      "following_url": "https://api.github.com/users/SirM2z/following{/other_user}",
      "gists_url": "https://api.github.com/users/SirM2z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SirM2z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SirM2z/subscriptions",
      "organizations_url": "https://api.github.com/users/SirM2z/orgs",
      "repos_url": "https://api.github.com/users/SirM2z/repos",
      "events_url": "https://api.github.com/users/SirM2z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SirM2z/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T04:17:15Z",
    "updated_at": "2024-12-12T09:06:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.3.1 & 19.0.0\r\n\r\n## Steps To Reproduce\r\nConsider the following example code, where there are two useEffect hooks. \r\n- The first useEffect executes a setFlag, with the value of setFlag being the same as the initial value. The second parameter is an empty array. \r\n- The second useEffect simply logs a message without passing a second argument (i.e., without dependencies) to make it easier to observe the execution behavior. \r\n\r\nThe JSX part of the component contains only a div with a click event, which triggers a setState when clicked.\r\n```jsx\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function App(props) {\r\n  const [index, setIndex] = useState(0);\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  console.log('index', index);\r\n\r\n  useEffect(() => {\r\n    console.log('setFlag invoke');\r\n    setFlag(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect no dependencies invoke');\r\n    return () => {\r\n      console.log('useEffect no dependencies hook destroyed');\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        console.log('-------------- click --------------');\r\n        setIndex(pre => pre + 1);\r\n      }}\r\n      style={{ color: 'red' }}\r\n    >\r\n      button {index} {Date.now()}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://playcode.io/2185135\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nAfter the click event is triggered, the component's render does not occur in tandem with the second useEffect. Render occurs twice, but the second useEffect executes only once.\r\n<img width=\"627\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9ffc9e58-4e89-4bd8-b407-e67837634554\">\r\n\r\n## The expected behavior\r\nAfter the click event is triggered, the component's render should occur in tandem with the second useEffect. Render should happen twice, and the second useEffect should also execute twice.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31703/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31702",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31702/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31702/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31702/events",
    "html_url": "https://github.com/facebook/react/issues/31702",
    "id": 2725265879,
    "node_id": "I_kwDOAJy2Ks6icEHX",
    "number": 31702,
    "title": "[Compiler Bug]: server components built externally by the compiler error when rendered in app",
    "user": {
      "login": "DanielOrtel",
      "id": 19431728,
      "node_id": "MDQ6VXNlcjE5NDMxNzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/19431728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielOrtel",
      "html_url": "https://github.com/DanielOrtel",
      "followers_url": "https://api.github.com/users/DanielOrtel/followers",
      "following_url": "https://api.github.com/users/DanielOrtel/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielOrtel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielOrtel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielOrtel/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielOrtel/orgs",
      "repos_url": "https://api.github.com/users/DanielOrtel/repos",
      "events_url": "https://api.github.com/users/DanielOrtel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielOrtel/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T14:09:14Z",
    "updated_at": "2024-12-08T15:51:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://github.com/DanielOrtel/compiler-bug\r\n\r\n### Repro steps\r\n\r\nI'm building an esm UI library and ran into a weird issue with one component when adding react compiler to the build pipeline(which uses rollup with babel). You can check the reproduction repo above, steps:\r\n- set node 20.18.0 if not set automatically\r\n- run `yarn install`\r\n- run `yarn test-compiler-error` // this will build the library and start a bare-bones next app\r\n- open localhost:3000\\\r\n- app should error out with the following:\r\n```\r\nTypeError: Cannot read properties of undefined (reading 'H')\r\n    at IconsRoot (../../libraries/ui/.dist/icons-root/index.js:12:72)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at stringify (<anonymous>)\r\n    at stringify (<anonymous>)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\r\ndigest: \"2235527820\"\r\n  15 |       require(\"next/dist/compiled/react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\r\n  16 |     exports.c = function (size) {\r\n> 17 |       var dispatcher = ReactSharedInternals.H; // <-- ReactSharedInternals is undefined here. \r\n```\r\n\r\nThis is a limited snippet of the larger UI library. The error occurs because the file doesn't have the `'use client'` directive, but this component should be server-renderable, it's just a barebones `div` component. If I remove the `react-compiler` from the build pipeline or if I make this a client component, it works as expected.\r\n\r\nUltimately, I'd expect adding the compiler to the build pipeline of my library to not break components which previously could be server rendered and force the use of client directive when it is unnecessary. \r\n\r\nMy suggestion, in case compiler-optimized components can't be rendered in server components, would be to have some config option that can be enabled for libraries to check for client directives and only optimize client components. And also to add some form of an error boundary to let consumers know that they're trying to render a compiler-optimized component in a server environment. The current error is just confusing and it took me a while to figure out what was the exact cause of it. \r\n\r\nBut the ideal scenario would be to not have to worry about in which environment the component is rendered. Sure, the compiler optimizations do nothing on the server, but that means that they could be essentially stubbed and still render as expected. I dislike the idea of having to output separate versions of components that can be potentially server rendered, simply because I'd like the client versions to be optimized by the compiler. \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-df7b47d-20241124",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31702/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31701",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31701/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31701/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31701/events",
    "html_url": "https://github.com/facebook/react/issues/31701",
    "id": 2725003192,
    "node_id": "I_kwDOAJy2Ks6ibD-4",
    "number": 31701,
    "title": "Bug: creation reactjs new project latest so v19 ",
    "user": {
      "login": "Productivix",
      "id": 6737060,
      "node_id": "MDQ6VXNlcjY3MzcwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6737060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Productivix",
      "html_url": "https://github.com/Productivix",
      "followers_url": "https://api.github.com/users/Productivix/followers",
      "following_url": "https://api.github.com/users/Productivix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Productivix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Productivix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Productivix/subscriptions",
      "organizations_url": "https://api.github.com/users/Productivix/orgs",
      "repos_url": "https://api.github.com/users/Productivix/repos",
      "events_url": "https://api.github.com/users/Productivix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Productivix/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T07:20:00Z",
    "updated_at": "2024-12-08T07:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1.npx create-react-app module\r\n2. wait \r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nCreating a new React app in /..../module\r\n\r\nInstalling packages. This might take a couple of minutes.\r\nInstalling react, react-dom, and react-scripts with cra-template...\r\n\r\n\r\nadded 1315 packages in 10m\r\n\r\n261 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nInitialized a git repository.\r\n\r\nInstalling template dependencies using npm...\r\nnpm error code ERESOLVE\r\nnpm error ERESOLVE unable to resolve dependency tree\r\nnpm error\r\nnpm error While resolving: module_loginweb_reactjs@0.1.0\r\nnpm error Found: react@19.0.0\r\nnpm error node_modules/react\r\nnpm error   react@\"^19.0.0\" from the root project\r\nnpm error\r\nnpm error Could not resolve dependency:\r\nnpm error peer react@\"^18.0.0\" from @testing-library/react@13.4.0\r\nnpm error node_modules/@testing-library/react\r\nnpm error   @testing-library/react@\"^13.0.0\" from the root project\r\nnpm error\r\nnpm error Fix the upstream dependency conflict, or retry\r\nnpm error this command with --force or --legacy-peer-deps\r\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm error\r\nnpm error\r\nnpm error For a full report see:\r\nnpm error /.../.npm/_logs/2024-12-08T06_26_18_730Z-eresolve-report.txt\r\nnpm error A complete log of this run can be found in: ..\r\n\r\n## The expected behavior\r\nno error",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31701/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31700",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31700/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31700/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31700/events",
    "html_url": "https://github.com/facebook/react/pull/31700",
    "id": 2724999229,
    "node_id": "PR_kwDOAJy2Ks6EbZxm",
    "number": 31700,
    "title": "Failing test for controlled input elements in forms incorrectly resetting",
    "user": {
      "login": "jeremy-deutsch",
      "id": 13303900,
      "node_id": "MDQ6VXNlcjEzMzAzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13303900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremy-deutsch",
      "html_url": "https://github.com/jeremy-deutsch",
      "followers_url": "https://api.github.com/users/jeremy-deutsch/followers",
      "following_url": "https://api.github.com/users/jeremy-deutsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremy-deutsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremy-deutsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremy-deutsch/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremy-deutsch/orgs",
      "repos_url": "https://api.github.com/users/jeremy-deutsch/repos",
      "events_url": "https://api.github.com/users/jeremy-deutsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremy-deutsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-08T07:08:17Z",
    "updated_at": "2024-12-08T07:09:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31700",
      "html_url": "https://github.com/facebook/react/pull/31700",
      "diff_url": "https://github.com/facebook/react/pull/31700.diff",
      "patch_url": "https://github.com/facebook/react/pull/31700.patch",
      "merged_at": null
    },
    "body": "## Summary\r\n\r\nThis sets up a failing test for https://github.com/facebook/react/issues/31695. It checks that controlled inputs are not reset by a form's `reset()` method. This currently fails for `<input type=\"checkbox\" />` and `<input type=\"radio\" />`. It works fine for regular text inputs, but I figured it would be good to include those in the test as well.\r\n\r\n## How did you test this change?\r\n\r\nThis change is tests 🙂",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31700/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31742",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31742/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31742/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31742/events",
    "html_url": "https://github.com/facebook/react/issues/31742",
    "id": 2735365586,
    "node_id": "I_kwDOAJy2Ks6jCl3S",
    "number": 31742,
    "title": "[Compiler Bug]: Ref values may not be accessed during render when using `mergeRefs`",
    "user": {
      "login": "NeilTheFisher",
      "id": 47160993,
      "node_id": "MDQ6VXNlcjQ3MTYwOTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/47160993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NeilTheFisher",
      "html_url": "https://github.com/NeilTheFisher",
      "followers_url": "https://api.github.com/users/NeilTheFisher/followers",
      "following_url": "https://api.github.com/users/NeilTheFisher/following{/other_user}",
      "gists_url": "https://api.github.com/users/NeilTheFisher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NeilTheFisher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NeilTheFisher/subscriptions",
      "organizations_url": "https://api.github.com/users/NeilTheFisher/orgs",
      "repos_url": "https://api.github.com/users/NeilTheFisher/repos",
      "events_url": "https://api.github.com/users/NeilTheFisher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NeilTheFisher/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T09:32:53Z",
    "updated_at": "2024-12-12T09:32:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvhgJcsNgB5CTAG4A+ABIJKlCPgDqOSoTkB6RaoDc4gL7jxx4-lxkA1gjYkYEALb4AFrlxMMGR7AHMmXF8oACMAOjhvYwB3CAArXARnLzJU4y8EGFCEAFopEjBjaO1ovLImOmMweGN64nRY3DBxWgZmVnx8woQAJVIwOQAVFX5xfHxYhfrMKFxR8uR8flGyRli1yZV8AB98emISeoRCQQBtAF1xQQ3t3f2p4-wX3D3SAGEyLTRHbOA4iWb4BJ0MA0JjUApXACSdGWqzG+AAvPglis1mBYhc4TB+AAhCAQSgIMh0QSWOjgpgkTYEjJSQhIlG42IUuihSL4OSYgCMwjEEjmkOh+AuMGhawxUthLMRyJxYxuAAY7rTwXMpDIYO4mDLUYyjic6FRKLS5jY6RI9bIpfRGCw2IMioRcfwyiKdVKcJsJQRsSb8BBGcz4WyVSawL6xXMsYz+LhOJgEOGsTG5ejc-gAOQ9F2sfPxxPlrMc0je0g0v02-CaMAIJObENrMsVub8dukfBkMCfSm7dgrMhVEakADy0VSCEYkw+Fq0KkE8VgUjoBExZWtFdt5YP+CstNt3WdfTY7AKRTWv282Doblw+hgznqoX4wEkfasG2-ZTPMO3z7GoEzsAAMgAIsoACiFL5FuhxWJ2QZEMoOanM2az8MulB1nacz2PgmADmAH6OL4LZlIOKRvoO0ScPgSQwGQfAUZECA+PU-ZOr0rrgg6Br8mYP4kOiwDupO5Svu+PL8EIGKHDcZQADToUoax3IIVgqGUjgINCJhmCop62HQRaXgMN7SWAskfgcMwSEUsYbIp6KHFswE-CQoInGcpCXNc9yPGC9rSI6UlegssQuV6ggEWeFkXq6HA2XeD6sM+xKeK4dBfmJx7-mJQE7CBpByGBkEwUo8Fcc+yGoawkpmJhUDYdWeEEeCxGYJ4E4+FRUiCRFwkKMoYkSVFYw1iQ6mtbWun6RkRmmMopnWOIIBWEAA\n\n### Repro steps\n\nI was previously getting an error saying, \"Ref values (the current property) may not be accessed during render.\" However, passing a function to access the refs seems to work as a solution since there is no eslint error now.\r\n\r\nIn the repro, wrapping the refs in a function return doesn't change any functionality so I'm finding this issue to be a little odd.\r\n\r\nThe error doesn't always appear with every component. I couldn't find a reason why.\r\n\r\nThis seems to be similar to https://github.com/facebook/react/issues/31290\n\n### How often does this bug happen?\n\nSometimes\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31742/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31741",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31741/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31741/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31741/events",
    "html_url": "https://github.com/facebook/react/pull/31741",
    "id": 2734886106,
    "node_id": "PR_kwDOAJy2Ks6E9rhg",
    "number": 31741,
    "title": "[Flight Parcel] Align with more recent changes",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T05:37:28Z",
    "updated_at": "2024-12-12T05:47:26Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31741",
      "html_url": "https://github.com/facebook/react/pull/31741",
      "diff_url": "https://github.com/facebook/react/pull/31741.diff",
      "patch_url": "https://github.com/facebook/react/pull/31741.patch",
      "merged_at": null
    },
    "body": "Follow up to #31725.\r\n\r\nI diffed against the Turbopack one to find any unexpected discrepancies. Some parts are forked enough that it's hard to diff but I think I got most of it.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31741/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31740",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31740/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31740/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31740/events",
    "html_url": "https://github.com/facebook/react/issues/31740",
    "id": 2734858509,
    "node_id": "I_kwDOAJy2Ks6jAqEN",
    "number": 31740,
    "title": "Bug: Nested Suspense Fallback Not Triggering for Child Component",
    "user": {
      "login": "LeoAnt02",
      "id": 21208398,
      "node_id": "MDQ6VXNlcjIxMjA4Mzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/21208398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LeoAnt02",
      "html_url": "https://github.com/LeoAnt02",
      "followers_url": "https://api.github.com/users/LeoAnt02/followers",
      "following_url": "https://api.github.com/users/LeoAnt02/following{/other_user}",
      "gists_url": "https://api.github.com/users/LeoAnt02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LeoAnt02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LeoAnt02/subscriptions",
      "organizations_url": "https://api.github.com/users/LeoAnt02/orgs",
      "repos_url": "https://api.github.com/users/LeoAnt02/repos",
      "events_url": "https://api.github.com/users/LeoAnt02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LeoAnt02/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T05:23:36Z",
    "updated_at": "2024-12-12T05:23:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\nReact version: 18\r\n\r\nSteps To Reproduce\r\n\t1.\tCreate a component with nested <Suspense> boundaries:\r\n\t•\tParent <Suspense> wraps a parent component (DataParent) with a fallback.\r\n\t•\tChild <Suspense> wraps a child component (DataChild) with its own fallback.\r\n\t2.\tPass data-fetching promises to both parent and child components using React.use() or async/await to simulate Suspense-compatible data fetching.\r\n\t3.\tEnsure the child <Suspense> fallback is rendered only when the parent data is resolved but the child data is still loading.\r\n\r\nHere’s a sample implementation:\r\n\r\n```\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Suspense } from \"react\";\r\n\r\ninterface ParentProps {\r\n  dataPromise: Promise<{ items: string[] }>;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Parent({ dataPromise, children }: ParentProps) {\r\n  const data = React.use(dataPromise);\r\n\r\n  return (\r\n    <div className=\"parent\">\r\n      <h2>Parent Data</h2>\r\n      <ul>\r\n        {data.items.map((item, idx) => (\r\n          <li key={idx}>{item}</li>\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n```\r\ninterface ChildProps {\r\n  detailPromise: Promise<{ detail: string }>;\r\n}\r\n\r\nasync function Child({ detailPromise }: ChildProps) {\r\n  const detail = await detailPromise;\r\n\r\n  return (\r\n    <div className=\"child\">\r\n      <h3>Child Detail</h3>\r\n      <p>{detail.detail}</p>\r\n    </div>\r\n  );\r\n}\r\n```\r\n```\r\n\r\nexport default function SuspenseExamplePage() {\r\n  const parentDataPromise = new Promise<{ items: string[] }>((resolve) => {\r\n    setTimeout(() => resolve({ items: [\"Item 1\", \"Item 2\"] }), 1000);\r\n  });\r\n\r\n  const childDataPromise = new Promise<{ detail: string }>((resolve) => {\r\n    setTimeout(() => resolve({ detail: \"Detailed information\" }), 2000);\r\n  });\r\n\r\n  return (\r\n    <Suspense fallback={<div>Loading Parent...</div>}>\r\n      <Parent dataPromise={parentDataPromise}>\r\n        <Suspense fallback={<div>Loading Child...</div>}>\r\n          <Child detailPromise={childDataPromise} />\r\n        </Suspense>\r\n      </Parent>\r\n    </Suspense>\r\n  );\r\n}\r\n```\r\n\r\n## The current behavior\r\n\r\nWhen loading the parent and child components:\r\n\t•\tThe fallback for the parent (\"Loading Parent...\") renders as expected while the parent data is loading.\r\n\t•\tAfter the parent data resolves, the child fallback (\"Loading Child...\") does not trigger.\r\n\t•\tInstead, the parent content renders immediately, and the child fallback is skipped altogether.\r\n\t\r\n\t\r\n\r\n## The expected behavior\r\n\r\nWhen the parent data resolves and the child data is still loading:\r\n\t•\tThe parent content should render normally.\r\n\t•\tThe child fallback (\"Loading Child...\") should render until the child data is ready.\r\n\t\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31740/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31739",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31739/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31739/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31739/events",
    "html_url": "https://github.com/facebook/react/issues/31739",
    "id": 2734764035,
    "node_id": "I_kwDOAJy2Ks6jATAD",
    "number": 31739,
    "title": "Cant read props of undefined [*reading \"getStackAddendum\"]",
    "user": {
      "login": "ndiuky",
      "id": 136149081,
      "node_id": "U_kgDOCB14WQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/136149081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ndiuky",
      "html_url": "https://github.com/ndiuky",
      "followers_url": "https://api.github.com/users/ndiuky/followers",
      "following_url": "https://api.github.com/users/ndiuky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ndiuky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ndiuky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ndiuky/subscriptions",
      "organizations_url": "https://api.github.com/users/ndiuky/orgs",
      "repos_url": "https://api.github.com/users/ndiuky/repos",
      "events_url": "https://api.github.com/users/ndiuky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ndiuky/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T04:31:17Z",
    "updated_at": "2024-12-12T04:31:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After building the application on the production version. I get the err `Cannot read properties of undefined [reading \"getStackAddendum\"]`. I split the application into microfronts that are linked using the webpack module federation.\r\n\r\nBut the error here is because ReactDebugCurrentFrame is undefined.\r\n\r\nProblem doesn't appear in the dev version, only in the production version. \r\n\r\n```js\r\nconst printWarning = (level, format, args) => {\r\n      {\r\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n        if (stack !== '') {\r\n          format += '%s';\r\n          args = args.concat([stack]);\r\n        } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n        var argsWithFormat = args.map(function (item) {\r\n          return String(item);\r\n        }); // Careful: RN currently depends on this prefix\r\n\r\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n        // breaks IE9: https://github.com/facebook/react/issues/13610\r\n        // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n      }\r\n    }\r\n```\r\n\r\nfirst app package.json\r\n```json\r\n{\r\n  \"name\": \"first\",\r\n  \"version\": \"1.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@joint/core\": \"^4.0.4\",\r\n    \"@mui/icons-material\": \"^5.11.6\",\r\n    \"@mui/lab\": \"^5.0.0-alpha.125\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@mui/x-date-pickers\": \"^5.0.18\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"@types/react\": \"^18.0.27\",\r\n    \"@types/react-dom\": \"^18.0.10\",\r\n    \"chart.js\": \"^4.4.3\",\r\n    \"color\": \"^4.2.3\",\r\n    \"date-fns\": \"^2.29.3\",\r\n    \"history\": \"^5.3.0\",\r\n    \"js-cookie\": \"^3.0.5\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"notistack\": \"^3.0.1\",\r\n    \"path-to-regexp\": \"^6.2.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-chartjs-2\": \"^5.2.0\",\r\n    \"react-custom-scrollbars-2\": \"^4.5.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"^5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run make-types && npm run generate-env && craco start --verbose\",\r\n    \"make-types\": \"make-federated-types -o public/@types\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-shell-app\",\r\n    \"serve\": \"serve -s build\",\r\n    \"mock-api\": \"node \\\"src/mocks/api.js\\\"\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\",\r\n    \"devcert\": \"set HTTPS=true&&set SSL_CRT_FILE=../wes-shell-app/cert.crt&&set SSL_KEY_FILE=../wes-shell-app/cert.key\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"@types/color\": \"^3.0.6\",\r\n    \"@types/lodash\": \"^4.14.191\",\r\n    \"connect-api-mocker\": \"^1.10.0\",\r\n    \"express\": \"^4.18.2\",\r\n    \"i18next\": \"^22.5.1\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"jwt-decode\": \"^3.1.2\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"react-barcode-reader\": \"^0.0.2\",\r\n    \"react-i18next\": \"^12.1.5\",\r\n    \"tailwindcss\": \"^3.3.3\",\r\n    \"zod\": \"^3.20.2\"\r\n  }\r\n}\r\n```\r\n\r\nsecond app package.json \r\n```json\r\n{\r\n  \"name\": \"second\",\r\n  \"version\": \"2.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@mui/icons-material\": \"^5.11.16\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"external-remotes-plugin\": \"^1.0.0\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run generate-env && craco start --verbose\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-voice-picking-app\",\r\n    \"serve\": \"serve -s build -p 3003\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"i18next\": \"^23.2.11\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"react-i18next\": \"^13.0.2\",\r\n    \"tailwindcss\": \"^3.3.3\"\r\n  }\r\n}\r\n```",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31739/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31739/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31738",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31738/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31738/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31738/events",
    "html_url": "https://github.com/facebook/react/pull/31738",
    "id": 2734469547,
    "node_id": "PR_kwDOAJy2Ks6E8NcW",
    "number": 31738,
    "title": "[Flight] Color and badge non-primary environments",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:44:11Z",
    "updated_at": "2024-12-12T02:34:20Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31738",
      "html_url": "https://github.com/facebook/react/pull/31738",
      "diff_url": "https://github.com/facebook/react/pull/31738.diff",
      "patch_url": "https://github.com/facebook/react/pull/31738.patch",
      "merged_at": null
    },
    "body": "Stacked on #31737.\r\n\r\n<img width=\"987\" alt=\"Screenshot 2024-12-11 at 8 41 15 PM\" src=\"https://github.com/user-attachments/assets/438379a9-0138-4d02-a53a-419402839558\" />\r\n\r\nWhen mixing environments (like \"use cache\" or third party RSC) it's useful to color and badge those components differently to differentiate.\r\n\r\nI'm not putting them in separate tracks because when they do actually execute, like cache misses or third party RSCs, they behave like they're part of the same tree. ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31738/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31737",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31737/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31737/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31737/events",
    "html_url": "https://github.com/facebook/react/pull/31737",
    "id": 2734435577,
    "node_id": "PR_kwDOAJy2Ks6E8F1d",
    "number": 31737,
    "title": "[Flight] Emit Deduped Server Components Marker",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:24:20Z",
    "updated_at": "2024-12-12T01:49:34Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31737",
      "html_url": "https://github.com/facebook/react/pull/31737",
      "diff_url": "https://github.com/facebook/react/pull/31737.diff",
      "patch_url": "https://github.com/facebook/react/pull/31737.patch",
      "merged_at": null
    },
    "body": "Stacked on #31736.\r\n\r\n<img width=\"1223\" alt=\"Screenshot 2024-12-11 at 8 21 12 PM\" src=\"https://github.com/user-attachments/assets/a7cbc04b-c831-476b-aa2f-baddec9461c9\" />\r\n\r\nThis emits a placeholder when we're deduping a component. This starts when the parent's self time ends, where we would've started rendering this component if it wasn't already started. The end time is when the actual render ends since the parent is also blocked by it.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31737/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31736",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31736/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31736/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31736/events",
    "html_url": "https://github.com/facebook/react/pull/31736",
    "id": 2734169627,
    "node_id": "PR_kwDOAJy2Ks6E7LPb",
    "number": 31736,
    "title": "[Flight] Sort Server Components Track Group ahead of Client Scheduler/Components Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T22:35:10Z",
    "updated_at": "2024-12-11T22:47:29Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31736",
      "html_url": "https://github.com/facebook/react/pull/31736",
      "diff_url": "https://github.com/facebook/react/pull/31736.diff",
      "patch_url": "https://github.com/facebook/react/pull/31736.patch",
      "merged_at": null
    },
    "body": "Stacked on #31735.\r\n\r\nThis ensures that Server Components Track comes first. Since it's typically rendered first on the server for initial load and then flows into scheduler and client components work. Also puts it closer to the Network and further away from \"Main\" JS.\r\n\r\n<img width=\"769\" alt=\"Screenshot 2024-12-11 at 5 31 41 PM\" src=\"https://github.com/user-attachments/assets/7198db0f-075e-4a78-8ea4-3bfbf06727cb\" />\r\n\r\nSame trick as in #31615.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31736/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31735",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31735/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31735/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31735/events",
    "html_url": "https://github.com/facebook/react/pull/31735",
    "id": 2734085199,
    "node_id": "PR_kwDOAJy2Ks6E64SY",
    "number": 31735,
    "title": "[Flight] Stack Parallel Components in Separate Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T21:41:34Z",
    "updated_at": "2024-12-11T22:53:40Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31735",
      "html_url": "https://github.com/facebook/react/pull/31735",
      "diff_url": "https://github.com/facebook/react/pull/31735.diff",
      "patch_url": "https://github.com/facebook/react/pull/31735.patch",
      "merged_at": null
    },
    "body": "Stacked on https://github.com/facebook/react/pull/31729\r\n\r\n<img width=\"1436\" alt=\"Screenshot 2024-12-11 at 3 36 41 PM\" src=\"https://github.com/user-attachments/assets/0a201913-0076-4bbf-be18-8f1df6c58313\" />\r\n\r\nThe Server Components visualization is currently a tree flame graph where parent spans the child. This makes it equivalent to the Client Components visualization.\r\n\r\nHowever, since Server Components can be async and therefore parallel, we need to do something when two children are executed in parallel. This PR bumps parallel children into a separate track and then within that track if that child has more children it can grow within that track.\r\n\r\nI currently just cut off more than 10 parallel tracks.\r\n\r\nSynchronous Server Components are still in sequence but it's unlikely because even a simple microtasky Async Component is still parallel.\r\n\r\n<img width=\"959\" alt=\"Screenshot 2024-12-11 at 4 31 17 PM\" src=\"https://github.com/user-attachments/assets/5ad6a7f8-7fa0-46dc-af51-78caf9849176\" />\r\n\r\nI think this is probably not a very useful visualization for Server Components but we can try it out.\r\n\r\nI'm also going to try a different visualization where parent-child relationship is horizontal and parallel vertical instead, but it might not be possible to make that line up in this tool. It makes it a little harder to see how much different components (including their children) impact the overall tree. If that's the only visualization it's also confusing why it's different dimensions than the Client Component version.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31735/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31734",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31734/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31734/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31734/events",
    "html_url": "https://github.com/facebook/react/issues/31734",
    "id": 2734059580,
    "node_id": "I_kwDOAJy2Ks6i9nA8",
    "number": 31734,
    "title": "[React 19] Discard ongoing action?",
    "user": {
      "login": "MrFlashAccount",
      "id": 61194245,
      "node_id": "MDQ6VXNlcjYxMTk0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61194245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrFlashAccount",
      "html_url": "https://github.com/MrFlashAccount",
      "followers_url": "https://api.github.com/users/MrFlashAccount/followers",
      "following_url": "https://api.github.com/users/MrFlashAccount/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrFlashAccount/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrFlashAccount/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrFlashAccount/subscriptions",
      "organizations_url": "https://api.github.com/users/MrFlashAccount/orgs",
      "repos_url": "https://api.github.com/users/MrFlashAccount/repos",
      "events_url": "https://api.github.com/users/MrFlashAccount/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrFlashAccount/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T21:25:19Z",
    "updated_at": "2024-12-11T21:27:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\nI tried to implement _search as you type_ component (see: https://codesandbox.io/p/devbox/k3dvwn) and found that the `useActionState` + `startTransition` doesn't discard outdated requests, e.g. if I type `apple`, `useActionState` will wait for the ongoing request to finish, before starting next one, to get results of the `ap` react waits for `a` to resolve.\r\n\r\nIs it an expected behavior? How can I discard ongoing request?\r\n\r\n\r\nhttps://github.com/user-attachments/assets/f0b6f508-a97e-4feb-b50d-ee95736e03fb\r\n\r\n\r\n\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31734/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31732",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31732/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31732/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31732/events",
    "html_url": "https://github.com/facebook/react/issues/31732",
    "id": 2733203893,
    "node_id": "I_kwDOAJy2Ks6i6WG1",
    "number": 31732,
    "title": "Bug: There is no re-render on DOM events in Node.js test runner",
    "user": {
      "login": "krutoo",
      "id": 13140130,
      "node_id": "MDQ6VXNlcjEzMTQwMTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13140130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krutoo",
      "html_url": "https://github.com/krutoo",
      "followers_url": "https://api.github.com/users/krutoo/followers",
      "following_url": "https://api.github.com/users/krutoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/krutoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krutoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krutoo/subscriptions",
      "organizations_url": "https://api.github.com/users/krutoo/orgs",
      "repos_url": "https://api.github.com/users/krutoo/repos",
      "events_url": "https://api.github.com/users/krutoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krutoo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:54:59Z",
    "updated_at": "2024-12-12T07:34:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nHi, I tried to write tests with Node.js test runner with `jsdom` but this is not working.\r\n\r\nInitial render and mount works fine.\r\n\r\nBut when event is dispatched (click for example) there is no re-render of component.\r\n\r\nReact version: 18.3.1\r\n\r\n#### Guides I used\r\n\r\n- https://nodejs.org/en/learn/test-runner/using-test-runner\r\n\r\n## Steps To Reproduce\r\n\r\n0. Have Node.js 20+ \r\n1. Clone repository https://github.com/krutoo/node-test-runner-react-dom\r\n2. `npm i`\r\n3. `npm run test`\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://github.com/krutoo/node-test-runner-react-dom\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThere is no re-render of component after event is dispatched and as result test is failed\r\n\r\n## The expected behavior\r\n\r\nTest is done successfully ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31732/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31731",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31731/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31731/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31731/events",
    "html_url": "https://github.com/facebook/react/issues/31731",
    "id": 2733130184,
    "node_id": "I_kwDOAJy2Ks6i6EHI",
    "number": 31731,
    "title": "Bug: \"reject is not a function\" in react-server",
    "user": {
      "login": "SafeAndS0und",
      "id": 30162348,
      "node_id": "MDQ6VXNlcjMwMTYyMzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30162348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SafeAndS0und",
      "html_url": "https://github.com/SafeAndS0und",
      "followers_url": "https://api.github.com/users/SafeAndS0und/followers",
      "following_url": "https://api.github.com/users/SafeAndS0und/following{/other_user}",
      "gists_url": "https://api.github.com/users/SafeAndS0und/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SafeAndS0und/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SafeAndS0und/subscriptions",
      "organizations_url": "https://api.github.com/users/SafeAndS0und/orgs",
      "repos_url": "https://api.github.com/users/SafeAndS0und/repos",
      "events_url": "https://api.github.com/users/SafeAndS0und/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SafeAndS0und/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:26:10Z",
    "updated_at": "2024-12-12T09:23:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We've been investigating a `t is not a function` error in production logs of our Next.js application. After some digging, we found that the `t` corresponds to `reject` in [react-server/src/ReactFlightReplyServer.js:166](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-server/src/ReactFlightReplyServer.js#L166).   \r\n\r\nThe error is our case appears when someone (likely a bot) sends a POST request to a server action, as if it was submitting a form on our page, but it sends the JSON values for `$ACTION_1:0` and `$ACTION_1:1` with the quotation marks encoded as HTML entities (probably this is the trigger for the error, could be something with newline characters though, not sure). \r\n\r\nReact version: 19.0.0-rc.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Download/fork [this sandbox](https://codesandbox.io/p/devbox/blissful-gauss-6cvc8v) locally. \r\n2. Install dependencies `npm i --legacy-peer-deps --force`\r\n3. Run in development `npm run dev`\r\n4. Download, unzip and put this [requestBody.zip](https://github.com/user-attachments/files/18098248/requestBody.zip) into the project.\r\n5. Send a curl request using the requestBody file: \r\n```\r\ncurl -X POST http://localhost:3000/ -H 'Content-Type: multipart/form-data; boundary=60eb717e9b0dc' --data-binary @requestBody\r\n```\r\n6. Watch the logs of the application, you should see the mentioned error: \r\n![image](https://github.com/user-attachments/assets/ac3b9665-c7f9-49a7-96d3-291e5c18dbc0)\r\n\r\n\r\n## The current behavior\r\nThere's an unhandled error in the logs when action's metadata comes in unexpected format.\r\n\r\n## The expected behavior\r\nThe situation is handled, and there's no errors in the logs. \r\n\r\n## Possible solution\r\nSimilar to what's been added by @sebmarkbage in [ReactFlightClient.js](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-client/src/ReactFlightClient.js#L262) in [this commit](https://github.com/facebook/react/pull/28847/commits/8e33e92aee3c00def90d2ab189eca8bca7380703#diff-4bc3e2f66cfadc63bd7abcc0387fcc7c1373092f832cac1b34614d8cddca5eacR229-R231), wrap the reject call in a `if (reject)`. Additionally, the underlying error which is thrown by this reject (`SyntaxError: Expected property name or '}' in JSON at position 1`), should also be handled.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31731/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31730",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31730/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31730/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31730/events",
    "html_url": "https://github.com/facebook/react/issues/31730",
    "id": 2732767061,
    "node_id": "I_kwDOAJy2Ks6i4rdV",
    "number": 31730,
    "title": "Bug: Updating state during render when using `useSyncExternalStore` throws `Cannot update a component (Component) while rendering a different component (Component)`",
    "user": {
      "login": "astoilkov",
      "id": 884810,
      "node_id": "MDQ6VXNlcjg4NDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/884810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astoilkov",
      "html_url": "https://github.com/astoilkov",
      "followers_url": "https://api.github.com/users/astoilkov/followers",
      "following_url": "https://api.github.com/users/astoilkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/astoilkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astoilkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astoilkov/subscriptions",
      "organizations_url": "https://api.github.com/users/astoilkov/orgs",
      "repos_url": "https://api.github.com/users/astoilkov/repos",
      "events_url": "https://api.github.com/users/astoilkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astoilkov/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T11:53:25Z",
    "updated_at": "2024-12-11T11:53:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open the Console before you work with the page\r\n2. Click the \"increment\" button 5 times\r\n3. You will see the error in the Console\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/p/sandbox/polished-wind-d9dyvj\r\n\r\n## The current behavior\r\n\r\nWhen updating the store it throws `Cannot update a component (`Component`) while rendering a different component (`Component`)`.\r\n\r\n## The expected behavior\r\n\r\nIt should work the same way `useState` works when calling `setState` during render.\r\n\r\n## Notes\r\n\r\nThis is coming from a user of `use-local-storage-state` hook that has around ~500k monthly downloads — https://github.com/astoilkov/use-local-storage-state/issues/77.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31730/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31730/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31729",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31729/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31729/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31729/events",
    "html_url": "https://github.com/facebook/react/pull/31729",
    "id": 2731760287,
    "node_id": "PR_kwDOAJy2Ks6Ey0-S",
    "number": 31729,
    "title": "[Flight] Log Server Component into Performance Track",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T04:02:27Z",
    "updated_at": "2024-12-11T19:44:12Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31729",
      "html_url": "https://github.com/facebook/react/pull/31729",
      "diff_url": "https://github.com/facebook/react/pull/31729.diff",
      "patch_url": "https://github.com/facebook/react/pull/31729.patch",
      "merged_at": null
    },
    "body": "<img width=\"966\" alt=\"Screenshot 2024-12-10 at 10 49 19 PM\" src=\"https://github.com/user-attachments/assets/27a21bdf-86b9-4203-893b-89523e698138\">\r\n\r\nThis emits a tree view visualization of the timing information for each Server Component provided in the RSC payload.\r\n\r\nThe unique thing about this visualization is that the end time of each Server Component spans the end of the last child. Now what is conceptually a blocking child is kind of undefined in RSC. E.g. if you're not using a Promise on the client, or if it is wrapped in Suspense, is it really blocking the parent?\r\n\r\nHere I reconstruct parent-child relationship by which chunks reference other chunks. A child can belong to more than one parent like when we dedupe the result of a Server Component.\r\n\r\nThen I wait until the whole RSC payload has streamed in, and then I traverse the tree collecting the end time from children as I go and emit the `performance.measure()` calls on the way up.\r\n\r\nThere's more work for this visualization in follow ups but this is the basics. For example, since the Server Component time span includes async work it's possible for siblings to execute their span in parallel (Foo and Bar in the screenshot are parallel siblings). To deal with this we need to spawn parallel work into separate tracks. Each one can be deep due to large trees. This can makes this type of visualization unwieldy when you have a lot of parallelism. Therefore I also plan another flatter Timeline visualization in a follow up.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31729/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31728",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31728/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31728/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31728/events",
    "html_url": "https://github.com/facebook/react/issues/31728",
    "id": 2731717866,
    "node_id": "I_kwDOAJy2Ks6i0rTq",
    "number": 31728,
    "title": "Bug: Critical Security Vulnerability in ReactSharedInternals Usage, Remote code execution",
    "user": {
      "login": "cybergazer",
      "id": 165423274,
      "node_id": "U_kgDOCdwoqg",
      "avatar_url": "https://avatars.githubusercontent.com/u/165423274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cybergazer",
      "html_url": "https://github.com/cybergazer",
      "followers_url": "https://api.github.com/users/cybergazer/followers",
      "following_url": "https://api.github.com/users/cybergazer/following{/other_user}",
      "gists_url": "https://api.github.com/users/cybergazer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cybergazer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cybergazer/subscriptions",
      "organizations_url": "https://api.github.com/users/cybergazer/orgs",
      "repos_url": "https://api.github.com/users/cybergazer/repos",
      "events_url": "https://api.github.com/users/cybergazer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cybergazer/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T03:20:00Z",
    "updated_at": "2024-12-11T03:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Critical Security Vulnerability in ReactSharedInternals Usage\r\n\r\n## Issue Overview\r\n\r\nA severe and potentially exploitable security vulnerability has been identified in the way ReactSharedInternals is accessed and utilized within React. The current implementation makes unsafe assumptions about the immutability and integrity of the ReactSharedInternals object, introducing significant risks to applications built on React.\r\n\r\n## Vulnerability Details\r\n\r\nThe vulnerability stems from the unrestricted access to the ReactSharedInternals object and its associated dispatcher. Here are the critical issues:\r\n\r\n## 1. Tampering or Injection Risks\r\n\r\nThe ReactSharedInternals object is globally accessible within React's internal environment, making it susceptible to:\r\n\r\nMalicious Tampering: Attackers with access to the build environment, or those who exploit vulnerabilities in the application, can alter ReactSharedInternals or its dispatcher to:\r\n\r\nInject malicious code.\r\n\r\nHijack hooks behavior to execute unauthorized logic.\r\n\r\nCode Injection Attacks: In environments where React code is shared or executed (e.g., server-side rendering, multi-tenant environments), the global nature of ReactSharedInternals creates a critical attack vector for modifying application behavior.\r\n\r\n**Null or Invalid Dispatcher**\r\n\r\nThe resolveDispatcher() function assumes that the dispatcher is correctly configured during render phases. However:\r\n\r\nIf dispatcher is null or tampered with, applications may crash or exhibit undefined behavior.\r\n\r\nMalicious actors could manipulate the dispatcher lifecycle to intercept and exfiltrate sensitive data, including component state, props, or context values.\r\n\r\n**Leaking Debug Information**\r\n\r\nIn __DEV__ environments, error handling mechanisms (e.g., console.error) inadvertently reveal implementation details about ReactSharedInternals. This information could:\r\n\r\nAssist attackers in reverse-engineering React internals.\r\n\r\nHighlight potential weak points for exploitation.\r\n\r\n4. Unstable and Experimental APIs\r\n\r\nFunctions relying on experimental or unstable APIs (e.g., useMemoCache, unstable_useContextWithBailout) compound the risk:\r\n\r\nThese APIs may not have the same security scrutiny as stable React APIs, making them more vulnerable to edge-case bugs and exploits.\r\n\r\nImpact\r\n\r\nThis vulnerability has wide-reaching implications:\r\n\r\nCompromise of Application Integrity: A successful exploit could allow attackers to alter core React behavior, inject malicious functionality, or disrupt rendering logic.\r\n\r\nData Leakage: Sensitive application data managed by React (state, context) could be intercepted or exposed.\r\n\r\nSupply Chain Attacks: Any environment where the ReactSharedInternals object is accessible to external entities is at risk of exploitation.\r\n\r\nGiven the pervasiveness of React in modern web applications, this issue has the potential to impact a significant number of projects globally.\r\n\r\nSteps to Reproduce\r\n\r\nAccess the ReactSharedInternals object via React.__REACT_DEVTOOLS_GLOBAL_HOOK__.ReactSharedInternals in a React environment.\r\n\r\nModify the dispatcher to inject arbitrary behavior.\r\n\r\nObserve the altered behavior of hooks (e.g., useState, useEffect) or trigger a crash by nullifying the dispatcher.\r\n\r\nSuggested Mitigation\r\n\r\nRestrict Access to ReactSharedInternals:\r\n\r\nPrevent external access to ReactSharedInternals outside of React’s internal scope.\r\n\r\nHarden access control for the dispatcher object.\r\n\r\nValidate Dispatcher:\r\n\r\nAdd strict checks to ensure dispatcher integrity before usage.\r\n\r\nLog and fail gracefully if tampering is detected.\r\n\r\nRemove or Secure Experimental APIs:\r\n\r\nDeprecate experimental APIs where possible or provide safer, stable alternatives.\r\n\r\nHarden Development (__DEV__) Paths:\r\n\r\nAvoid leaking sensitive implementation details in __DEV__ environments.\r\n\r\nUrgency\r\n\r\nThis issue poses an extreme security risk due to its potential for widespread exploitation. It is imperative that the React team prioritize this vulnerability and release a patch as soon as possible. Given React’s ubiquity in the web development ecosystem, even a small window of exposure could have catastrophic consequences.\r\n\r\nTimeline for Action\r\n\r\nWe recommend:\r\n\r\nImmediate triage and verification.\r\n\r\nA high-priority patch within 7 days.\r\n\r\nClear communication to the community regarding the fix and steps to secure applications.\r\n\r\nWe strongly urge the React team to treat this issue with the utmost seriousness and prioritize a resolution immediately.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31728/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31727",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31727/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31727/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31727/events",
    "html_url": "https://github.com/facebook/react/issues/31727",
    "id": 2731460356,
    "node_id": "I_kwDOAJy2Ks6izscE",
    "number": 31727,
    "title": "[Compiler Bug]: Compiler fails to memoize hooks with no hook calls",
    "user": {
      "login": "billyjanitsch",
      "id": 1158733,
      "node_id": "MDQ6VXNlcjExNTg3MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1158733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/billyjanitsch",
      "html_url": "https://github.com/billyjanitsch",
      "followers_url": "https://api.github.com/users/billyjanitsch/followers",
      "following_url": "https://api.github.com/users/billyjanitsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/billyjanitsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/billyjanitsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/billyjanitsch/subscriptions",
      "organizations_url": "https://api.github.com/users/billyjanitsch/orgs",
      "repos_url": "https://api.github.com/users/billyjanitsch/repos",
      "events_url": "https://api.github.com/users/billyjanitsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/billyjanitsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T23:35:42Z",
    "updated_at": "2024-12-11T09:10:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://github.com/billyjanitsch/react-compiler-hook-detection-bug\n\n### Repro steps\n\nGiven the following three custom hooks:\r\n\r\n```tsx\r\nimport {useDebugValue} from 'react'\r\n\r\nfunction useFoo() {\r\n  return () => 'foo'\r\n}\r\n\r\nfunction useBar() {\r\n  useDebugValue('bar')\r\n  return () => 'bar'\r\n}\r\n\r\nfunction useBaz() {\r\n  return useCallback(() => 'baz', [])\r\n}\r\n```\r\n\r\nI'd expect the compiler to memoize all of them, but it only memoizes `useBar` and `useBaz`:\r\n\r\n```tsx\r\nimport { useCallback, useDebugValue } from \"react\";\r\nfunction useFoo() {\r\n  return () => \"foo\";\r\n}\r\nfunction useBar() {\r\n  useDebugValue(\"bar\");\r\n  return _temp;\r\n}\r\nfunction _temp() {\r\n  return \"bar\";\r\n}\r\nfunction useBaz() {\r\n  return _temp2;\r\n}\r\nfunction _temp2() {\r\n  return \"baz\";\r\n}\r\n```\r\n\r\nI'm guessing that it's because the compiler's hook detection logic looks for at least one hook call in the function body. I understand that it generally doesn't make sense to write a custom hook that doesn't use any other hooks, but the exception is when the custom hook would have used only `useMemo` and/or `useCallback`, such as `useBaz`. I expect the compiler to let me remove those hooks without losing memoization.\r\n\r\nThis doesn't reproduce in the playground. I'm not sure why.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31727/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31723",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31723/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31723/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31723/events",
    "html_url": "https://github.com/facebook/react/pull/31723",
    "id": 2730902358,
    "node_id": "PR_kwDOAJy2Ks6Ev5Cw",
    "number": 31723,
    "title": "[compiler] Allow sequence expressions in for loops, and prevent DCE of declarations when the variable is reassigned in a value block",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T18:37:11Z",
    "updated_at": "2024-12-10T18:40:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31723",
      "html_url": "https://github.com/facebook/react/pull/31723",
      "diff_url": "https://github.com/facebook/react/pull/31723.diff",
      "patch_url": "https://github.com/facebook/react/pull/31723.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #31723\n* #31712\n\nSummary:\nTwo somewhat unrelated fixes that combine to allow loops like `for (i =1, j =1; ...)` to be handled. We introduce a new case for building reactive functions when a block prior to a goto doesnt generate a value; this is the case for the fallthrough of sequence blocks in for loop inits, since the value is not read by anything.\n\nWe also make it so that we don't DCE declarations of variables that are written to in value blocks. If we did DCE such declarations, we would then later convert the reassignment to a const declaration--but declarations in value blocks are banned.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31723/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31722",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31722/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31722/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31722/events",
    "html_url": "https://github.com/facebook/react/issues/31722",
    "id": 2730704928,
    "node_id": "I_kwDOAJy2Ks6iw0Ag",
    "number": 31722,
    "title": "Bug: `react-hooks/rules-of-hooks` does not allow `_Component` names underscore prefix for 'private naming convention'",
    "user": {
      "login": "700software",
      "id": 20981023,
      "node_id": "MDQ6VXNlcjIwOTgxMDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20981023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/700software",
      "html_url": "https://github.com/700software",
      "followers_url": "https://api.github.com/users/700software/followers",
      "following_url": "https://api.github.com/users/700software/following{/other_user}",
      "gists_url": "https://api.github.com/users/700software/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/700software/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/700software/subscriptions",
      "organizations_url": "https://api.github.com/users/700software/orgs",
      "repos_url": "https://api.github.com/users/700software/repos",
      "events_url": "https://api.github.com/users/700software/events{/privacy}",
      "received_events_url": "https://api.github.com/users/700software/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710375792,
        "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
        "name": "Type: Discussion",
        "color": "fef2c0",
        "default": false,
        "description": null
      },
      {
        "id": 1249821345,
        "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
        "name": "Component: ESLint Rules",
        "color": "f7afdb",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T17:12:34Z",
    "updated_at": "2024-12-11T17:38:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nLatest version `eslint-plugin-react-hooks@5.1.0`\r\n\r\n## Steps To Reproduce\r\n\r\n```\r\nexport function _SomeComponentWeNotWantUsedOutsideThisDirectory() {\r\n  const result = useSomeHook();\r\n}\r\n```\r\n\r\n## The current behavior\r\nProduces eslint error\r\n\r\n> React Hook \"useSomeHook\" is called in function \"_SomeComponentWeNotWantUsedOutsideThisDirectory\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\". eslint([react-hooks/rules-of-hooks](https://reactjs.org/docs/hooks-rules.html))\r\n\r\n\r\n## The expected behavior\r\n\r\nNo eslint warning, because we have clearly indicated it is a component using the uppercase letter after the underscore prefix.\r\n\r\n## Proposed solution\r\n\r\nhttps://github.com/facebook/react/blob/4a8fc0f92e0f75257962522b51a938bf4dfda77a/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js#L49\r\n\r\ncould be easily changed to\r\n\r\n```ts\r\n  return node.type === 'Identifier' && /^_?[A-Z]/.test(node.name);\r\n```\r\n\r\nI have thought about whether it should be a config option but I'm leaning towards 'less is more'. Either  way, I'm willing to make PR for this and test coverage but need confirmation you guys will take this into consideration before I put in the work.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31722/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31721",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31721/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31721/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31721/events",
    "html_url": "https://github.com/facebook/react/pull/31721",
    "id": 2730552444,
    "node_id": "PR_kwDOAJy2Ks6Euqk7",
    "number": 31721,
    "title": "Fix canary version strings",
    "user": {
      "login": "jackpope",
      "id": 8965173,
      "node_id": "MDQ6VXNlcjg5NjUxNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackpope",
      "html_url": "https://github.com/jackpope",
      "followers_url": "https://api.github.com/users/jackpope/followers",
      "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
      "organizations_url": "https://api.github.com/users/jackpope/orgs",
      "repos_url": "https://api.github.com/users/jackpope/repos",
      "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackpope/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T16:09:04Z",
    "updated_at": "2024-12-10T21:39:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31721",
      "html_url": "https://github.com/facebook/react/pull/31721",
      "diff_url": "https://github.com/facebook/react/pull/31721.diff",
      "patch_url": "https://github.com/facebook/react/pull/31721.patch",
      "merged_at": null
    },
    "body": "We're still publishing RCs and creating canary version strings using the RC naming convention. Setting the `canaryChannelLabel` back to canary fixes the version names and tags after the 19 stable release.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31721/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31719",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31719/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31719/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31719/events",
    "html_url": "https://github.com/facebook/react/issues/31719",
    "id": 2730053571,
    "node_id": "I_kwDOAJy2Ks6iuU_D",
    "number": 31719,
    "title": "Bug: Detached Elements Observed When Toggling Content with ReactDOM.createPortal()",
    "user": {
      "login": "suraj-pachakar",
      "id": 60176976,
      "node_id": "MDQ6VXNlcjYwMTc2OTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/60176976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suraj-pachakar",
      "html_url": "https://github.com/suraj-pachakar",
      "followers_url": "https://api.github.com/users/suraj-pachakar/followers",
      "following_url": "https://api.github.com/users/suraj-pachakar/following{/other_user}",
      "gists_url": "https://api.github.com/users/suraj-pachakar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suraj-pachakar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suraj-pachakar/subscriptions",
      "organizations_url": "https://api.github.com/users/suraj-pachakar/orgs",
      "repos_url": "https://api.github.com/users/suraj-pachakar/repos",
      "events_url": "https://api.github.com/users/suraj-pachakar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suraj-pachakar/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T12:56:47Z",
    "updated_at": "2024-12-10T12:56:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We observed a possible memory leak when using `ReactDOM.createPortal()` to render components. The issue occurs when toggling the portal content between a `RadioGroup` and the text `Loading...`. If the `RadioGroup` is interacted with before toggling, some DOM elements are not properly cleaned up, leaving detached nodes in memory.\r\n\r\nHowever, if no interaction happens with the `RadioGroup`, the content toggles without any memory issues.\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Visit the [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl).\r\n2. Click on the Load Content button to render the `RadioGroup`.\r\n3. Interact with the `RadioGroup` by selecting the Other option. (eg: option B)\r\n4. Click on the Unload Content button to remove the `RadioGroup`.\r\n5. Open the Memory tab in the browser developer tools and trigger Garbage Collection.\r\n6. Select the **Detached Elements** profiling type and take a snapshot of the memory to observe detached nodes.\r\n\r\nLink to code example: [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl)\r\n\r\n## The current behavior\r\nDetached elements are present in the memory snapshot after interacting with the `RadioGroup` and toggling it off. This indicates a potential memory leak caused by `ReactDOM.createPortal()`.\r\n![image](https://github.com/user-attachments/assets/9dc8fdf2-fb68-4089-9f9c-5d5198c1f95f)\r\n\r\n\r\n## The expected behavior\r\nDetached nodes should not be present after toggling the `RadioGroup` and triggering garbage collection, regardless of interactions.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31719/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31718",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31718/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31718/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31718/events",
    "html_url": "https://github.com/facebook/react/issues/31718",
    "id": 2729618823,
    "node_id": "I_kwDOAJy2Ks6isq2H",
    "number": 31718,
    "title": "Bug: `select` menu won't update highlight when options change",
    "user": {
      "login": "paalss",
      "id": 39744024,
      "node_id": "MDQ6VXNlcjM5NzQ0MDI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/39744024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paalss",
      "html_url": "https://github.com/paalss",
      "followers_url": "https://api.github.com/users/paalss/followers",
      "following_url": "https://api.github.com/users/paalss/following{/other_user}",
      "gists_url": "https://api.github.com/users/paalss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paalss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paalss/subscriptions",
      "organizations_url": "https://api.github.com/users/paalss/orgs",
      "repos_url": "https://api.github.com/users/paalss/repos",
      "events_url": "https://api.github.com/users/paalss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paalss/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T09:58:11Z",
    "updated_at": "2024-12-10T10:01:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If a `<select>`'s options changes (e.g. if options are loaded asynchronously) while the menu is open, the `<select>` won't re-examine its options to update its highlight position (`selectedIndex`). \r\n\r\nIn the Codesandbox example below, I have a select menu that will have its options swapped out 1 second after it receives focus. This is to simulate the fetch call that I'm doing in my real app.\r\n\r\nReact version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n**Browser:** Either use Google Chrome or Microsoft Edge, it's not reproducible in Firefox.\r\n\r\nBrowser versions:\r\n\r\n- Google Chrome – Version 131.0.6778.109 (Official Build) (64-bit)\r\n- Microsoft Edge – Version 131.0.2903.86 (Official build) (64-bit)\r\n\r\n\r\n1. Open [this Codesandbox](https://codesandbox.io/p/sandbox/select-menu-with-dynamic-options-forked-nvt488?workspaceId=ws_DVJY22si5M9kiWeZb4Ybth)\r\n2. Click on the select menu\r\n3. Watch as the complete options list replaces the old one\r\n\r\n1 ![image](https://github.com/user-attachments/assets/69a7ca1a-2c01-42b2-ae4e-9f08be431a2b) 2 ![image](https://github.com/user-attachments/assets/dba3eb0e-4043-4ba7-96a7-64f6ff583529) 3 ![image](https://github.com/user-attachments/assets/25b9f490-ddf4-4698-bc91-beb16fddfcc5)\r\n\r\n## The current behavior\r\n\r\nWhen the new options replaces the old ones, the highlight position stays on the first element. Only after closing and re-opening the menu, the highlight goes to the option with `value=\"italy\"`\r\n\r\n## The expected behavior\r\n\r\nI want the select menu to highlight the `value=\"italy\"`  option after options are replaced",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31718/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31717",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31717/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31717/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31717/events",
    "html_url": "https://github.com/facebook/react/issues/31717",
    "id": 2729305831,
    "node_id": "I_kwDOAJy2Ks6irebn",
    "number": 31717,
    "title": "[eslint-plugin-react-hooks] v5.1.0 was released without any changes in github",
    "user": {
      "login": "aqeelat",
      "id": 5212744,
      "node_id": "MDQ6VXNlcjUyMTI3NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5212744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aqeelat",
      "html_url": "https://github.com/aqeelat",
      "followers_url": "https://api.github.com/users/aqeelat/followers",
      "following_url": "https://api.github.com/users/aqeelat/following{/other_user}",
      "gists_url": "https://api.github.com/users/aqeelat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aqeelat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aqeelat/subscriptions",
      "organizations_url": "https://api.github.com/users/aqeelat/orgs",
      "repos_url": "https://api.github.com/users/aqeelat/repos",
      "events_url": "https://api.github.com/users/aqeelat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aqeelat/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T07:50:10Z",
    "updated_at": "2024-12-11T08:44:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The newer version is released https://www.npmjs.com/package/eslint-plugin-react-hooks/v/5.1.0\r\n\r\nHowever, there aren't any changes in the package dir here as of the time of posting the issue.\r\nhttps://github.com/facebook/react/tree/372ec00c0384cd2089651154ea7c67693ee3f2a5/packages/eslint-plugin-react-hooks\r\n\r\nThis is concerning because it could indicate that someone published on behalf of the react team.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31717/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31712",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31712/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31712/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31712/events",
    "html_url": "https://github.com/facebook/react/pull/31712",
    "id": 2728149079,
    "node_id": "PR_kwDOAJy2Ks6EmT9E",
    "number": 31712,
    "title": "[compiler] Implement support for non-declaration for initializers",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T20:04:20Z",
    "updated_at": "2024-12-10T18:39:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31712",
      "html_url": "https://github.com/facebook/react/pull/31712",
      "diff_url": "https://github.com/facebook/react/pull/31712.diff",
      "patch_url": "https://github.com/facebook/react/pull/31712.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #31723\n* __->__ #31712\n\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31712/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31708",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31708/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31708/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31708/events",
    "html_url": "https://github.com/facebook/react/issues/31708",
    "id": 2726551905,
    "node_id": "I_kwDOAJy2Ks6ig-Fh",
    "number": 31708,
    "title": "Bug: useOptimistic",
    "user": {
      "login": "olegdunkan",
      "id": 1710435,
      "node_id": "MDQ6VXNlcjE3MTA0MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1710435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olegdunkan",
      "html_url": "https://github.com/olegdunkan",
      "followers_url": "https://api.github.com/users/olegdunkan/followers",
      "following_url": "https://api.github.com/users/olegdunkan/following{/other_user}",
      "gists_url": "https://api.github.com/users/olegdunkan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olegdunkan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olegdunkan/subscriptions",
      "organizations_url": "https://api.github.com/users/olegdunkan/orgs",
      "repos_url": "https://api.github.com/users/olegdunkan/repos",
      "events_url": "https://api.github.com/users/olegdunkan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olegdunkan/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-09T09:58:35Z",
    "updated_at": "2024-12-09T20:16:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version:19.0.0\r\n[I got example from react.dev](https://react.dev/reference/react/useOptimistic) slightly modified it.\r\n \r\nNow `key` attribute derive value from data (message)\r\n```\r\n        <div key={message.id}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n```\r\n\r\n## Steps To Reproduce\r\n\r\n1.[Open link](https://codesandbox.io/p/sandbox/react-dev-forked-5hddwt)\r\n2.Send new message\r\n3.Open console\r\n\r\n## The current behavior\r\nOn the image below we can see duplicating list of messages from [I got example from react.dev](https://react.dev/reference/react/useOptimistic).\r\n![image](https://github.com/user-attachments/assets/4868e7d0-7eb1-4e29-ac11-eff9047982f7)\r\n\r\nThere was no error in [I got example from react.dev](https://react.dev/reference/react/useOptimistic) because `key` gets values from `index`, `index` is always unique.\r\n\r\n        <div key={index}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n\r\nCode that is slightly modified by me print out following (from console):\r\n\r\n> Encountered two children with the same key, `8908d3a9-13b7-4576-bf85-e850f7ab2c1c`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version\r\n\r\nI don't know the reason of that behaviour but I see that `updateFn` in `useOptimistic` is called with `new message` twice:\r\n1. First time after `addOptimisticMessage` is called, \r\n2. Second time while `Thread` component is re-rendered.\r\n\r\n\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31708/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31706",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31706/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31706/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31706/events",
    "html_url": "https://github.com/facebook/react/pull/31706",
    "id": 2726176299,
    "node_id": "PR_kwDOAJy2Ks6EfcDO",
    "number": 31706,
    "title": "perf(SSR): remove regexp in function escapeHtml",
    "user": {
      "login": "ShuiRuTian",
      "id": 28779355,
      "node_id": "MDQ6VXNlcjI4Nzc5MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28779355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShuiRuTian",
      "html_url": "https://github.com/ShuiRuTian",
      "followers_url": "https://api.github.com/users/ShuiRuTian/followers",
      "following_url": "https://api.github.com/users/ShuiRuTian/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShuiRuTian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShuiRuTian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShuiRuTian/subscriptions",
      "organizations_url": "https://api.github.com/users/ShuiRuTian/orgs",
      "repos_url": "https://api.github.com/users/ShuiRuTian/repos",
      "events_url": "https://api.github.com/users/ShuiRuTian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShuiRuTian/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-12-09T06:59:59Z",
    "updated_at": "2024-12-10T07:19:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31706",
      "html_url": "https://github.com/facebook/react/pull/31706",
      "diff_url": "https://github.com/facebook/react/pull/31706.diff",
      "patch_url": "https://github.com/facebook/react/pull/31706.patch",
      "merged_at": null
    },
    "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn test --debug --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nRegular expression is slow, removing them in escapeHtml should make things faster\r\n\r\nI did similar change in vue at first: https://github.com/vuejs/core/pull/12507#issue-2724750870\r\n\r\nThen I took a look at react and found vue copied react's implementation, then why not let react have this improvement too?\r\n\r\n## How did you test this change?\r\n\r\nSome simple benchmark by me and @Justineo\r\n\r\nhttps://jsbench.me/rqm4ehfndc/1, shows for simple cases, it's 2x~3x faster\r\nhttps://jsben.ch/pbGau, shows for random string, it's 1.1x faster\r\n\r\nAlso cc @aickin, who refactor escapeHtml 8 years ago, maybe you might have interest in this PR too\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31706/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31705",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31705/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31705/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31705/events",
    "html_url": "https://github.com/facebook/react/issues/31705",
    "id": 2726112761,
    "node_id": "I_kwDOAJy2Ks6ifS35",
    "number": 31705,
    "title": "Bug: memory leak caused by alternate fiber tree",
    "user": {
      "login": "y122972",
      "id": 28836754,
      "node_id": "MDQ6VXNlcjI4ODM2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/28836754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y122972",
      "html_url": "https://github.com/y122972",
      "followers_url": "https://api.github.com/users/y122972/followers",
      "following_url": "https://api.github.com/users/y122972/following{/other_user}",
      "gists_url": "https://api.github.com/users/y122972/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y122972/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y122972/subscriptions",
      "organizations_url": "https://api.github.com/users/y122972/orgs",
      "repos_url": "https://api.github.com/users/y122972/repos",
      "events_url": "https://api.github.com/users/y122972/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y122972/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T06:22:53Z",
    "updated_at": "2024-12-09T06:22:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 19\r\n\r\n## Steps To Reproduce\r\n\r\n```typescript\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nconst App = () => {\r\n  const [obj, setObj] = useState<any>({});\r\n  const [count, setCount] = useState(0);\r\n\r\n  const refresh = useCallback(() => {\r\n    const newObj = {\r\n      buffer: new Uint8Array(100_000_000),\r\n      count: count + 1,\r\n    };\r\n    setObj(newObj);\r\n    setCount((pre) => pre + 1);\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={refresh}>new obj({count})</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n```\r\n\r\n## The current behavior\r\n<img width=\"732\" alt=\"image\" src=\"https://github.com/user-attachments/assets/503bfa91-0bae-46cd-a4d7-a103f8cd4e2f\">\r\n\r\n## The expected behavior\r\nrelease the `memoizedState` / `baseState` of alternate fiber tree.\r\n\r\n## Confusion\r\nI know it's not a good way to store a big state using `useState`. But it's a bug or some feature?\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31705/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31704",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31704/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31704/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31704/events",
    "html_url": "https://github.com/facebook/react/issues/31704",
    "id": 2725991162,
    "node_id": "I_kwDOAJy2Ks6ie1L6",
    "number": 31704,
    "title": "[React 19]",
    "user": {
      "login": "Melissa1181",
      "id": 175780127,
      "node_id": "U_kgDOCnoxHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/175780127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Melissa1181",
      "html_url": "https://github.com/Melissa1181",
      "followers_url": "https://api.github.com/users/Melissa1181/followers",
      "following_url": "https://api.github.com/users/Melissa1181/following{/other_user}",
      "gists_url": "https://api.github.com/users/Melissa1181/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Melissa1181/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Melissa1181/subscriptions",
      "organizations_url": "https://api.github.com/users/Melissa1181/orgs",
      "repos_url": "https://api.github.com/users/Melissa1181/repos",
      "events_url": "https://api.github.com/users/Melissa1181/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Melissa1181/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T05:00:41Z",
    "updated_at": "2024-12-09T05:51:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31704/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31703",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31703/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31703/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31703/events",
    "html_url": "https://github.com/facebook/react/issues/31703",
    "id": 2725940076,
    "node_id": "I_kwDOAJy2Ks6ieots",
    "number": 31703,
    "title": "Bug: useEffect Without Dependencies Not Executed Correctly After setState ",
    "user": {
      "login": "SirM2z",
      "id": 12137804,
      "node_id": "MDQ6VXNlcjEyMTM3ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12137804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SirM2z",
      "html_url": "https://github.com/SirM2z",
      "followers_url": "https://api.github.com/users/SirM2z/followers",
      "following_url": "https://api.github.com/users/SirM2z/following{/other_user}",
      "gists_url": "https://api.github.com/users/SirM2z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SirM2z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SirM2z/subscriptions",
      "organizations_url": "https://api.github.com/users/SirM2z/orgs",
      "repos_url": "https://api.github.com/users/SirM2z/repos",
      "events_url": "https://api.github.com/users/SirM2z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SirM2z/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T04:17:15Z",
    "updated_at": "2024-12-12T09:06:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.3.1 & 19.0.0\r\n\r\n## Steps To Reproduce\r\nConsider the following example code, where there are two useEffect hooks. \r\n- The first useEffect executes a setFlag, with the value of setFlag being the same as the initial value. The second parameter is an empty array. \r\n- The second useEffect simply logs a message without passing a second argument (i.e., without dependencies) to make it easier to observe the execution behavior. \r\n\r\nThe JSX part of the component contains only a div with a click event, which triggers a setState when clicked.\r\n```jsx\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function App(props) {\r\n  const [index, setIndex] = useState(0);\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  console.log('index', index);\r\n\r\n  useEffect(() => {\r\n    console.log('setFlag invoke');\r\n    setFlag(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect no dependencies invoke');\r\n    return () => {\r\n      console.log('useEffect no dependencies hook destroyed');\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        console.log('-------------- click --------------');\r\n        setIndex(pre => pre + 1);\r\n      }}\r\n      style={{ color: 'red' }}\r\n    >\r\n      button {index} {Date.now()}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://playcode.io/2185135\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nAfter the click event is triggered, the component's render does not occur in tandem with the second useEffect. Render occurs twice, but the second useEffect executes only once.\r\n<img width=\"627\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9ffc9e58-4e89-4bd8-b407-e67837634554\">\r\n\r\n## The expected behavior\r\nAfter the click event is triggered, the component's render should occur in tandem with the second useEffect. Render should happen twice, and the second useEffect should also execute twice.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31703/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31702",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31702/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31702/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31702/events",
    "html_url": "https://github.com/facebook/react/issues/31702",
    "id": 2725265879,
    "node_id": "I_kwDOAJy2Ks6icEHX",
    "number": 31702,
    "title": "[Compiler Bug]: server components built externally by the compiler error when rendered in app",
    "user": {
      "login": "DanielOrtel",
      "id": 19431728,
      "node_id": "MDQ6VXNlcjE5NDMxNzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/19431728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielOrtel",
      "html_url": "https://github.com/DanielOrtel",
      "followers_url": "https://api.github.com/users/DanielOrtel/followers",
      "following_url": "https://api.github.com/users/DanielOrtel/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielOrtel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielOrtel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielOrtel/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielOrtel/orgs",
      "repos_url": "https://api.github.com/users/DanielOrtel/repos",
      "events_url": "https://api.github.com/users/DanielOrtel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielOrtel/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T14:09:14Z",
    "updated_at": "2024-12-08T15:51:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://github.com/DanielOrtel/compiler-bug\r\n\r\n### Repro steps\r\n\r\nI'm building an esm UI library and ran into a weird issue with one component when adding react compiler to the build pipeline(which uses rollup with babel). You can check the reproduction repo above, steps:\r\n- set node 20.18.0 if not set automatically\r\n- run `yarn install`\r\n- run `yarn test-compiler-error` // this will build the library and start a bare-bones next app\r\n- open localhost:3000\\\r\n- app should error out with the following:\r\n```\r\nTypeError: Cannot read properties of undefined (reading 'H')\r\n    at IconsRoot (../../libraries/ui/.dist/icons-root/index.js:12:72)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at stringify (<anonymous>)\r\n    at stringify (<anonymous>)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\r\ndigest: \"2235527820\"\r\n  15 |       require(\"next/dist/compiled/react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\r\n  16 |     exports.c = function (size) {\r\n> 17 |       var dispatcher = ReactSharedInternals.H; // <-- ReactSharedInternals is undefined here. \r\n```\r\n\r\nThis is a limited snippet of the larger UI library. The error occurs because the file doesn't have the `'use client'` directive, but this component should be server-renderable, it's just a barebones `div` component. If I remove the `react-compiler` from the build pipeline or if I make this a client component, it works as expected.\r\n\r\nUltimately, I'd expect adding the compiler to the build pipeline of my library to not break components which previously could be server rendered and force the use of client directive when it is unnecessary. \r\n\r\nMy suggestion, in case compiler-optimized components can't be rendered in server components, would be to have some config option that can be enabled for libraries to check for client directives and only optimize client components. And also to add some form of an error boundary to let consumers know that they're trying to render a compiler-optimized component in a server environment. The current error is just confusing and it took me a while to figure out what was the exact cause of it. \r\n\r\nBut the ideal scenario would be to not have to worry about in which environment the component is rendered. Sure, the compiler optimizations do nothing on the server, but that means that they could be essentially stubbed and still render as expected. I dislike the idea of having to output separate versions of components that can be potentially server rendered, simply because I'd like the client versions to be optimized by the compiler. \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-df7b47d-20241124",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31702/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31701",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31701/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31701/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31701/events",
    "html_url": "https://github.com/facebook/react/issues/31701",
    "id": 2725003192,
    "node_id": "I_kwDOAJy2Ks6ibD-4",
    "number": 31701,
    "title": "Bug: creation reactjs new project latest so v19 ",
    "user": {
      "login": "Productivix",
      "id": 6737060,
      "node_id": "MDQ6VXNlcjY3MzcwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6737060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Productivix",
      "html_url": "https://github.com/Productivix",
      "followers_url": "https://api.github.com/users/Productivix/followers",
      "following_url": "https://api.github.com/users/Productivix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Productivix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Productivix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Productivix/subscriptions",
      "organizations_url": "https://api.github.com/users/Productivix/orgs",
      "repos_url": "https://api.github.com/users/Productivix/repos",
      "events_url": "https://api.github.com/users/Productivix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Productivix/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T07:20:00Z",
    "updated_at": "2024-12-08T07:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1.npx create-react-app module\r\n2. wait \r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nCreating a new React app in /..../module\r\n\r\nInstalling packages. This might take a couple of minutes.\r\nInstalling react, react-dom, and react-scripts with cra-template...\r\n\r\n\r\nadded 1315 packages in 10m\r\n\r\n261 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nInitialized a git repository.\r\n\r\nInstalling template dependencies using npm...\r\nnpm error code ERESOLVE\r\nnpm error ERESOLVE unable to resolve dependency tree\r\nnpm error\r\nnpm error While resolving: module_loginweb_reactjs@0.1.0\r\nnpm error Found: react@19.0.0\r\nnpm error node_modules/react\r\nnpm error   react@\"^19.0.0\" from the root project\r\nnpm error\r\nnpm error Could not resolve dependency:\r\nnpm error peer react@\"^18.0.0\" from @testing-library/react@13.4.0\r\nnpm error node_modules/@testing-library/react\r\nnpm error   @testing-library/react@\"^13.0.0\" from the root project\r\nnpm error\r\nnpm error Fix the upstream dependency conflict, or retry\r\nnpm error this command with --force or --legacy-peer-deps\r\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm error\r\nnpm error\r\nnpm error For a full report see:\r\nnpm error /.../.npm/_logs/2024-12-08T06_26_18_730Z-eresolve-report.txt\r\nnpm error A complete log of this run can be found in: ..\r\n\r\n## The expected behavior\r\nno error",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31701/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31700",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31700/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31700/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31700/events",
    "html_url": "https://github.com/facebook/react/pull/31700",
    "id": 2724999229,
    "node_id": "PR_kwDOAJy2Ks6EbZxm",
    "number": 31700,
    "title": "Failing test for controlled input elements in forms incorrectly resetting",
    "user": {
      "login": "jeremy-deutsch",
      "id": 13303900,
      "node_id": "MDQ6VXNlcjEzMzAzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13303900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremy-deutsch",
      "html_url": "https://github.com/jeremy-deutsch",
      "followers_url": "https://api.github.com/users/jeremy-deutsch/followers",
      "following_url": "https://api.github.com/users/jeremy-deutsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremy-deutsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremy-deutsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremy-deutsch/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremy-deutsch/orgs",
      "repos_url": "https://api.github.com/users/jeremy-deutsch/repos",
      "events_url": "https://api.github.com/users/jeremy-deutsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremy-deutsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-08T07:08:17Z",
    "updated_at": "2024-12-08T07:09:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31700",
      "html_url": "https://github.com/facebook/react/pull/31700",
      "diff_url": "https://github.com/facebook/react/pull/31700.diff",
      "patch_url": "https://github.com/facebook/react/pull/31700.patch",
      "merged_at": null
    },
    "body": "## Summary\r\n\r\nThis sets up a failing test for https://github.com/facebook/react/issues/31695. It checks that controlled inputs are not reset by a form's `reset()` method. This currently fails for `<input type=\"checkbox\" />` and `<input type=\"radio\" />`. It works fine for regular text inputs, but I figured it would be good to include those in the test as well.\r\n\r\n## How did you test this change?\r\n\r\nThis change is tests 🙂",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31700/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31742",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31742/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31742/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31742/events",
    "html_url": "https://github.com/facebook/react/issues/31742",
    "id": 2735365586,
    "node_id": "I_kwDOAJy2Ks6jCl3S",
    "number": 31742,
    "title": "[Compiler Bug]: Ref values may not be accessed during render when using `mergeRefs`",
    "user": {
      "login": "NeilTheFisher",
      "id": 47160993,
      "node_id": "MDQ6VXNlcjQ3MTYwOTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/47160993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NeilTheFisher",
      "html_url": "https://github.com/NeilTheFisher",
      "followers_url": "https://api.github.com/users/NeilTheFisher/followers",
      "following_url": "https://api.github.com/users/NeilTheFisher/following{/other_user}",
      "gists_url": "https://api.github.com/users/NeilTheFisher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NeilTheFisher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NeilTheFisher/subscriptions",
      "organizations_url": "https://api.github.com/users/NeilTheFisher/orgs",
      "repos_url": "https://api.github.com/users/NeilTheFisher/repos",
      "events_url": "https://api.github.com/users/NeilTheFisher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NeilTheFisher/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T09:32:53Z",
    "updated_at": "2024-12-12T09:32:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwFkBPAQU0wAoAlPmAAdNvhgJcsNgB5CTAG4A+ABIJKlCPgDqOSoTkB6RaoDc4gL7jxx4-lxkA1gjYkYEALb4AFrlxMMGR7AHMmXF8oACMAOjhvYwB3CAArXARnLzJU4y8EGFCEAFopEjBjaO1ovLImOmMweGN64nRY3DBxWgZmVnx8woQAJVIwOQAVFX5xfHxYhfrMKFxR8uR8flGyRli1yZV8AB98emISeoRCQQBtAF1xQQ3t3f2p4-wX3D3SAGEyLTRHbOA4iWb4BJ0MA0JjUApXACSdGWqzG+AAvPglis1mBYhc4TB+AAhCAQSgIMh0QSWOjgpgkTYEjJSQhIlG42IUuihSL4OSYgCMwjEEjmkOh+AuMGhawxUthLMRyJxYxuAAY7rTwXMpDIYO4mDLUYyjic6FRKLS5jY6RI9bIpfRGCw2IMioRcfwyiKdVKcJsJQRsSb8BBGcz4WyVSawL6xXMsYz+LhOJgEOGsTG5ejc-gAOQ9F2sfPxxPlrMc0je0g0v02-CaMAIJObENrMsVub8dukfBkMCfSm7dgrMhVEakADy0VSCEYkw+Fq0KkE8VgUjoBExZWtFdt5YP+CstNt3WdfTY7AKRTWv282Doblw+hgznqoX4wEkfasG2-ZTPMO3z7GoEzsAAMgAIsoACiFL5FuhxWJ2QZEMoOanM2az8MulB1nacz2PgmADmAH6OL4LZlIOKRvoO0ScPgSQwGQfAUZECA+PU-ZOr0rrgg6Br8mYP4kOiwDupO5Svu+PL8EIGKHDcZQADToUoax3IIVgqGUjgINCJhmCop62HQRaXgMN7SWAskfgcMwSEUsYbIp6KHFswE-CQoInGcpCXNc9yPGC9rSI6UlegssQuV6ggEWeFkXq6HA2XeD6sM+xKeK4dBfmJx7-mJQE7CBpByGBkEwUo8Fcc+yGoawkpmJhUDYdWeEEeCxGYJ4E4+FRUiCRFwkKMoYkSVFYw1iQ6mtbWun6RkRmmMopnWOIIBWEAA\n\n### Repro steps\n\nI was previously getting an error saying, \"Ref values (the current property) may not be accessed during render.\" However, passing a function to access the refs seems to work as a solution since there is no eslint error now.\r\n\r\nIn the repro, wrapping the refs in a function return doesn't change any functionality so I'm finding this issue to be a little odd.\r\n\r\nThe error doesn't always appear with every component. I couldn't find a reason why.\r\n\r\nThis seems to be similar to https://github.com/facebook/react/issues/31290\n\n### How often does this bug happen?\n\nSometimes\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31742/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31741",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31741/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31741/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31741/events",
    "html_url": "https://github.com/facebook/react/pull/31741",
    "id": 2734886106,
    "node_id": "PR_kwDOAJy2Ks6E9rhg",
    "number": 31741,
    "title": "[Flight Parcel] Align with more recent changes",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T05:37:28Z",
    "updated_at": "2024-12-12T05:47:26Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31741",
      "html_url": "https://github.com/facebook/react/pull/31741",
      "diff_url": "https://github.com/facebook/react/pull/31741.diff",
      "patch_url": "https://github.com/facebook/react/pull/31741.patch",
      "merged_at": null
    },
    "body": "Follow up to #31725.\r\n\r\nI diffed against the Turbopack one to find any unexpected discrepancies. Some parts are forked enough that it's hard to diff but I think I got most of it.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31741/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31740",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31740/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31740/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31740/events",
    "html_url": "https://github.com/facebook/react/issues/31740",
    "id": 2734858509,
    "node_id": "I_kwDOAJy2Ks6jAqEN",
    "number": 31740,
    "title": "Bug: Nested Suspense Fallback Not Triggering for Child Component",
    "user": {
      "login": "LeoAnt02",
      "id": 21208398,
      "node_id": "MDQ6VXNlcjIxMjA4Mzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/21208398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LeoAnt02",
      "html_url": "https://github.com/LeoAnt02",
      "followers_url": "https://api.github.com/users/LeoAnt02/followers",
      "following_url": "https://api.github.com/users/LeoAnt02/following{/other_user}",
      "gists_url": "https://api.github.com/users/LeoAnt02/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LeoAnt02/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LeoAnt02/subscriptions",
      "organizations_url": "https://api.github.com/users/LeoAnt02/orgs",
      "repos_url": "https://api.github.com/users/LeoAnt02/repos",
      "events_url": "https://api.github.com/users/LeoAnt02/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LeoAnt02/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T05:23:36Z",
    "updated_at": "2024-12-12T05:23:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\nReact version: 18\r\n\r\nSteps To Reproduce\r\n\t1.\tCreate a component with nested <Suspense> boundaries:\r\n\t•\tParent <Suspense> wraps a parent component (DataParent) with a fallback.\r\n\t•\tChild <Suspense> wraps a child component (DataChild) with its own fallback.\r\n\t2.\tPass data-fetching promises to both parent and child components using React.use() or async/await to simulate Suspense-compatible data fetching.\r\n\t3.\tEnsure the child <Suspense> fallback is rendered only when the parent data is resolved but the child data is still loading.\r\n\r\nHere’s a sample implementation:\r\n\r\n```\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Suspense } from \"react\";\r\n\r\ninterface ParentProps {\r\n  dataPromise: Promise<{ items: string[] }>;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nfunction Parent({ dataPromise, children }: ParentProps) {\r\n  const data = React.use(dataPromise);\r\n\r\n  return (\r\n    <div className=\"parent\">\r\n      <h2>Parent Data</h2>\r\n      <ul>\r\n        {data.items.map((item, idx) => (\r\n          <li key={idx}>{item}</li>\r\n        ))}\r\n      </ul>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n```\r\ninterface ChildProps {\r\n  detailPromise: Promise<{ detail: string }>;\r\n}\r\n\r\nasync function Child({ detailPromise }: ChildProps) {\r\n  const detail = await detailPromise;\r\n\r\n  return (\r\n    <div className=\"child\">\r\n      <h3>Child Detail</h3>\r\n      <p>{detail.detail}</p>\r\n    </div>\r\n  );\r\n}\r\n```\r\n```\r\n\r\nexport default function SuspenseExamplePage() {\r\n  const parentDataPromise = new Promise<{ items: string[] }>((resolve) => {\r\n    setTimeout(() => resolve({ items: [\"Item 1\", \"Item 2\"] }), 1000);\r\n  });\r\n\r\n  const childDataPromise = new Promise<{ detail: string }>((resolve) => {\r\n    setTimeout(() => resolve({ detail: \"Detailed information\" }), 2000);\r\n  });\r\n\r\n  return (\r\n    <Suspense fallback={<div>Loading Parent...</div>}>\r\n      <Parent dataPromise={parentDataPromise}>\r\n        <Suspense fallback={<div>Loading Child...</div>}>\r\n          <Child detailPromise={childDataPromise} />\r\n        </Suspense>\r\n      </Parent>\r\n    </Suspense>\r\n  );\r\n}\r\n```\r\n\r\n## The current behavior\r\n\r\nWhen loading the parent and child components:\r\n\t•\tThe fallback for the parent (\"Loading Parent...\") renders as expected while the parent data is loading.\r\n\t•\tAfter the parent data resolves, the child fallback (\"Loading Child...\") does not trigger.\r\n\t•\tInstead, the parent content renders immediately, and the child fallback is skipped altogether.\r\n\t\r\n\t\r\n\r\n## The expected behavior\r\n\r\nWhen the parent data resolves and the child data is still loading:\r\n\t•\tThe parent content should render normally.\r\n\t•\tThe child fallback (\"Loading Child...\") should render until the child data is ready.\r\n\t\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31740/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31739",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31739/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31739/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31739/events",
    "html_url": "https://github.com/facebook/react/issues/31739",
    "id": 2734764035,
    "node_id": "I_kwDOAJy2Ks6jATAD",
    "number": 31739,
    "title": "Cant read props of undefined [*reading \"getStackAddendum\"]",
    "user": {
      "login": "ndiuky",
      "id": 136149081,
      "node_id": "U_kgDOCB14WQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/136149081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ndiuky",
      "html_url": "https://github.com/ndiuky",
      "followers_url": "https://api.github.com/users/ndiuky/followers",
      "following_url": "https://api.github.com/users/ndiuky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ndiuky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ndiuky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ndiuky/subscriptions",
      "organizations_url": "https://api.github.com/users/ndiuky/orgs",
      "repos_url": "https://api.github.com/users/ndiuky/repos",
      "events_url": "https://api.github.com/users/ndiuky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ndiuky/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-12T04:31:17Z",
    "updated_at": "2024-12-12T04:31:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "After building the application on the production version. I get the err `Cannot read properties of undefined [reading \"getStackAddendum\"]`. I split the application into microfronts that are linked using the webpack module federation.\r\n\r\nBut the error here is because ReactDebugCurrentFrame is undefined.\r\n\r\nProblem doesn't appear in the dev version, only in the production version. \r\n\r\n```js\r\nconst printWarning = (level, format, args) => {\r\n      {\r\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n        if (stack !== '') {\r\n          format += '%s';\r\n          args = args.concat([stack]);\r\n        } // eslint-disable-next-line react-internal/safe-string-coercion\r\n\r\n        var argsWithFormat = args.map(function (item) {\r\n          return String(item);\r\n        }); // Careful: RN currently depends on this prefix\r\n\r\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\r\n        // breaks IE9: https://github.com/facebook/react/issues/13610\r\n        // eslint-disable-next-line react-internal/no-production-logging\r\n\r\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\r\n      }\r\n    }\r\n```\r\n\r\nfirst app package.json\r\n```json\r\n{\r\n  \"name\": \"first\",\r\n  \"version\": \"1.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@joint/core\": \"^4.0.4\",\r\n    \"@mui/icons-material\": \"^5.11.6\",\r\n    \"@mui/lab\": \"^5.0.0-alpha.125\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@mui/x-date-pickers\": \"^5.0.18\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"@types/react\": \"^18.0.27\",\r\n    \"@types/react-dom\": \"^18.0.10\",\r\n    \"chart.js\": \"^4.4.3\",\r\n    \"color\": \"^4.2.3\",\r\n    \"date-fns\": \"^2.29.3\",\r\n    \"history\": \"^5.3.0\",\r\n    \"js-cookie\": \"^3.0.5\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"notistack\": \"^3.0.1\",\r\n    \"path-to-regexp\": \"^6.2.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-chartjs-2\": \"^5.2.0\",\r\n    \"react-custom-scrollbars-2\": \"^4.5.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"^5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run make-types && npm run generate-env && craco start --verbose\",\r\n    \"make-types\": \"make-federated-types -o public/@types\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-shell-app\",\r\n    \"serve\": \"serve -s build\",\r\n    \"mock-api\": \"node \\\"src/mocks/api.js\\\"\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\",\r\n    \"devcert\": \"set HTTPS=true&&set SSL_CRT_FILE=../wes-shell-app/cert.crt&&set SSL_KEY_FILE=../wes-shell-app/cert.key\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"@types/color\": \"^3.0.6\",\r\n    \"@types/lodash\": \"^4.14.191\",\r\n    \"connect-api-mocker\": \"^1.10.0\",\r\n    \"express\": \"^4.18.2\",\r\n    \"i18next\": \"^22.5.1\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"jwt-decode\": \"^3.1.2\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"react-barcode-reader\": \"^0.0.2\",\r\n    \"react-i18next\": \"^12.1.5\",\r\n    \"tailwindcss\": \"^3.3.3\",\r\n    \"zod\": \"^3.20.2\"\r\n  }\r\n}\r\n```\r\n\r\nsecond app package.json \r\n```json\r\n{\r\n  \"name\": \"second\",\r\n  \"version\": \"2.0.0\",\r\n  \"dependencies\": {\r\n    \"@cloudbeds/webpack-module-federation-types-plugin\": \"^1.18.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@mui/icons-material\": \"^5.11.16\",\r\n    \"@mui/material\": \"^5.15.21\",\r\n    \"@mui/x-charts\": \"^7.8.0\",\r\n    \"@testing-library/jest-dom\": \"^5.16.5\",\r\n    \"@testing-library/react\": \"^13.4.0\",\r\n    \"@testing-library/user-event\": \"^14.4.3\",\r\n    \"external-remotes-plugin\": \"^1.0.0\",\r\n    \"mobx\": \"^6.7.0\",\r\n    \"mobx-react\": \"^7.6.0\",\r\n    \"mobx-utils\": \"^6.0.5\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.13.0\",\r\n    \"react-scripts\": \"5.0.1\",\r\n    \"typescript\": \"^4.9.4\",\r\n    \"web-vitals\": \"^3.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"dev\": \"npm run generate-env && craco start --verbose\",\r\n    \"generate-env\": \"cd .. && env.sh && cd wes-voice-picking-app\",\r\n    \"serve\": \"serve -s build -p 3003\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@craco/craco\": \"^7.0.0\",\r\n    \"i18next\": \"^23.2.11\",\r\n    \"i18next-browser-languagedetector\": \"^7.1.0\",\r\n    \"react-i18next\": \"^13.0.2\",\r\n    \"tailwindcss\": \"^3.3.3\"\r\n  }\r\n}\r\n```",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31739/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 1,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31739/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31738",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31738/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31738/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31738/events",
    "html_url": "https://github.com/facebook/react/pull/31738",
    "id": 2734469547,
    "node_id": "PR_kwDOAJy2Ks6E8NcW",
    "number": 31738,
    "title": "[Flight] Color and badge non-primary environments",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:44:11Z",
    "updated_at": "2024-12-12T02:34:20Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31738",
      "html_url": "https://github.com/facebook/react/pull/31738",
      "diff_url": "https://github.com/facebook/react/pull/31738.diff",
      "patch_url": "https://github.com/facebook/react/pull/31738.patch",
      "merged_at": null
    },
    "body": "Stacked on #31737.\r\n\r\n<img width=\"987\" alt=\"Screenshot 2024-12-11 at 8 41 15 PM\" src=\"https://github.com/user-attachments/assets/438379a9-0138-4d02-a53a-419402839558\" />\r\n\r\nWhen mixing environments (like \"use cache\" or third party RSC) it's useful to color and badge those components differently to differentiate.\r\n\r\nI'm not putting them in separate tracks because when they do actually execute, like cache misses or third party RSCs, they behave like they're part of the same tree. ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31738/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31737",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31737/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31737/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31737/events",
    "html_url": "https://github.com/facebook/react/pull/31737",
    "id": 2734435577,
    "node_id": "PR_kwDOAJy2Ks6E8F1d",
    "number": 31737,
    "title": "[Flight] Emit Deduped Server Components Marker",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-12T01:24:20Z",
    "updated_at": "2024-12-12T01:49:34Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31737",
      "html_url": "https://github.com/facebook/react/pull/31737",
      "diff_url": "https://github.com/facebook/react/pull/31737.diff",
      "patch_url": "https://github.com/facebook/react/pull/31737.patch",
      "merged_at": null
    },
    "body": "Stacked on #31736.\r\n\r\n<img width=\"1223\" alt=\"Screenshot 2024-12-11 at 8 21 12 PM\" src=\"https://github.com/user-attachments/assets/a7cbc04b-c831-476b-aa2f-baddec9461c9\" />\r\n\r\nThis emits a placeholder when we're deduping a component. This starts when the parent's self time ends, where we would've started rendering this component if it wasn't already started. The end time is when the actual render ends since the parent is also blocked by it.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31737/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31737/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31736",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31736/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31736/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31736/events",
    "html_url": "https://github.com/facebook/react/pull/31736",
    "id": 2734169627,
    "node_id": "PR_kwDOAJy2Ks6E7LPb",
    "number": 31736,
    "title": "[Flight] Sort Server Components Track Group ahead of Client Scheduler/Components Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T22:35:10Z",
    "updated_at": "2024-12-11T22:47:29Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31736",
      "html_url": "https://github.com/facebook/react/pull/31736",
      "diff_url": "https://github.com/facebook/react/pull/31736.diff",
      "patch_url": "https://github.com/facebook/react/pull/31736.patch",
      "merged_at": null
    },
    "body": "Stacked on #31735.\r\n\r\nThis ensures that Server Components Track comes first. Since it's typically rendered first on the server for initial load and then flows into scheduler and client components work. Also puts it closer to the Network and further away from \"Main\" JS.\r\n\r\n<img width=\"769\" alt=\"Screenshot 2024-12-11 at 5 31 41 PM\" src=\"https://github.com/user-attachments/assets/7198db0f-075e-4a78-8ea4-3bfbf06727cb\" />\r\n\r\nSame trick as in #31615.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31736/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31735",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31735/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31735/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31735/events",
    "html_url": "https://github.com/facebook/react/pull/31735",
    "id": 2734085199,
    "node_id": "PR_kwDOAJy2Ks6E64SY",
    "number": 31735,
    "title": "[Flight] Stack Parallel Components in Separate Tracks",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T21:41:34Z",
    "updated_at": "2024-12-11T22:53:40Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31735",
      "html_url": "https://github.com/facebook/react/pull/31735",
      "diff_url": "https://github.com/facebook/react/pull/31735.diff",
      "patch_url": "https://github.com/facebook/react/pull/31735.patch",
      "merged_at": null
    },
    "body": "Stacked on https://github.com/facebook/react/pull/31729\r\n\r\n<img width=\"1436\" alt=\"Screenshot 2024-12-11 at 3 36 41 PM\" src=\"https://github.com/user-attachments/assets/0a201913-0076-4bbf-be18-8f1df6c58313\" />\r\n\r\nThe Server Components visualization is currently a tree flame graph where parent spans the child. This makes it equivalent to the Client Components visualization.\r\n\r\nHowever, since Server Components can be async and therefore parallel, we need to do something when two children are executed in parallel. This PR bumps parallel children into a separate track and then within that track if that child has more children it can grow within that track.\r\n\r\nI currently just cut off more than 10 parallel tracks.\r\n\r\nSynchronous Server Components are still in sequence but it's unlikely because even a simple microtasky Async Component is still parallel.\r\n\r\n<img width=\"959\" alt=\"Screenshot 2024-12-11 at 4 31 17 PM\" src=\"https://github.com/user-attachments/assets/5ad6a7f8-7fa0-46dc-af51-78caf9849176\" />\r\n\r\nI think this is probably not a very useful visualization for Server Components but we can try it out.\r\n\r\nI'm also going to try a different visualization where parent-child relationship is horizontal and parallel vertical instead, but it might not be possible to make that line up in this tool. It makes it a little harder to see how much different components (including their children) impact the overall tree. If that's the only visualization it's also confusing why it's different dimensions than the Client Component version.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31735/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31735/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31734",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31734/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31734/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31734/events",
    "html_url": "https://github.com/facebook/react/issues/31734",
    "id": 2734059580,
    "node_id": "I_kwDOAJy2Ks6i9nA8",
    "number": 31734,
    "title": "[React 19] Discard ongoing action?",
    "user": {
      "login": "MrFlashAccount",
      "id": 61194245,
      "node_id": "MDQ6VXNlcjYxMTk0MjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/61194245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrFlashAccount",
      "html_url": "https://github.com/MrFlashAccount",
      "followers_url": "https://api.github.com/users/MrFlashAccount/followers",
      "following_url": "https://api.github.com/users/MrFlashAccount/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrFlashAccount/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrFlashAccount/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrFlashAccount/subscriptions",
      "organizations_url": "https://api.github.com/users/MrFlashAccount/orgs",
      "repos_url": "https://api.github.com/users/MrFlashAccount/repos",
      "events_url": "https://api.github.com/users/MrFlashAccount/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrFlashAccount/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T21:25:19Z",
    "updated_at": "2024-12-11T21:27:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\nI tried to implement _search as you type_ component (see: https://codesandbox.io/p/devbox/k3dvwn) and found that the `useActionState` + `startTransition` doesn't discard outdated requests, e.g. if I type `apple`, `useActionState` will wait for the ongoing request to finish, before starting next one, to get results of the `ap` react waits for `a` to resolve.\r\n\r\nIs it an expected behavior? How can I discard ongoing request?\r\n\r\n\r\nhttps://github.com/user-attachments/assets/f0b6f508-a97e-4feb-b50d-ee95736e03fb\r\n\r\n\r\n\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31734/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31732",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31732/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31732/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31732/events",
    "html_url": "https://github.com/facebook/react/issues/31732",
    "id": 2733203893,
    "node_id": "I_kwDOAJy2Ks6i6WG1",
    "number": 31732,
    "title": "Bug: There is no re-render on DOM events in Node.js test runner",
    "user": {
      "login": "krutoo",
      "id": 13140130,
      "node_id": "MDQ6VXNlcjEzMTQwMTMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13140130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krutoo",
      "html_url": "https://github.com/krutoo",
      "followers_url": "https://api.github.com/users/krutoo/followers",
      "following_url": "https://api.github.com/users/krutoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/krutoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krutoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krutoo/subscriptions",
      "organizations_url": "https://api.github.com/users/krutoo/orgs",
      "repos_url": "https://api.github.com/users/krutoo/repos",
      "events_url": "https://api.github.com/users/krutoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krutoo/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:54:59Z",
    "updated_at": "2024-12-12T07:34:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nHi, I tried to write tests with Node.js test runner with `jsdom` but this is not working.\r\n\r\nInitial render and mount works fine.\r\n\r\nBut when event is dispatched (click for example) there is no re-render of component.\r\n\r\nReact version: 18.3.1\r\n\r\n#### Guides I used\r\n\r\n- https://nodejs.org/en/learn/test-runner/using-test-runner\r\n\r\n## Steps To Reproduce\r\n\r\n0. Have Node.js 20+ \r\n1. Clone repository https://github.com/krutoo/node-test-runner-react-dom\r\n2. `npm i`\r\n3. `npm run test`\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://github.com/krutoo/node-test-runner-react-dom\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nThere is no re-render of component after event is dispatched and as result test is failed\r\n\r\n## The expected behavior\r\n\r\nTest is done successfully ",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31732/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31731",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31731/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31731/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31731/events",
    "html_url": "https://github.com/facebook/react/issues/31731",
    "id": 2733130184,
    "node_id": "I_kwDOAJy2Ks6i6EHI",
    "number": 31731,
    "title": "Bug: \"reject is not a function\" in react-server",
    "user": {
      "login": "SafeAndS0und",
      "id": 30162348,
      "node_id": "MDQ6VXNlcjMwMTYyMzQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/30162348?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SafeAndS0und",
      "html_url": "https://github.com/SafeAndS0und",
      "followers_url": "https://api.github.com/users/SafeAndS0und/followers",
      "following_url": "https://api.github.com/users/SafeAndS0und/following{/other_user}",
      "gists_url": "https://api.github.com/users/SafeAndS0und/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SafeAndS0und/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SafeAndS0und/subscriptions",
      "organizations_url": "https://api.github.com/users/SafeAndS0und/orgs",
      "repos_url": "https://api.github.com/users/SafeAndS0und/repos",
      "events_url": "https://api.github.com/users/SafeAndS0und/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SafeAndS0und/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T14:26:10Z",
    "updated_at": "2024-12-12T09:23:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We've been investigating a `t is not a function` error in production logs of our Next.js application. After some digging, we found that the `t` corresponds to `reject` in [react-server/src/ReactFlightReplyServer.js:166](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-server/src/ReactFlightReplyServer.js#L166).   \r\n\r\nThe error is our case appears when someone (likely a bot) sends a POST request to a server action, as if it was submitting a form on our page, but it sends the JSON values for `$ACTION_1:0` and `$ACTION_1:1` with the quotation marks encoded as HTML entities (probably this is the trigger for the error, could be something with newline characters though, not sure). \r\n\r\nReact version: 19.0.0-rc.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Download/fork [this sandbox](https://codesandbox.io/p/devbox/blissful-gauss-6cvc8v) locally. \r\n2. Install dependencies `npm i --legacy-peer-deps --force`\r\n3. Run in development `npm run dev`\r\n4. Download, unzip and put this [requestBody.zip](https://github.com/user-attachments/files/18098248/requestBody.zip) into the project.\r\n5. Send a curl request using the requestBody file: \r\n```\r\ncurl -X POST http://localhost:3000/ -H 'Content-Type: multipart/form-data; boundary=60eb717e9b0dc' --data-binary @requestBody\r\n```\r\n6. Watch the logs of the application, you should see the mentioned error: \r\n![image](https://github.com/user-attachments/assets/ac3b9665-c7f9-49a7-96d3-291e5c18dbc0)\r\n\r\n\r\n## The current behavior\r\nThere's an unhandled error in the logs when action's metadata comes in unexpected format.\r\n\r\n## The expected behavior\r\nThe situation is handled, and there's no errors in the logs. \r\n\r\n## Possible solution\r\nSimilar to what's been added by @sebmarkbage in [ReactFlightClient.js](https://github.com/facebook/react/blob/79ddf5b574db085104d917c24a964cbd5b824e09/packages/react-client/src/ReactFlightClient.js#L262) in [this commit](https://github.com/facebook/react/pull/28847/commits/8e33e92aee3c00def90d2ab189eca8bca7380703#diff-4bc3e2f66cfadc63bd7abcc0387fcc7c1373092f832cac1b34614d8cddca5eacR229-R231), wrap the reject call in a `if (reject)`. Additionally, the underlying error which is thrown by this reject (`SyntaxError: Expected property name or '}' in JSON at position 1`), should also be handled.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31731/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31730",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31730/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31730/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31730/events",
    "html_url": "https://github.com/facebook/react/issues/31730",
    "id": 2732767061,
    "node_id": "I_kwDOAJy2Ks6i4rdV",
    "number": 31730,
    "title": "Bug: Updating state during render when using `useSyncExternalStore` throws `Cannot update a component (Component) while rendering a different component (Component)`",
    "user": {
      "login": "astoilkov",
      "id": 884810,
      "node_id": "MDQ6VXNlcjg4NDgxMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/884810?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/astoilkov",
      "html_url": "https://github.com/astoilkov",
      "followers_url": "https://api.github.com/users/astoilkov/followers",
      "following_url": "https://api.github.com/users/astoilkov/following{/other_user}",
      "gists_url": "https://api.github.com/users/astoilkov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/astoilkov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/astoilkov/subscriptions",
      "organizations_url": "https://api.github.com/users/astoilkov/orgs",
      "repos_url": "https://api.github.com/users/astoilkov/repos",
      "events_url": "https://api.github.com/users/astoilkov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/astoilkov/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T11:53:25Z",
    "updated_at": "2024-12-11T11:53:54Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open the Console before you work with the page\r\n2. Click the \"increment\" button 5 times\r\n3. You will see the error in the Console\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/p/sandbox/polished-wind-d9dyvj\r\n\r\n## The current behavior\r\n\r\nWhen updating the store it throws `Cannot update a component (`Component`) while rendering a different component (`Component`)`.\r\n\r\n## The expected behavior\r\n\r\nIt should work the same way `useState` works when calling `setState` during render.\r\n\r\n## Notes\r\n\r\nThis is coming from a user of `use-local-storage-state` hook that has around ~500k monthly downloads — https://github.com/astoilkov/use-local-storage-state/issues/77.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31730/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31730/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31729",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31729/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31729/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31729/events",
    "html_url": "https://github.com/facebook/react/pull/31729",
    "id": 2731760287,
    "node_id": "PR_kwDOAJy2Ks6Ey0-S",
    "number": 31729,
    "title": "[Flight] Log Server Component into Performance Track",
    "user": {
      "login": "sebmarkbage",
      "id": 63648,
      "node_id": "MDQ6VXNlcjYzNjQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/63648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebmarkbage",
      "html_url": "https://github.com/sebmarkbage",
      "followers_url": "https://api.github.com/users/sebmarkbage/followers",
      "following_url": "https://api.github.com/users/sebmarkbage/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebmarkbage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebmarkbage/subscriptions",
      "organizations_url": "https://api.github.com/users/sebmarkbage/orgs",
      "repos_url": "https://api.github.com/users/sebmarkbage/repos",
      "events_url": "https://api.github.com/users/sebmarkbage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebmarkbage/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-11T04:02:27Z",
    "updated_at": "2024-12-11T19:44:12Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31729",
      "html_url": "https://github.com/facebook/react/pull/31729",
      "diff_url": "https://github.com/facebook/react/pull/31729.diff",
      "patch_url": "https://github.com/facebook/react/pull/31729.patch",
      "merged_at": null
    },
    "body": "<img width=\"966\" alt=\"Screenshot 2024-12-10 at 10 49 19 PM\" src=\"https://github.com/user-attachments/assets/27a21bdf-86b9-4203-893b-89523e698138\">\r\n\r\nThis emits a tree view visualization of the timing information for each Server Component provided in the RSC payload.\r\n\r\nThe unique thing about this visualization is that the end time of each Server Component spans the end of the last child. Now what is conceptually a blocking child is kind of undefined in RSC. E.g. if you're not using a Promise on the client, or if it is wrapped in Suspense, is it really blocking the parent?\r\n\r\nHere I reconstruct parent-child relationship by which chunks reference other chunks. A child can belong to more than one parent like when we dedupe the result of a Server Component.\r\n\r\nThen I wait until the whole RSC payload has streamed in, and then I traverse the tree collecting the end time from children as I go and emit the `performance.measure()` calls on the way up.\r\n\r\nThere's more work for this visualization in follow ups but this is the basics. For example, since the Server Component time span includes async work it's possible for siblings to execute their span in parallel (Foo and Bar in the screenshot are parallel siblings). To deal with this we need to spawn parallel work into separate tracks. Each one can be deep due to large trees. This can makes this type of visualization unwieldy when you have a lot of parallelism. Therefore I also plan another flatter Timeline visualization in a follow up.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31729/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31728",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31728/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31728/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31728/events",
    "html_url": "https://github.com/facebook/react/issues/31728",
    "id": 2731717866,
    "node_id": "I_kwDOAJy2Ks6i0rTq",
    "number": 31728,
    "title": "Bug: Critical Security Vulnerability in ReactSharedInternals Usage, Remote code execution",
    "user": {
      "login": "cybergazer",
      "id": 165423274,
      "node_id": "U_kgDOCdwoqg",
      "avatar_url": "https://avatars.githubusercontent.com/u/165423274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cybergazer",
      "html_url": "https://github.com/cybergazer",
      "followers_url": "https://api.github.com/users/cybergazer/followers",
      "following_url": "https://api.github.com/users/cybergazer/following{/other_user}",
      "gists_url": "https://api.github.com/users/cybergazer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cybergazer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cybergazer/subscriptions",
      "organizations_url": "https://api.github.com/users/cybergazer/orgs",
      "repos_url": "https://api.github.com/users/cybergazer/repos",
      "events_url": "https://api.github.com/users/cybergazer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cybergazer/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-11T03:20:00Z",
    "updated_at": "2024-12-11T03:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Critical Security Vulnerability in ReactSharedInternals Usage\r\n\r\n## Issue Overview\r\n\r\nA severe and potentially exploitable security vulnerability has been identified in the way ReactSharedInternals is accessed and utilized within React. The current implementation makes unsafe assumptions about the immutability and integrity of the ReactSharedInternals object, introducing significant risks to applications built on React.\r\n\r\n## Vulnerability Details\r\n\r\nThe vulnerability stems from the unrestricted access to the ReactSharedInternals object and its associated dispatcher. Here are the critical issues:\r\n\r\n## 1. Tampering or Injection Risks\r\n\r\nThe ReactSharedInternals object is globally accessible within React's internal environment, making it susceptible to:\r\n\r\nMalicious Tampering: Attackers with access to the build environment, or those who exploit vulnerabilities in the application, can alter ReactSharedInternals or its dispatcher to:\r\n\r\nInject malicious code.\r\n\r\nHijack hooks behavior to execute unauthorized logic.\r\n\r\nCode Injection Attacks: In environments where React code is shared or executed (e.g., server-side rendering, multi-tenant environments), the global nature of ReactSharedInternals creates a critical attack vector for modifying application behavior.\r\n\r\n**Null or Invalid Dispatcher**\r\n\r\nThe resolveDispatcher() function assumes that the dispatcher is correctly configured during render phases. However:\r\n\r\nIf dispatcher is null or tampered with, applications may crash or exhibit undefined behavior.\r\n\r\nMalicious actors could manipulate the dispatcher lifecycle to intercept and exfiltrate sensitive data, including component state, props, or context values.\r\n\r\n**Leaking Debug Information**\r\n\r\nIn __DEV__ environments, error handling mechanisms (e.g., console.error) inadvertently reveal implementation details about ReactSharedInternals. This information could:\r\n\r\nAssist attackers in reverse-engineering React internals.\r\n\r\nHighlight potential weak points for exploitation.\r\n\r\n4. Unstable and Experimental APIs\r\n\r\nFunctions relying on experimental or unstable APIs (e.g., useMemoCache, unstable_useContextWithBailout) compound the risk:\r\n\r\nThese APIs may not have the same security scrutiny as stable React APIs, making them more vulnerable to edge-case bugs and exploits.\r\n\r\nImpact\r\n\r\nThis vulnerability has wide-reaching implications:\r\n\r\nCompromise of Application Integrity: A successful exploit could allow attackers to alter core React behavior, inject malicious functionality, or disrupt rendering logic.\r\n\r\nData Leakage: Sensitive application data managed by React (state, context) could be intercepted or exposed.\r\n\r\nSupply Chain Attacks: Any environment where the ReactSharedInternals object is accessible to external entities is at risk of exploitation.\r\n\r\nGiven the pervasiveness of React in modern web applications, this issue has the potential to impact a significant number of projects globally.\r\n\r\nSteps to Reproduce\r\n\r\nAccess the ReactSharedInternals object via React.__REACT_DEVTOOLS_GLOBAL_HOOK__.ReactSharedInternals in a React environment.\r\n\r\nModify the dispatcher to inject arbitrary behavior.\r\n\r\nObserve the altered behavior of hooks (e.g., useState, useEffect) or trigger a crash by nullifying the dispatcher.\r\n\r\nSuggested Mitigation\r\n\r\nRestrict Access to ReactSharedInternals:\r\n\r\nPrevent external access to ReactSharedInternals outside of React’s internal scope.\r\n\r\nHarden access control for the dispatcher object.\r\n\r\nValidate Dispatcher:\r\n\r\nAdd strict checks to ensure dispatcher integrity before usage.\r\n\r\nLog and fail gracefully if tampering is detected.\r\n\r\nRemove or Secure Experimental APIs:\r\n\r\nDeprecate experimental APIs where possible or provide safer, stable alternatives.\r\n\r\nHarden Development (__DEV__) Paths:\r\n\r\nAvoid leaking sensitive implementation details in __DEV__ environments.\r\n\r\nUrgency\r\n\r\nThis issue poses an extreme security risk due to its potential for widespread exploitation. It is imperative that the React team prioritize this vulnerability and release a patch as soon as possible. Given React’s ubiquity in the web development ecosystem, even a small window of exposure could have catastrophic consequences.\r\n\r\nTimeline for Action\r\n\r\nWe recommend:\r\n\r\nImmediate triage and verification.\r\n\r\nA high-priority patch within 7 days.\r\n\r\nClear communication to the community regarding the fix and steps to secure applications.\r\n\r\nWe strongly urge the React team to treat this issue with the utmost seriousness and prioritize a resolution immediately.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31728/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31727",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31727/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31727/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31727/events",
    "html_url": "https://github.com/facebook/react/issues/31727",
    "id": 2731460356,
    "node_id": "I_kwDOAJy2Ks6izscE",
    "number": 31727,
    "title": "[Compiler Bug]: Compiler fails to memoize hooks with no hook calls",
    "user": {
      "login": "billyjanitsch",
      "id": 1158733,
      "node_id": "MDQ6VXNlcjExNTg3MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1158733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/billyjanitsch",
      "html_url": "https://github.com/billyjanitsch",
      "followers_url": "https://api.github.com/users/billyjanitsch/followers",
      "following_url": "https://api.github.com/users/billyjanitsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/billyjanitsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/billyjanitsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/billyjanitsch/subscriptions",
      "organizations_url": "https://api.github.com/users/billyjanitsch/orgs",
      "repos_url": "https://api.github.com/users/billyjanitsch/repos",
      "events_url": "https://api.github.com/users/billyjanitsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/billyjanitsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T23:35:42Z",
    "updated_at": "2024-12-11T09:10:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://github.com/billyjanitsch/react-compiler-hook-detection-bug\n\n### Repro steps\n\nGiven the following three custom hooks:\r\n\r\n```tsx\r\nimport {useDebugValue} from 'react'\r\n\r\nfunction useFoo() {\r\n  return () => 'foo'\r\n}\r\n\r\nfunction useBar() {\r\n  useDebugValue('bar')\r\n  return () => 'bar'\r\n}\r\n\r\nfunction useBaz() {\r\n  return useCallback(() => 'baz', [])\r\n}\r\n```\r\n\r\nI'd expect the compiler to memoize all of them, but it only memoizes `useBar` and `useBaz`:\r\n\r\n```tsx\r\nimport { useCallback, useDebugValue } from \"react\";\r\nfunction useFoo() {\r\n  return () => \"foo\";\r\n}\r\nfunction useBar() {\r\n  useDebugValue(\"bar\");\r\n  return _temp;\r\n}\r\nfunction _temp() {\r\n  return \"bar\";\r\n}\r\nfunction useBaz() {\r\n  return _temp2;\r\n}\r\nfunction _temp2() {\r\n  return \"baz\";\r\n}\r\n```\r\n\r\nI'm guessing that it's because the compiler's hook detection logic looks for at least one hook call in the function body. I understand that it generally doesn't make sense to write a custom hook that doesn't use any other hooks, but the exception is when the custom hook would have used only `useMemo` and/or `useCallback`, such as `useBaz`. I expect the compiler to let me remove those hooks without losing memoization.\r\n\r\nThis doesn't reproduce in the playground. I'm not sure why.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0\n\n### What version of React Compiler are you using?\n\n19.0.0-beta-37ed2a7-20241206",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31727/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31723",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31723/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31723/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31723/events",
    "html_url": "https://github.com/facebook/react/pull/31723",
    "id": 2730902358,
    "node_id": "PR_kwDOAJy2Ks6Ev5Cw",
    "number": 31723,
    "title": "[compiler] Allow sequence expressions in for loops, and prevent DCE of declarations when the variable is reassigned in a value block",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-10T18:37:11Z",
    "updated_at": "2024-12-10T18:40:30Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31723",
      "html_url": "https://github.com/facebook/react/pull/31723",
      "diff_url": "https://github.com/facebook/react/pull/31723.diff",
      "patch_url": "https://github.com/facebook/react/pull/31723.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #31723\n* #31712\n\nSummary:\nTwo somewhat unrelated fixes that combine to allow loops like `for (i =1, j =1; ...)` to be handled. We introduce a new case for building reactive functions when a block prior to a goto doesnt generate a value; this is the case for the fallthrough of sequence blocks in for loop inits, since the value is not read by anything.\n\nWe also make it so that we don't DCE declarations of variables that are written to in value blocks. If we did DCE such declarations, we would then later convert the reassignment to a const declaration--but declarations in value blocks are banned.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31723/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31722",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31722/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31722/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31722/events",
    "html_url": "https://github.com/facebook/react/issues/31722",
    "id": 2730704928,
    "node_id": "I_kwDOAJy2Ks6iw0Ag",
    "number": 31722,
    "title": "Bug: `react-hooks/rules-of-hooks` does not allow `_Component` names underscore prefix for 'private naming convention'",
    "user": {
      "login": "700software",
      "id": 20981023,
      "node_id": "MDQ6VXNlcjIwOTgxMDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20981023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/700software",
      "html_url": "https://github.com/700software",
      "followers_url": "https://api.github.com/users/700software/followers",
      "following_url": "https://api.github.com/users/700software/following{/other_user}",
      "gists_url": "https://api.github.com/users/700software/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/700software/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/700software/subscriptions",
      "organizations_url": "https://api.github.com/users/700software/orgs",
      "repos_url": "https://api.github.com/users/700software/repos",
      "events_url": "https://api.github.com/users/700software/events{/privacy}",
      "received_events_url": "https://api.github.com/users/700software/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710375792,
        "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
        "name": "Type: Discussion",
        "color": "fef2c0",
        "default": false,
        "description": null
      },
      {
        "id": 1249821345,
        "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
        "name": "Component: ESLint Rules",
        "color": "f7afdb",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T17:12:34Z",
    "updated_at": "2024-12-11T17:38:07Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nLatest version `eslint-plugin-react-hooks@5.1.0`\r\n\r\n## Steps To Reproduce\r\n\r\n```\r\nexport function _SomeComponentWeNotWantUsedOutsideThisDirectory() {\r\n  const result = useSomeHook();\r\n}\r\n```\r\n\r\n## The current behavior\r\nProduces eslint error\r\n\r\n> React Hook \"useSomeHook\" is called in function \"_SomeComponentWeNotWantUsedOutsideThisDirectory\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\". eslint([react-hooks/rules-of-hooks](https://reactjs.org/docs/hooks-rules.html))\r\n\r\n\r\n## The expected behavior\r\n\r\nNo eslint warning, because we have clearly indicated it is a component using the uppercase letter after the underscore prefix.\r\n\r\n## Proposed solution\r\n\r\nhttps://github.com/facebook/react/blob/4a8fc0f92e0f75257962522b51a938bf4dfda77a/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js#L49\r\n\r\ncould be easily changed to\r\n\r\n```ts\r\n  return node.type === 'Identifier' && /^_?[A-Z]/.test(node.name);\r\n```\r\n\r\nI have thought about whether it should be a config option but I'm leaning towards 'less is more'. Either  way, I'm willing to make PR for this and test coverage but need confirmation you guys will take this into consideration before I put in the work.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31722/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31721",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31721/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31721/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31721/events",
    "html_url": "https://github.com/facebook/react/pull/31721",
    "id": 2730552444,
    "node_id": "PR_kwDOAJy2Ks6Euqk7",
    "number": 31721,
    "title": "Fix canary version strings",
    "user": {
      "login": "jackpope",
      "id": 8965173,
      "node_id": "MDQ6VXNlcjg5NjUxNzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8965173?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackpope",
      "html_url": "https://github.com/jackpope",
      "followers_url": "https://api.github.com/users/jackpope/followers",
      "following_url": "https://api.github.com/users/jackpope/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackpope/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackpope/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackpope/subscriptions",
      "organizations_url": "https://api.github.com/users/jackpope/orgs",
      "repos_url": "https://api.github.com/users/jackpope/repos",
      "events_url": "https://api.github.com/users/jackpope/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackpope/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      },
      {
        "id": 1775958285,
        "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
        "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
        "name": "React Core Team",
        "color": "9149d1",
        "default": false,
        "description": "Opened by a member of the React Core Team"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T16:09:04Z",
    "updated_at": "2024-12-10T21:39:23Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31721",
      "html_url": "https://github.com/facebook/react/pull/31721",
      "diff_url": "https://github.com/facebook/react/pull/31721.diff",
      "patch_url": "https://github.com/facebook/react/pull/31721.patch",
      "merged_at": null
    },
    "body": "We're still publishing RCs and creating canary version strings using the RC naming convention. Setting the `canaryChannelLabel` back to canary fixes the version names and tags after the 19 stable release.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31721/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31719",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31719/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31719/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31719/events",
    "html_url": "https://github.com/facebook/react/issues/31719",
    "id": 2730053571,
    "node_id": "I_kwDOAJy2Ks6iuU_D",
    "number": 31719,
    "title": "Bug: Detached Elements Observed When Toggling Content with ReactDOM.createPortal()",
    "user": {
      "login": "suraj-pachakar",
      "id": 60176976,
      "node_id": "MDQ6VXNlcjYwMTc2OTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/60176976?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suraj-pachakar",
      "html_url": "https://github.com/suraj-pachakar",
      "followers_url": "https://api.github.com/users/suraj-pachakar/followers",
      "following_url": "https://api.github.com/users/suraj-pachakar/following{/other_user}",
      "gists_url": "https://api.github.com/users/suraj-pachakar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suraj-pachakar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suraj-pachakar/subscriptions",
      "organizations_url": "https://api.github.com/users/suraj-pachakar/orgs",
      "repos_url": "https://api.github.com/users/suraj-pachakar/repos",
      "events_url": "https://api.github.com/users/suraj-pachakar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suraj-pachakar/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T12:56:47Z",
    "updated_at": "2024-12-10T12:56:47Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "We observed a possible memory leak when using `ReactDOM.createPortal()` to render components. The issue occurs when toggling the portal content between a `RadioGroup` and the text `Loading...`. If the `RadioGroup` is interacted with before toggling, some DOM elements are not properly cleaned up, leaving detached nodes in memory.\r\n\r\nHowever, if no interaction happens with the `RadioGroup`, the content toggles without any memory issues.\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Visit the [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl).\r\n2. Click on the Load Content button to render the `RadioGroup`.\r\n3. Interact with the `RadioGroup` by selecting the Other option. (eg: option B)\r\n4. Click on the Unload Content button to remove the `RadioGroup`.\r\n5. Open the Memory tab in the browser developer tools and trigger Garbage Collection.\r\n6. Select the **Detached Elements** profiling type and take a snapshot of the memory to observe detached nodes.\r\n\r\nLink to code example: [JSFiddle example](https://jsfiddle.net/egz6jbx5/2/#&togetherjs=hoy8etANLl)\r\n\r\n## The current behavior\r\nDetached elements are present in the memory snapshot after interacting with the `RadioGroup` and toggling it off. This indicates a potential memory leak caused by `ReactDOM.createPortal()`.\r\n![image](https://github.com/user-attachments/assets/9dc8fdf2-fb68-4089-9f9c-5d5198c1f95f)\r\n\r\n\r\n## The expected behavior\r\nDetached nodes should not be present after toggling the `RadioGroup` and triggering garbage collection, regardless of interactions.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31719/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31718",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31718/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31718/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31718/events",
    "html_url": "https://github.com/facebook/react/issues/31718",
    "id": 2729618823,
    "node_id": "I_kwDOAJy2Ks6isq2H",
    "number": 31718,
    "title": "Bug: `select` menu won't update highlight when options change",
    "user": {
      "login": "paalss",
      "id": 39744024,
      "node_id": "MDQ6VXNlcjM5NzQ0MDI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/39744024?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paalss",
      "html_url": "https://github.com/paalss",
      "followers_url": "https://api.github.com/users/paalss/followers",
      "following_url": "https://api.github.com/users/paalss/following{/other_user}",
      "gists_url": "https://api.github.com/users/paalss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paalss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paalss/subscriptions",
      "organizations_url": "https://api.github.com/users/paalss/orgs",
      "repos_url": "https://api.github.com/users/paalss/repos",
      "events_url": "https://api.github.com/users/paalss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paalss/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-10T09:58:11Z",
    "updated_at": "2024-12-10T10:01:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "If a `<select>`'s options changes (e.g. if options are loaded asynchronously) while the menu is open, the `<select>` won't re-examine its options to update its highlight position (`selectedIndex`). \r\n\r\nIn the Codesandbox example below, I have a select menu that will have its options swapped out 1 second after it receives focus. This is to simulate the fetch call that I'm doing in my real app.\r\n\r\nReact version: 19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n**Browser:** Either use Google Chrome or Microsoft Edge, it's not reproducible in Firefox.\r\n\r\nBrowser versions:\r\n\r\n- Google Chrome – Version 131.0.6778.109 (Official Build) (64-bit)\r\n- Microsoft Edge – Version 131.0.2903.86 (Official build) (64-bit)\r\n\r\n\r\n1. Open [this Codesandbox](https://codesandbox.io/p/sandbox/select-menu-with-dynamic-options-forked-nvt488?workspaceId=ws_DVJY22si5M9kiWeZb4Ybth)\r\n2. Click on the select menu\r\n3. Watch as the complete options list replaces the old one\r\n\r\n1 ![image](https://github.com/user-attachments/assets/69a7ca1a-2c01-42b2-ae4e-9f08be431a2b) 2 ![image](https://github.com/user-attachments/assets/dba3eb0e-4043-4ba7-96a7-64f6ff583529) 3 ![image](https://github.com/user-attachments/assets/25b9f490-ddf4-4698-bc91-beb16fddfcc5)\r\n\r\n## The current behavior\r\n\r\nWhen the new options replaces the old ones, the highlight position stays on the first element. Only after closing and re-opening the menu, the highlight goes to the option with `value=\"italy\"`\r\n\r\n## The expected behavior\r\n\r\nI want the select menu to highlight the `value=\"italy\"`  option after options are replaced",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31718/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31717",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31717/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31717/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31717/events",
    "html_url": "https://github.com/facebook/react/issues/31717",
    "id": 2729305831,
    "node_id": "I_kwDOAJy2Ks6irebn",
    "number": 31717,
    "title": "[eslint-plugin-react-hooks] v5.1.0 was released without any changes in github",
    "user": {
      "login": "aqeelat",
      "id": 5212744,
      "node_id": "MDQ6VXNlcjUyMTI3NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5212744?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aqeelat",
      "html_url": "https://github.com/aqeelat",
      "followers_url": "https://api.github.com/users/aqeelat/followers",
      "following_url": "https://api.github.com/users/aqeelat/following{/other_user}",
      "gists_url": "https://api.github.com/users/aqeelat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aqeelat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aqeelat/subscriptions",
      "organizations_url": "https://api.github.com/users/aqeelat/orgs",
      "repos_url": "https://api.github.com/users/aqeelat/repos",
      "events_url": "https://api.github.com/users/aqeelat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aqeelat/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-10T07:50:10Z",
    "updated_at": "2024-12-11T08:44:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The newer version is released https://www.npmjs.com/package/eslint-plugin-react-hooks/v/5.1.0\r\n\r\nHowever, there aren't any changes in the package dir here as of the time of posting the issue.\r\nhttps://github.com/facebook/react/tree/372ec00c0384cd2089651154ea7c67693ee3f2a5/packages/eslint-plugin-react-hooks\r\n\r\nThis is concerning because it could indicate that someone published on behalf of the react team.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31717/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31712",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31712/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31712/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31712/events",
    "html_url": "https://github.com/facebook/react/pull/31712",
    "id": 2728149079,
    "node_id": "PR_kwDOAJy2Ks6EmT9E",
    "number": 31712,
    "title": "[compiler] Implement support for non-declaration for initializers",
    "user": {
      "login": "mvitousek",
      "id": 1629813,
      "node_id": "MDQ6VXNlcjE2Mjk4MTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1629813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mvitousek",
      "html_url": "https://github.com/mvitousek",
      "followers_url": "https://api.github.com/users/mvitousek/followers",
      "following_url": "https://api.github.com/users/mvitousek/following{/other_user}",
      "gists_url": "https://api.github.com/users/mvitousek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mvitousek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mvitousek/subscriptions",
      "organizations_url": "https://api.github.com/users/mvitousek/orgs",
      "repos_url": "https://api.github.com/users/mvitousek/repos",
      "events_url": "https://api.github.com/users/mvitousek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mvitousek/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T20:04:20Z",
    "updated_at": "2024-12-10T18:39:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31712",
      "html_url": "https://github.com/facebook/react/pull/31712",
      "diff_url": "https://github.com/facebook/react/pull/31712.diff",
      "patch_url": "https://github.com/facebook/react/pull/31712.patch",
      "merged_at": null
    },
    "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #31723\n* __->__ #31712\n\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31712/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31708",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31708/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31708/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31708/events",
    "html_url": "https://github.com/facebook/react/issues/31708",
    "id": 2726551905,
    "node_id": "I_kwDOAJy2Ks6ig-Fh",
    "number": 31708,
    "title": "Bug: useOptimistic",
    "user": {
      "login": "olegdunkan",
      "id": 1710435,
      "node_id": "MDQ6VXNlcjE3MTA0MzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1710435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/olegdunkan",
      "html_url": "https://github.com/olegdunkan",
      "followers_url": "https://api.github.com/users/olegdunkan/followers",
      "following_url": "https://api.github.com/users/olegdunkan/following{/other_user}",
      "gists_url": "https://api.github.com/users/olegdunkan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/olegdunkan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/olegdunkan/subscriptions",
      "organizations_url": "https://api.github.com/users/olegdunkan/orgs",
      "repos_url": "https://api.github.com/users/olegdunkan/repos",
      "events_url": "https://api.github.com/users/olegdunkan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/olegdunkan/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-12-09T09:58:35Z",
    "updated_at": "2024-12-09T20:16:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "React version:19.0.0\r\n[I got example from react.dev](https://react.dev/reference/react/useOptimistic) slightly modified it.\r\n \r\nNow `key` attribute derive value from data (message)\r\n```\r\n        <div key={message.id}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n```\r\n\r\n## Steps To Reproduce\r\n\r\n1.[Open link](https://codesandbox.io/p/sandbox/react-dev-forked-5hddwt)\r\n2.Send new message\r\n3.Open console\r\n\r\n## The current behavior\r\nOn the image below we can see duplicating list of messages from [I got example from react.dev](https://react.dev/reference/react/useOptimistic).\r\n![image](https://github.com/user-attachments/assets/4868e7d0-7eb1-4e29-ac11-eff9047982f7)\r\n\r\nThere was no error in [I got example from react.dev](https://react.dev/reference/react/useOptimistic) because `key` gets values from `index`, `index` is always unique.\r\n\r\n        <div key={index}>\r\n          {message.text}\r\n          {!!message.sending && <small> (Sending...)</small>}\r\n        </div>\r\n\r\nCode that is slightly modified by me print out following (from console):\r\n\r\n> Encountered two children with the same key, `8908d3a9-13b7-4576-bf85-e850f7ab2c1c`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted — the behavior is unsupported and could change in a future version\r\n\r\nI don't know the reason of that behaviour but I see that `updateFn` in `useOptimistic` is called with `new message` twice:\r\n1. First time after `addOptimisticMessage` is called, \r\n2. Second time while `Thread` component is re-rendered.\r\n\r\n\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31708/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31706",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31706/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31706/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31706/events",
    "html_url": "https://github.com/facebook/react/pull/31706",
    "id": 2726176299,
    "node_id": "PR_kwDOAJy2Ks6EfcDO",
    "number": 31706,
    "title": "perf(SSR): remove regexp in function escapeHtml",
    "user": {
      "login": "ShuiRuTian",
      "id": 28779355,
      "node_id": "MDQ6VXNlcjI4Nzc5MzU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28779355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShuiRuTian",
      "html_url": "https://github.com/ShuiRuTian",
      "followers_url": "https://api.github.com/users/ShuiRuTian/followers",
      "following_url": "https://api.github.com/users/ShuiRuTian/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShuiRuTian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShuiRuTian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShuiRuTian/subscriptions",
      "organizations_url": "https://api.github.com/users/ShuiRuTian/orgs",
      "repos_url": "https://api.github.com/users/ShuiRuTian/repos",
      "events_url": "https://api.github.com/users/ShuiRuTian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShuiRuTian/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2024-12-09T06:59:59Z",
    "updated_at": "2024-12-10T07:19:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31706",
      "html_url": "https://github.com/facebook/react/pull/31706",
      "diff_url": "https://github.com/facebook/react/pull/31706.diff",
      "patch_url": "https://github.com/facebook/react/pull/31706.patch",
      "merged_at": null
    },
    "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn test --debug --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nRegular expression is slow, removing them in escapeHtml should make things faster\r\n\r\nI did similar change in vue at first: https://github.com/vuejs/core/pull/12507#issue-2724750870\r\n\r\nThen I took a look at react and found vue copied react's implementation, then why not let react have this improvement too?\r\n\r\n## How did you test this change?\r\n\r\nSome simple benchmark by me and @Justineo\r\n\r\nhttps://jsbench.me/rqm4ehfndc/1, shows for simple cases, it's 2x~3x faster\r\nhttps://jsben.ch/pbGau, shows for random string, it's 1.1x faster\r\n\r\nAlso cc @aickin, who refactor escapeHtml 8 years ago, maybe you might have interest in this PR too\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31706/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31705",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31705/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31705/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31705/events",
    "html_url": "https://github.com/facebook/react/issues/31705",
    "id": 2726112761,
    "node_id": "I_kwDOAJy2Ks6ifS35",
    "number": 31705,
    "title": "Bug: memory leak caused by alternate fiber tree",
    "user": {
      "login": "y122972",
      "id": 28836754,
      "node_id": "MDQ6VXNlcjI4ODM2NzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/28836754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/y122972",
      "html_url": "https://github.com/y122972",
      "followers_url": "https://api.github.com/users/y122972/followers",
      "following_url": "https://api.github.com/users/y122972/following{/other_user}",
      "gists_url": "https://api.github.com/users/y122972/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/y122972/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/y122972/subscriptions",
      "organizations_url": "https://api.github.com/users/y122972/orgs",
      "repos_url": "https://api.github.com/users/y122972/repos",
      "events_url": "https://api.github.com/users/y122972/events{/privacy}",
      "received_events_url": "https://api.github.com/users/y122972/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T06:22:53Z",
    "updated_at": "2024-12-09T06:22:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 19\r\n\r\n## Steps To Reproduce\r\n\r\n```typescript\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nconst App = () => {\r\n  const [obj, setObj] = useState<any>({});\r\n  const [count, setCount] = useState(0);\r\n\r\n  const refresh = useCallback(() => {\r\n    const newObj = {\r\n      buffer: new Uint8Array(100_000_000),\r\n      count: count + 1,\r\n    };\r\n    setObj(newObj);\r\n    setCount((pre) => pre + 1);\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={refresh}>new obj({count})</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n```\r\n\r\n## The current behavior\r\n<img width=\"732\" alt=\"image\" src=\"https://github.com/user-attachments/assets/503bfa91-0bae-46cd-a4d7-a103f8cd4e2f\">\r\n\r\n## The expected behavior\r\nrelease the `memoizedState` / `baseState` of alternate fiber tree.\r\n\r\n## Confusion\r\nI know it's not a good way to store a big state using `useState`. But it's a bug or some feature?\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31705/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31704",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31704/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31704/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31704/events",
    "html_url": "https://github.com/facebook/react/issues/31704",
    "id": 2725991162,
    "node_id": "I_kwDOAJy2Ks6ie1L6",
    "number": 31704,
    "title": "[React 19]",
    "user": {
      "login": "Melissa1181",
      "id": 175780127,
      "node_id": "U_kgDOCnoxHw",
      "avatar_url": "https://avatars.githubusercontent.com/u/175780127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Melissa1181",
      "html_url": "https://github.com/Melissa1181",
      "followers_url": "https://api.github.com/users/Melissa1181/followers",
      "following_url": "https://api.github.com/users/Melissa1181/following{/other_user}",
      "gists_url": "https://api.github.com/users/Melissa1181/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Melissa1181/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Melissa1181/subscriptions",
      "organizations_url": "https://api.github.com/users/Melissa1181/orgs",
      "repos_url": "https://api.github.com/users/Melissa1181/repos",
      "events_url": "https://api.github.com/users/Melissa1181/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Melissa1181/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 6688277426,
        "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
        "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
        "name": "React 19",
        "color": "263258",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-09T05:00:41Z",
    "updated_at": "2024-12-09T05:51:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## Summary\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31704/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31703",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31703/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31703/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31703/events",
    "html_url": "https://github.com/facebook/react/issues/31703",
    "id": 2725940076,
    "node_id": "I_kwDOAJy2Ks6ieots",
    "number": 31703,
    "title": "Bug: useEffect Without Dependencies Not Executed Correctly After setState ",
    "user": {
      "login": "SirM2z",
      "id": 12137804,
      "node_id": "MDQ6VXNlcjEyMTM3ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12137804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SirM2z",
      "html_url": "https://github.com/SirM2z",
      "followers_url": "https://api.github.com/users/SirM2z/followers",
      "following_url": "https://api.github.com/users/SirM2z/following{/other_user}",
      "gists_url": "https://api.github.com/users/SirM2z/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SirM2z/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SirM2z/subscriptions",
      "organizations_url": "https://api.github.com/users/SirM2z/orgs",
      "repos_url": "https://api.github.com/users/SirM2z/repos",
      "events_url": "https://api.github.com/users/SirM2z/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SirM2z/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-09T04:17:15Z",
    "updated_at": "2024-12-12T09:06:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.3.1 & 19.0.0\r\n\r\n## Steps To Reproduce\r\nConsider the following example code, where there are two useEffect hooks. \r\n- The first useEffect executes a setFlag, with the value of setFlag being the same as the initial value. The second parameter is an empty array. \r\n- The second useEffect simply logs a message without passing a second argument (i.e., without dependencies) to make it easier to observe the execution behavior. \r\n\r\nThe JSX part of the component contains only a div with a click event, which triggers a setState when clicked.\r\n```jsx\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport function App(props) {\r\n  const [index, setIndex] = useState(0);\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  console.log('index', index);\r\n\r\n  useEffect(() => {\r\n    console.log('setFlag invoke');\r\n    setFlag(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect no dependencies invoke');\r\n    return () => {\r\n      console.log('useEffect no dependencies hook destroyed');\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        console.log('-------------- click --------------');\r\n        setIndex(pre => pre + 1);\r\n      }}\r\n      style={{ color: 'red' }}\r\n    >\r\n      button {index} {Date.now()}\r\n    </div>\r\n  );\r\n}\r\n\r\n```\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://playcode.io/2185135\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nAfter the click event is triggered, the component's render does not occur in tandem with the second useEffect. Render occurs twice, but the second useEffect executes only once.\r\n<img width=\"627\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9ffc9e58-4e89-4bd8-b407-e67837634554\">\r\n\r\n## The expected behavior\r\nAfter the click event is triggered, the component's render should occur in tandem with the second useEffect. Render should happen twice, and the second useEffect should also execute twice.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31703/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31702",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31702/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31702/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31702/events",
    "html_url": "https://github.com/facebook/react/issues/31702",
    "id": 2725265879,
    "node_id": "I_kwDOAJy2Ks6icEHX",
    "number": 31702,
    "title": "[Compiler Bug]: server components built externally by the compiler error when rendered in app",
    "user": {
      "login": "DanielOrtel",
      "id": 19431728,
      "node_id": "MDQ6VXNlcjE5NDMxNzI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/19431728?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DanielOrtel",
      "html_url": "https://github.com/DanielOrtel",
      "followers_url": "https://api.github.com/users/DanielOrtel/followers",
      "following_url": "https://api.github.com/users/DanielOrtel/following{/other_user}",
      "gists_url": "https://api.github.com/users/DanielOrtel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DanielOrtel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DanielOrtel/subscriptions",
      "organizations_url": "https://api.github.com/users/DanielOrtel/orgs",
      "repos_url": "https://api.github.com/users/DanielOrtel/repos",
      "events_url": "https://api.github.com/users/DanielOrtel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DanielOrtel/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929151,
        "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
        "name": "Type: Bug",
        "color": "b60205",
        "default": false,
        "description": null
      },
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      },
      {
        "id": 180616330,
        "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
        "name": "Component: Optimizing Compiler",
        "color": "bfdadc",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T14:09:14Z",
    "updated_at": "2024-12-08T15:51:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://github.com/DanielOrtel/compiler-bug\r\n\r\n### Repro steps\r\n\r\nI'm building an esm UI library and ran into a weird issue with one component when adding react compiler to the build pipeline(which uses rollup with babel). You can check the reproduction repo above, steps:\r\n- set node 20.18.0 if not set automatically\r\n- run `yarn install`\r\n- run `yarn test-compiler-error` // this will build the library and start a bare-bones next app\r\n- open localhost:3000\\\r\n- app should error out with the following:\r\n```\r\nTypeError: Cannot read properties of undefined (reading 'H')\r\n    at IconsRoot (../../libraries/ui/.dist/icons-root/index.js:12:72)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at stringify (<anonymous>)\r\n    at stringify (<anonymous>)\r\n    at AsyncLocalStorage.run (node:async_hooks:346:14)\r\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\r\ndigest: \"2235527820\"\r\n  15 |       require(\"next/dist/compiled/react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\r\n  16 |     exports.c = function (size) {\r\n> 17 |       var dispatcher = ReactSharedInternals.H; // <-- ReactSharedInternals is undefined here. \r\n```\r\n\r\nThis is a limited snippet of the larger UI library. The error occurs because the file doesn't have the `'use client'` directive, but this component should be server-renderable, it's just a barebones `div` component. If I remove the `react-compiler` from the build pipeline or if I make this a client component, it works as expected.\r\n\r\nUltimately, I'd expect adding the compiler to the build pipeline of my library to not break components which previously could be server rendered and force the use of client directive when it is unnecessary. \r\n\r\nMy suggestion, in case compiler-optimized components can't be rendered in server components, would be to have some config option that can be enabled for libraries to check for client directives and only optimize client components. And also to add some form of an error boundary to let consumers know that they're trying to render a compiler-optimized component in a server environment. The current error is just confusing and it took me a while to figure out what was the exact cause of it. \r\n\r\nBut the ideal scenario would be to not have to worry about in which environment the component is rendered. Sure, the compiler optimizations do nothing on the server, but that means that they could be essentially stubbed and still render as expected. I dislike the idea of having to output separate versions of components that can be potentially server rendered, simply because I'd like the client versions to be optimized by the compiler. \r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19\r\n\r\n### What version of React Compiler are you using?\r\n\r\n19.0.0-beta-df7b47d-20241124",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31702/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31701",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31701/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31701/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31701/events",
    "html_url": "https://github.com/facebook/react/issues/31701",
    "id": 2725003192,
    "node_id": "I_kwDOAJy2Ks6ibD-4",
    "number": 31701,
    "title": "Bug: creation reactjs new project latest so v19 ",
    "user": {
      "login": "Productivix",
      "id": 6737060,
      "node_id": "MDQ6VXNlcjY3MzcwNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6737060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Productivix",
      "html_url": "https://github.com/Productivix",
      "followers_url": "https://api.github.com/users/Productivix/followers",
      "following_url": "https://api.github.com/users/Productivix/following{/other_user}",
      "gists_url": "https://api.github.com/users/Productivix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Productivix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Productivix/subscriptions",
      "organizations_url": "https://api.github.com/users/Productivix/orgs",
      "repos_url": "https://api.github.com/users/Productivix/repos",
      "events_url": "https://api.github.com/users/Productivix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Productivix/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 155984160,
        "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
        "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
        "name": "Status: Unconfirmed",
        "color": "d4c5f9",
        "default": false,
        "description": "A potential issue that we haven't yet confirmed as a bug"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-12-08T07:20:00Z",
    "updated_at": "2024-12-08T07:20:00Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:19.0.0\r\n\r\n## Steps To Reproduce\r\n\r\n1.npx create-react-app module\r\n2. wait \r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nCreating a new React app in /..../module\r\n\r\nInstalling packages. This might take a couple of minutes.\r\nInstalling react, react-dom, and react-scripts with cra-template...\r\n\r\n\r\nadded 1315 packages in 10m\r\n\r\n261 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nInitialized a git repository.\r\n\r\nInstalling template dependencies using npm...\r\nnpm error code ERESOLVE\r\nnpm error ERESOLVE unable to resolve dependency tree\r\nnpm error\r\nnpm error While resolving: module_loginweb_reactjs@0.1.0\r\nnpm error Found: react@19.0.0\r\nnpm error node_modules/react\r\nnpm error   react@\"^19.0.0\" from the root project\r\nnpm error\r\nnpm error Could not resolve dependency:\r\nnpm error peer react@\"^18.0.0\" from @testing-library/react@13.4.0\r\nnpm error node_modules/@testing-library/react\r\nnpm error   @testing-library/react@\"^13.0.0\" from the root project\r\nnpm error\r\nnpm error Fix the upstream dependency conflict, or retry\r\nnpm error this command with --force or --legacy-peer-deps\r\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm error\r\nnpm error\r\nnpm error For a full report see:\r\nnpm error /.../.npm/_logs/2024-12-08T06_26_18_730Z-eresolve-report.txt\r\nnpm error A complete log of this run can be found in: ..\r\n\r\n## The expected behavior\r\nno error",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31701/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31701/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/31700",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/31700/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/31700/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/31700/events",
    "html_url": "https://github.com/facebook/react/pull/31700",
    "id": 2724999229,
    "node_id": "PR_kwDOAJy2Ks6EbZxm",
    "number": 31700,
    "title": "Failing test for controlled input elements in forms incorrectly resetting",
    "user": {
      "login": "jeremy-deutsch",
      "id": 13303900,
      "node_id": "MDQ6VXNlcjEzMzAzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/13303900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremy-deutsch",
      "html_url": "https://github.com/jeremy-deutsch",
      "followers_url": "https://api.github.com/users/jeremy-deutsch/followers",
      "following_url": "https://api.github.com/users/jeremy-deutsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremy-deutsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremy-deutsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremy-deutsch/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremy-deutsch/orgs",
      "repos_url": "https://api.github.com/users/jeremy-deutsch/repos",
      "events_url": "https://api.github.com/users/jeremy-deutsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremy-deutsch/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-12-08T07:08:17Z",
    "updated_at": "2024-12-08T07:09:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "draft": false,
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/31700",
      "html_url": "https://github.com/facebook/react/pull/31700",
      "diff_url": "https://github.com/facebook/react/pull/31700.diff",
      "patch_url": "https://github.com/facebook/react/pull/31700.patch",
      "merged_at": null
    },
    "body": "## Summary\r\n\r\nThis sets up a failing test for https://github.com/facebook/react/issues/31695. It checks that controlled inputs are not reset by a form's `reset()` method. This currently fails for `<input type=\"checkbox\" />` and `<input type=\"radio\" />`. It works fine for regular text inputs, but I figured it would be good to include those in the test as well.\r\n\r\n## How did you test this change?\r\n\r\nThis change is tests 🙂",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/facebook/react/issues/31700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/facebook/react/issues/31700/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]